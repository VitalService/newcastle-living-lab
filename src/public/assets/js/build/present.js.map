{"version":3,"sources":["webpack:///present.js","webpack:///webpack/bootstrap 5d6b17ea7714318a9bc7","webpack:///./node_modules/backbone.radio/build/backbone.radio.js","webpack:///./node_modules/backbone.marionette/lib/backbone.marionette.js","webpack:///./node_modules/backbone/backbone.js","webpack:///./config/present.js","webpack:///./node_modules/jquery/dist/jquery.js","webpack:///./node_modules/underscore/underscore.js","webpack:///./components/common.js","webpack:///./node_modules/lodash/lodash.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/html5sortable/dist/html.sortable.js","webpack:///./app/present.js","webpack:///./components/present_comms.js","webpack:///./components/present_store.js","webpack:///./collections/group_collection.js","webpack:///./models/group_model.js","webpack:///./collections/layer_collection.js","webpack:///./models/layer_model.js","webpack:///./collections/view_collection.js","webpack:///./models/view_model.js","webpack:///./collections/event_collection.js","webpack:///./models/event_model.js","webpack:///(webpack)/buildin/module.js","webpack:///./models/project_model.js","webpack:///./views/present_app_view.js","webpack:///./node_modules/vex-js/dist/js/vex.js","webpack:///./views/screens_view.js","webpack:///./views/group_list_view.js","webpack:///./views/group_item_view.js","webpack:///./views/event_list_view.js","webpack:///./node_modules/sortablejs/Sortable.js","webpack:///./views/event_item_view.js","webpack:///./templates/event_item_view.html","webpack:///./templates/event_item_screen_view.html","webpack:///./templates/group_item_view.html","webpack:///./templates/event_header_view.html","webpack:///./views/view_edit_view.js","webpack:///./templates/view_edit_view.html","webpack:///./views/group_edit_view.js","webpack:///./templates/group_edit_view.html","webpack:///./views/event_edit_view.js","webpack:///./templates/event_edit_view.html","webpack:///./templates/event_edit_screen_layer.html","webpack:///./views/present_view.js","webpack:///./templates/present.html","webpack:///./templates/present_app_view.html","webpack:///./node_modules/vex-dialog/dist/vex.dialog.js","webpack:///./actions/app_start.js","webpack:///./actions/io_updates.js","webpack:///./actions/store.js","webpack:///./actions/views.js","webpack:///./actions/groups.js","webpack:///./actions/events.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","global","factory","_","Backbone","removeHandler","store","callback","context","event","_callback","removeHandlers","names","keys","matched","length","_partial","channelName","_logs","bind","Radio","log","makeCallback","isFunction","_typeof","Symbol","iterator","obj","constructor","previousRadio","VERSION","noConflict","this","DEBUG","_debugText","warning","eventName","debugLog","console","warn","eventSplitter","_eventsApi","action","rest","results","key","result","apply","concat","test","extend","split","_callHandler","args","a1","a2","a3","toArray","arguments","slice","tuneIn","channel","_tunedIn","on","tuneOut","off","Requests","request","requests","_requests","handler","reply","replyOnce","self","once","stopReplying","_channels","Error","Channel","Events","reset","stopListening","systems","each","system","method","methodName","channels","getEventName","match","prefix","toUpperCase","triggerMethod","_len","Array","_key","getOnMethodName","getOption","trigger","triggerMethodOn","_len2","_key2","triggerMethodChildren","view","shouldTrigger","_getImmediateChildren","child","shouldTriggerAttach","_isAttached","shouldAttach","shouldTriggerDetach","shouldDetach","triggerDOMRefresh","_isRendered","triggerDOMRemove","handleBeforeAttach","handleAttach","handleBeforeDetach","handleDetach","handleBeforeRender","handleRender","monitorViewEvents","_areViewEventsMonitored","before:attach","attach","before:detach","detach","before:render","render","bindFromStrings","target","entity","evt","methods","actionName","methodNames","MarionetteError","iterateEvents","bindings","isObject","message","url","isString","bindEvents","unbindEvents","iterateReplies","normalizedRadioRequests","normalizeMethods","bindRequests","unbindRequests","getBehaviorClass","options","behaviorClass","Marionette","Behaviors","behaviorsLookup","parseBehaviors","behaviors","chain","map","BehaviorClass","_options","behavior","flatten","value","uniqueName","selector","uniqueId","isEnabled","FEATURES","setEnabled","state","buildViewTrigger","triggerDef","shouldPreventDefault","preventDefault","shouldStopPropagation","stopPropagation","_getEl","el","$","setDomApi","mixin","Dom","renderView","supportsRenderLifecycle","destroyView","destroy","supportsDestroyLifecycle","_shouldDisableEvents","remove","_isDestroyed","buildRegionFromDefinition","definition","defaults","opts","buildRegionFromObject","regionClass","deprecate","omit","stringComparator","comparator","model","proxy","Model","prev","next","DEV_MODE","_cache","_warn","_console","noop","isNodeAttached","document","documentElement","contains","parentNode","mergeOptions","_this","option","optionName","hash","reduce","normalizedHash","splitter","memoize","replace","errorProps","urlRoot","error","pick","captureStackTrace","toString","setOptions","CommonMixin","_setOptions","RadioMixin","_initRadio","_channel","radioEvents","radioRequests","_destroyRadio","getChannel","ClassOptions","MarionetteObject","_setCid","initialize","cidPrefix","isDestroyed","cid","TemplateCache","templateId","templateCaches","cachedTemplate","load","clear","compiledTemplate","template","loadTemplate","compileTemplate","$template","html","rawTemplate","_invoke","invokeMap","invoke","BehaviorsMixin","_initBehaviors","_behaviors","_getBehaviors","_getBehaviorTriggers","triggers","memo","_triggers","_getBehaviorEvents","events","_events","_proxyBehaviorViewProperties","_delegateBehaviorEntityEvents","_undelegateBehaviorEntityEvents","_destroyBehaviors","_removeBehavior","without","_bindBehaviorUIElements","_unbindBehaviorUIElements","_triggerEventOnBehaviors","DelegateEntityEventsMixin","_delegateEntityEvents","collection","_undelegateEntityEvents","modelEvents","collectionEvents","delegateEventSplitter","getUniqueEventName","childViewEventPrefix","triggersStopPropagation","triggersPreventDefault","TriggersMixin","_getViewTriggers","_normalizeUIKeys","ui","val","_normalizeUIString","uiString","r","_normalizeUIValues","properties","isArray","propertyVal","UIMixin","normalizeUIKeys","uiBindings","_getUIBindings","normalizeUIString","normalizeUIValues","_bindUIElements","_uiBindings","_ui","_unbindUIElements","_this2","$el","_getUI","DomApi","createBuffer","createDocumentFragment","getEl","findEl","find","hasEl","childEl","detachEl","replaceEl","newEl","oldEl","parent","replaceChild","swapEl","el1","el2","parent1","parent2","next1","nextSibling","next2","insertBefore","setContents","appendContents","contents","_ref","_ref$_$el","_$el","_ref$_$contents","_$contents","append","hasContents","hasChildNodes","detachContents","ViewMixin","isRendered","isAttached","delegateEvents","eventsArg","_buildEventProxies","viewEvents","_getEvents","combinedEvents","getTriggers","View","delegateEntityEvents","undelegateEntityEvents","unbindUIElements","_removeElement","_removeChildren","removeData","bindUIElements","getUI","ret","_childViewEvents","_childViewTriggers","_proxyChildViewEvents","listenTo","_childViewEventHandler","childViewEvents","childViewTriggers","childEventName","ClassOptions$2","Region","replaceElement","_isReplaced","_isSwappingView","_initEl","show","_ensureElement","_getView","currentView","empty","_setupChildView","_attachView","_empty","parentView","_parentView","_shouldDisableMonitoring","shouldReplaceEl","_replaceEl","attachHtml","allowMissingEl","viewOptions","_getViewOptions","_restoreEl","_detachView","isReplaced","isSwappingView","detachHtml","shouldDestroy","preventDestroy","removeView","_stopChildViewEvents","detachView","shouldRestoreEl","hasView","_name","_removeReferences","buildRegion","RegionsMixin","_initRegions","regions","_regions","addRegions","_reInitRegions","addRegion","isEmpty","_addRegions","regionDefinitions","parentEl","partial","_addRegion","region","removeRegion","_removeRegion","removeRegions","_getRegions","emptyRegions","getRegions","hasRegion","getRegion","clone","showChildView","detachChildView","getChildView","Renderer","data","ClassOptions$1","serializeData","serializeModel","items","serializeCollection","attributes","setElement","_renderTemplate","getTemplate","mixinTemplateContext","_renderHtml","attachElContent","templateContext","compact","setRenderer","renderer","emulateCollection","listProperty","list","Container","views","_views","_indexByModel","_indexByCustom","_updateLength","add","_getViews","values","customIndex","_add","viewCid","findByModel","findByModelCid","modelCid","findByCid","findByCustom","index","findByIndex","_remove","some","size","ClassOptions$3","CollectionView","sort","_initialEvents","_initChildViewStorage","_bufferedChildren","_startBuffering","_isBuffering","_endBuffering","triggerOnChildren","attachBuffer","_createBuffer","children","_onCollectionAdd","_onCollectionUpdate","_sortViews","at","indexOf","filter","_filteredSortedModels","_shouldAddChild","_destroyEmptyView","_addChild","changes","_removeChildModels","removed","models","removedViews","_getRemovedViews","_updateIndices","_showEmptyView","removingViews","_removeChildView","push","_renderChildren","setFilter","preventRender","canBeRendered","filterChanged","previousModels","_applyModelDeltas","removeFilter","currentIds","removeModels","prevModel","reorder","_this3","_showingEmptyView","filteredOutModels","elsToReorder","viewEls","_index","elBuffer","_appendReorderedChildren","resortView","reorderOnSort","_this4","item","_emptyViewIndex","_destroyChildren","processedModels","_showCollection","_createView","ChildView","_getChildView","childViewOptions","_getChildViewOptions","buildChildView","addedAt","viewComparator","getViewComparator","Math","min","max","addedModel","_sortModelsBy","splice","_filterModels","_this5","sortBy","EmptyView","_getEmptyView","emptyViewOptions","addChildView","emptyView","childView","increment","laterView","ChildViewClass","removeChildView","collectionView","buffer","_this6","b","_insertBefore","_insertAfter","beforeEl","siblings","before","Container$1","_init","_viewsByCid","_sort","_sortBy","sortedViews","_set","_swap","view1","view2","view1Index","findIndexByView","view2Index","swapView","ClassOptions$4","CollectionView$2","sortWithCollection","getEmptyRegion","_emptyRegion","_onCollectionSort","_onCollectionReset","update","_addedViews","added","_addChildModels","_detachChildren","_showChildren","_removeChildViews","_removeChildModel","_removeChild","_addChildModel","_createChildView","_sortChildren","allViewsFiltered","_getEmptyViewOptions","emptyRegion","getComparator","setComparator","comparatorChanged","shouldSort","removeComparator","_viewComparator","filteredViews","_filterChildren","_isAddedAtEnd","addedView","addedViews","viewIndex","viewFilter","_getFilter","every","partition","getFilter","matcher","matches","_ref2","shouldRender","detachingViews","_detachChildView","els","_getBuffer","_attachChildren","swapChildViews","_ref3","_destroyChildView","ClassOptions$5","CompositeView","renderChildren","_isRendering","resetChildViewContainer","compositeView","$container","getChildViewContainer","containerView","$childViewContainer","container","childViewContainer","charAt","substr","MixinFromView","ClassOptions$6","Behavior","proxyViewProperties","getEvents","behaviorEvents","behaviorHandler","behaviorTriggers","ClassOptions$7","Application","_initRegion","_region","showView","getView","start","ClassOptions$8","AppRouter","Router","appRoutes","controller","_getController","processAppRoutes","_processOnRoute","appRoute","route","_addAppRoute","routeName","routeArgs","onRoute","routePath","invert","routeNames","reverse","previousMarionette","NextCollectionView","Mn","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","root","previousBackbone","emulateHTTP","emulateJSON","addMethod","attribute","iteratee","cb","defaultVal","unshift","addUnderscoreMethods","Class","instance","_isModel","modelMatcher","attrs","eventsApi","internalOn","listening","onApi","ctx","_listeners","id","_listenId","listeningTo","_listeningTo","thisId","objId","count","handlers","offApi","listeners","ids","remaining","j","onceMap","listenToOnce","offer","triggerApi","objEvents","allEvents","all","triggerEvents","ev","unbind","parse","set","changed","validationError","idAttribute","toJSON","sync","attr","escape","has","_validate","unset","silent","changing","_changing","_previousAttributes","current","isEqual","_pending","hasChanged","changedAttributes","diff","old","previous","previousAttributes","fetch","success","resp","serverAttrs","wrapError","save","validate","wait","isNew","patch","xhr","defer","base","urlError","encodeURIComponent","isValid","pairs","Collection","_reset","merge","addOptions","array","insert","tail","singular","_removeModels","merged","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","existing","_prepareModel","_addReference","orderChanged","_removeReference","pop","shift","_byId","modelId","where","first","findWhere","pluck","create","callbackOpts","_onModelEvent","prevId","forEach","collect","foldl","inject","reduceRight","foldr","detect","select","reject","any","include","includes","head","take","initial","drop","last","difference","shuffle","lastIndexOf","sample","groupBy","countBy","indexBy","findIndex","findLastIndex","tagName","element","undelegateEvents","_setElement","delegate","listener","undelegate","_createElement","createElement","className","class","_setAttributes","type","methodMap","params","dataType","contentType","JSON","stringify","_method","beforeSend","setRequestHeader","processData","textStatus","errorThrown","ajax","delete","read","routes","_bindRoutes","optionalParam","namedParam","splatParam","escapeRegExp","isRegExp","_routeToRegExp","router","history","fragment","_extractParameters","execute","navigate","optional","RegExp","exec","param","decodeURIComponent","History","checkUrl","window","location","routeStripper","rootStripper","pathStripper","started","interval","atRoot","pathname","getSearch","matchRoot","decodeFragment","decodeURI","href","getHash","getPath","path","getFragment","_usePushState","_wantsHashChange","hashChange","_hasHashChange","documentMode","_useHashChange","_wantsPushState","pushState","_hasPushState","rootPath","iframe","src","style","display","tabIndex","body","iWindow","firstChild","contentWindow","open","close","addEventListener","attachEvent","_checkUrlInterval","setInterval","loadUrl","stop","removeEventListener","detachEvent","removeChild","clearInterval","e","title","assign","_updateHash","protoProps","staticProps","__super__","DOM_VK_RETURN","DOM_VK_J","DOM_VK_K","use_io","max_views","max_groups","w","noGlobal","isArrayLike","jQuery","isWindow","winnow","elements","qualifier","not","grep","elem","nodeType","risSimple","sibling","cur","dir","createOptions","rnotwhite","flag","completed","ready","Data","expando","uid","dataAttr","rmultiDash","toLowerCase","getAttribute","rbrace","parseJSON","dataUser","adjustCSS","prop","valueParts","tween","adjusted","scale","maxIterations","currentValue","css","unit","cssNumber","initialInUnit","rcssNum","end","getAll","tag","getElementsByTagName","querySelectorAll","nodeName","setGlobalEval","elems","refElements","dataPriv","buildFragment","scripts","selection","ignored","tmp","wrap","nodes","rhtml","appendChild","rtagName","wrapMap","_default","innerHTML","htmlPrefilter","lastChild","childNodes","textContent","createTextNode","inArray","ownerDocument","rscriptType","returnTrue","returnFalse","safeActiveElement","activeElement","err","types","fn","one","origFn","undefined","guid","manipulationTarget","content","disableScript","restoreScript","rscriptTypeMasked","removeAttribute","cloneCopyEvent","dest","pdataOld","pdataCur","udataOld","udataCur","hasData","access","handle","fixInput","rcheckableType","checked","defaultValue","domManip","hasScripts","node","doc","iNoClone","support","checkClone","rchecked","eq","_evalUrl","globalEval","rcleanScript","keepData","cleanData","actualDisplay","appendTo","defaultDisplay","elemdisplay","contentDocument","write","curCSS","computed","width","minWidth","maxWidth","getStyles","getPropertyValue","pixelMarginRight","rnumnonpx","rmargin","addGetHookIf","conditionFn","hookFn","vendorPropName","emptyStyle","capName","cssPrefixes","setPositiveNumber","subtract","augmentWidthOrHeight","extra","isBorderBox","styles","cssExpand","getWidthOrHeight","valueIsBorderBox","offsetWidth","offsetHeight","boxSizingReliable","parseFloat","showHide","hidden","isHidden","Tween","easing","init","createFxNow","setTimeout","fxNow","now","genFx","includeWidth","which","height","opacity","createTween","animation","Animation","tweeners","defaultPrefilter","props","toggle","hooks","oldfire","anim","orig","dataShow","queue","_queueHooks","unqueued","fire","always","overflow","overflowX","overflowY","rfxtypes","isEmptyObject","done","hide","propFilter","specialEasing","camelCase","cssHooks","expand","stopped","prefilters","deferred","Deferred","tick","currentTime","startTime","duration","temp","percent","tweens","run","notifyWith","resolveWith","promise","originalProperties","originalOptions","gotoEnd","rejectWith","fx","timer","progress","complete","fail","getClass","addToPrefiltersOrTransports","structure","dataTypeExpression","func","dataTypes","inspectPrefiltersOrTransports","jqXHR","inspect","selected","inspected","prefilterOrFactory","dataTypeOrTransport","seekingTransport","transports","ajaxExtend","deep","flatOptions","ajaxSettings","ajaxHandleResponses","responses","ct","finalDataType","firstDataType","mimeType","getResponseHeader","converters","ajaxConvert","response","isSuccess","conv2","conv","responseFields","dataFilter","throws","buildParams","traditional","v","rbracket","getWindow","defaultView","arr","class2type","hasOwn","rtrim","rmsPrefix","rdashAlpha","fcamelCase","letter","jquery","num","pushStack","prevObject","len","copy","copyIsArray","isPlainObject","random","isReady","msg","isNumeric","realStringObj","code","script","indirect","eval","trim","text","string","makeArray","second","callbackExpect","arg","Date","Sizzle","seed","nid","nidselect","groups","newSelector","newContext","preferredDoc","setDocument","documentIsHTML","rquickExpr","getElementById","getElementsByClassName","qsa","compilerCache","rbuggyQSA","rescape","setAttribute","tokenize","ridentifier","toSelector","join","rsibling","testContext","qsaError","createCache","cache","Expr","cacheLength","markFunction","assert","div","addHandle","attrHandle","siblingCheck","a","sourceIndex","MAX_NEGATIVE","createPositionalPseudo","argument","matchIndexes","setFilters","tokens","addCombinator","combinator","checkNonElements","doneName","xml","oldCache","uniqueCache","outerCache","newCache","dirruns","uniqueID","elementMatcher","matchers","multipleContexts","contexts","condense","unmatched","newUnmatched","mapped","setMatcher","preFilter","postFilter","postFinder","postSelector","preMap","postMap","preexisting","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","relative","implicitRelative","matchContext","matchAnyContext","outermostContext","matcherFromGroupMatchers","elementMatchers","setMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","TAG","dirrunsUnique","uniqueSort","getText","isXML","compile","sortInput","hasDuplicate","docElem","rbuggyMatches","classCache","tokenCache","sortOrder","push_native","booleans","whitespace","identifier","pseudos","rwhitespace","rcomma","rcombinators","rattributeQuotes","rpseudo","matchExpr","ID","CLASS","ATTR","PSEUDO","CHILD","bool","needsContext","rinputs","rheader","rnative","runescape","funescape","escaped","escapedWhitespace","high","String","fromCharCode","unloadHandler","hasCompare","top","createComment","getById","getElementsByName","attrId","getAttributeNode","input","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","expr","specified","duplicates","detectDuplicates","sortStable","nodeValue","selectors","createPseudo",">"," ","+","~","excess","unquoted","nodeNameSelector","pattern","operator","check","what","simple","forward","ofType","nodeIndex","useCache","pseudo","idx","innerText","lang","elemLang","focus","hasFocus","enabled","disabled","selectedIndex","header","button","even","odd","lt","gt","nth","radio","checkbox","file","password","image","submit","filters","parseOnly","soFar","preFilters","cached","token","compiled","div1","unique","isXMLDoc","until","truncate","is","rneedsContext","rsingleTag","rootjQuery","parseHTML","rparentsprev","guaranteedUnique","targets","closest","pos","prevAll","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","Callbacks","firing","memory","fired","locked","firingIndex","stopOnFalse","disable","lock","fireWith","tuples","then","fns","newDefer","tuple","returned","notify","resolve","pipe","stateString","when","subordinate","progressValues","progressContexts","resolveContexts","resolveValues","updateFunc","readyList","readyWait","holdReady","hold","triggerHandler","readyState","doScroll","chainable","emptyGet","raw","bulk","acceptData","owner","register","writable","stored","camel","_data","_removeData","camelKey","dequeue","startLength","setter","clearQueue","pnum","source","thead","col","tr","td","optgroup","tbody","tfoot","colgroup","caption","th","cloneNode","noCloneChecked","rkeyEvent","rmouseEvent","rtypenamespace","handleObjIn","eventHandle","t","handleObj","special","namespaces","origType","elemData","triggered","dispatch","delegateType","bindType","namespace","delegateCount","setup","mappedTypes","origCount","teardown","removeEvent","fix","handlerQueue","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","postDispatch","sel","isNaN","fixHooks","keyHooks","original","charCode","keyCode","mouseHooks","eventDoc","pageX","clientX","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","originalEvent","fixHook","Event","noBubble","blur","click","beforeunload","returnValue","isDefaultPrevented","defaultPrevented","timeStamp","isSimulated","stopImmediatePropagation","mouseenter","mouseleave","pointerenter","pointerleave","related","relatedTarget","rxhtmlTag","rnoInnerhtml","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","prepend","after","replaceWith","prependTo","insertAfter","replaceAll","HTML","BODY","opener","getComputedStyle","swap","computeStyleTests","cssText","divStyle","pixelPositionVal","reliableMarginLeftVal","marginLeft","boxSizingReliableVal","marginRight","pixelMarginRightVal","backgroundClip","clearCloneStyle","pixelPosition","reliableMarginLeft","reliableMarginRight","marginDiv","rdisplayswap","cssShow","position","visibility","cssNormalTransform","letterSpacing","fontWeight","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","lineHeight","order","orphans","widows","zIndex","zoom","cssProps","float","origName","isFinite","getBoundingClientRect","left","margin","padding","border","suffix","expanded","parts","propHooks","eased","step","linear","swing","cos","PI","timerId","rrun","*","tweener","prefilter","speed","opt","speeds","fadeTo","to","animate","optall","doAnimation","finish","stopQueue","timers","cssFn","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","slow","fast","delay","time","timeout","clearTimeout","checkOn","optSelected","optDisabled","radioValue","boolHook","removeAttr","nType","attrHooks","propName","attrNames","propFix","rfocusable","rclickable","removeProp","tabindex","parseInt","for","rclass","addClass","classes","curValue","clazz","finalValue","removeClass","toggleClass","stateVal","classNames","hasClass","rreturn","rspaces","valHooks","optionSet","rfocusMorph","onlyHandlers","bubbleType","ontype","eventPath","isTrigger","parentWindow","simulate","hover","fnOver","fnOut","focusin","attaches","nonce","rquery","parseXML","DOMParser","parseFromString","rhash","rts","rheaders","rlocalProtocol","rnoContent","rprotocol","allTypes","originAnchor","active","lastModified","etag","isLocal","protocol","async","accepts","json","* text","text html","text json","text xml","ajaxSetup","settings","ajaxPrefilter","ajaxTransport","status","nativeStatusText","headers","modified","statusText","timeoutTimer","transport","responseHeadersString","ifModified","cacheURL","callbackContext","statusCode","fireGlobals","globalEventContext","completeDeferred","responseHeaders","urlAnchor","requestHeaders","requestHeadersNames","strAbort","getAllResponseHeaders","lname","overrideMimeType","abort","finalText","crossDomain","host","hasContent","send","getJSON","getScript","wrapAll","firstElementChild","wrapInner","unwrap","visible","getClientRects","r20","rCRLF","rsubmitterTypes","rsubmittable","serialize","serializeArray","XMLHttpRequest","xhrSuccessStatus","0","1223","xhrSupported","cors","errorCallback","username","xhrFields","onload","onerror","onabort","onreadystatechange","responseType","responseText","binary","text script","charset","scriptCharset","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","keepScripts","parsed","_load","animated","offset","setOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","calculatePosition","curElem","using","win","box","pageYOffset","pageXOffset","offsetParent","parentOffset","scrollTo","Height","Width","","defaultExtra","funcName","andSelf","_jQuery","_$","createReduce","currentKey","optimizeCb","createPredicateIndexFinder","predicate","getLength","createIndexFinder","predicateFind","sortedIndex","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","proto","ObjProto","previousUnderscore","ArrayProto","FuncProto","Function","nativeIsArray","nativeKeys","nativeBind","nativeCreate","Ctor","_wrapped","argCount","other","accumulator","identity","Infinity","createAssigner","keysFunc","undefinedOnly","baseCreate","MAX_ARRAY_INDEX","pow","findKey","negate","fromIndex","guard","isFunc","lastComputed","rand","shuffled","criteria","right","group","pass","shallow","strict","startIndex","output","isArguments","uniq","isSorted","isBoolean","seen","union","intersection","argsLength","zip","unzip","low","mid","floor","range","ceil","executeBound","sourceFunc","boundFunc","callingContext","TypeError","bound","boundArgs","bindAll","hasher","address","throttle","later","leading","trailing","debounce","immediate","timestamp","callNow","wrapper","compose","times","hasEnumBug","propertyIsEnumerable","allKeys","mapObject","functions","extendOwn","oiteratee","tap","interceptor","isMatch","aStack","bStack","areArrays","aCtor","bCtor","isElement","Int8Array","isNumber","isNull","isUndefined","constant","propertyOf","accum","getTime","escapeMap","&","<","\"","'","`","unescapeMap","createEscaper","escaper","testRegexp","replaceRegexp","unescape","fallback","idCounter","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","oldSettings","variable","_chain","valueOf","checkInput","addMapEntry","pair","addSetEntry","thisArg","arrayAggregator","arrayEach","arrayEachRight","arrayEvery","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","arrayMap","arrayPush","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiToArray","asciiWords","reAsciiWord","baseFindKey","eachFunc","baseFindIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseProperty","basePropertyOf","baseReduce","baseSortBy","comparer","baseTimes","baseToPairs","baseUnary","baseValues","cacheHas","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","escapeStringChar","chr","stringEscapes","getValue","hasUnicode","reHasUnicode","hasUnicodeWord","reHasUnicodeWord","iteratorToArray","mapToArray","overArg","transform","replaceHolders","PLACEHOLDER","setToArray","setToPairs","strictLastIndexOf","stringSize","unicodeSize","asciiSize","stringToArray","unicodeToArray","reUnicode","lastIndex","unicodeWords","reUnicodeWord","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","NaN","MAX_ARRAY_LENGTH","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","asyncTag","boolTag","dateTag","domExcTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsBreakRange","rsMathOpRange","rsBreak","rsCombo","rsLower","rsFitz","rsRegional","rsSurrPair","rsUpper","rsMiscLower","reOptMod","rsModifier","rsOptJoin","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","rsMiscUpper","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","htmlEscapes","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","freeParseFloat","freeParseInt","freeGlobal","freeSelf","freeExports","freeModule","moduleExports","freeProcess","process","nodeUtil","binding","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","deburrLetter","escapeHtmlChar","unescapeHtmlChar","runInContext","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","lazyClone","copyArray","lazyReverse","lazyValue","isArr","isRight","arrLength","iteratees","iterLength","takeCount","nativeMin","baseWrapperValue","outer","iterIndex","Hash","entries","entry","hashClear","__data__","hashDelete","hashGet","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","Map","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","arrayLikeKeys","inherited","isArg","isBuff","isBuffer","isType","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","baseClamp","arrayShuffle","assignMergeValue","baseAssignValue","assignValue","objValue","baseAggregator","baseEach","baseAssign","copyObject","baseAssignIn","keysIn","baseAt","paths","skip","number","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","initCloneArray","getTag","cloneBuffer","initCloneObject","copySymbolsIn","copySymbols","initCloneByTag","stacked","getAllKeysIn","getAllKeys","subValue","baseConforms","baseConformsTo","baseDelay","baseDifference","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","baseGet","castPath","toKey","baseGetAllKeys","symbolsFunc","baseGetTag","symToStringTag","getRawTag","objectToString","baseGt","baseHas","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","caches","maxLength","baseInverter","baseInvoke","baseIsArguments","baseIsArrayBuffer","baseIsDate","baseIsEqual","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","baseIsMatch","matchData","noCustomizer","srcValue","baseIsNative","isMasked","reIsNative","toSource","baseIsRegExp","baseIsSet","baseIsTypedArray","isLength","baseIteratee","baseMatchesProperty","baseMatches","baseKeys","isPrototype","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","baseMergeDeep","newValue","mergeFunc","isTyped","isArrayLikeObject","cloneTypedArray","toPlainObject","baseNth","baseOrderBy","orders","getIteratee","compareMultiple","basePick","basePickBy","baseSet","basePropertyDeep","basePullAll","basePullAt","indexes","baseUnset","nativeFloor","nativeRandom","baseRange","nativeCeil","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","nested","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","symbolToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","actions","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castSlice","allocUnsafe","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","cloneSet","cloneSymbol","symbol","symbolValueOf","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","composeArgs","partials","holders","isCurried","argsIndex","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","getSymbols","getSymbolsIn","createAggregator","initializer","assigner","sources","isIterateeCall","createBaseEach","iterable","createBaseFor","createBind","isBind","createCtor","createCaseFirst","createCompounder","words","deburr","thisBinding","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","getFuncName","getData","isLaziable","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","isFlip","isAry","createInverter","toIteratee","createMathOperation","createOver","arrayFunc","createPadding","chars","charsLength","createPartial","createRange","toFinite","createRelationalOperation","toNumber","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","newData","setData","setWrapToString","createRound","precision","createToPairs","createWrap","mergeData","baseSetData","customDefaultsAssignIn","objectProto","customDefaultsMerge","customOmitClone","isPartial","arrValue","othValue","compared","convert","objProps","objLength","skipCtor","objCtor","othCtor","realNames","otherFunc","isKeyable","getNative","isOwn","unmasked","nativeObjectToString","transforms","getWrapDetails","hasPath","hasFunc","getPrototype","insertWrapDetails","details","spreadableSymbol","maskSrcKey","srcBitmask","newBitmask","isCombo","otherArgs","oldArray","reference","updateWrapDetails","shortOut","lastCalled","stamp","nativeNow","funcToString","chunk","dropRight","dropRightWhile","dropWhile","fill","flattenDeep","flattenDepth","fromPairs","separator","nativeJoin","pullAll","pullAllBy","pullAllWith","nativeReverse","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","takeRight","takeRightWhile","takeWhile","uniqBy","uniqWith","unzipWith","zipObject","zipObjectDeep","wrapperChain","wrapperCommit","wrapperNext","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","orderBy","sampleSize","curry","curryRight","invokeFunc","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerExpired","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","shouldInvoke","trailingEdge","cancel","flush","debounced","isInvoking","flip","resolver","memoized","Cache","spread","unary","castArray","cloneWith","cloneDeep","cloneDeepWith","conformsTo","isEqualWith","isError","nativeIsFinite","isInteger","isMatchWith","isNative","isMaskable","isNil","objectCtorString","isSafeInteger","isWeakMap","isWeakSet","symIterator","remainder","isBinary","toSafeInteger","findLastKey","forIn","forInRight","forOwn","forOwnRight","functionsIn","mapKeys","mapValues","omitBy","pickBy","setWith","isArrLike","updateWith","valuesIn","clamp","inRange","floating","capitalize","upperFirst","endsWith","pad","strLength","padEnd","padStart","radix","nativeParseInt","repeat","limit","startsWith","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","reDelimiters","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","attempt","toLower","toUpper","trimEnd","trimStart","omission","search","substring","newEnd","cond","conforms","defaultTo","matchesProperty","oldDash","nthArg","stubArray","stubFalse","stubObject","stubString","stubTrue","toPath","maxBy","mean","meanBy","minBy","sum","sumBy","arrayProto","funcProto","coreJsData","IE_PROTO","Buffer","getPrototypeOf","objectCreate","isConcatSpreadable","toStringTag","ctxClearTimeout","ctxNow","ctxSetTimeout","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","DataView","Promise","Set","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","baseSetToString","castRest","ArrayBuffer","ctorString","quote","differenceBy","differenceWith","intersectionBy","intersectionWith","pull","pullAt","unionBy","unionWith","xor","xorBy","xorWith","zipWith","wrapperAt","findLast","keyBy","bindKey","overArgs","funcsLength","partialRight","rearg","gte","lte","assignIn","assignWith","defaultsDeep","mergeWith","invertBy","toPairs","toPairsIn","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","flow","flowRight","methodOf","over","overEvery","overSome","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","minuend","subtrahend","entriesIn","extendWith","eachRight","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","commit","g","__WEBPACK_AMD_DEFINE_FACTORY__","_debounce","eContext","dragging","draggingHeight","placeholders","sortables","h5s","_matches","_filter","wanted","_on","_off","_attr","_removeAttr","_offset","rect","scrollX","scrollY","_removeItemEvents","_removeSortableEvents","_attachGhost","ghost","dataTransfer","effectAllowed","setDragImage","draggedItem","x","y","_addGhostPos","_makeGhost","_getGhost","_removeSortableData","_removeItemData","_listsConnected","curList","destList","_getHandles","handles","_destroySortable","sortableElement","_getChildren","_enableSortable","dragDrop","disableIEFix","parentElement","_disableSortable","_reloadSortable","_attached","_html2element","_before","_after","nextElementSibling","_detach","_makeEvent","detail","createEvent","initEvent","_dispatchEventOnConnected","dispatchEvent","_serialize","sortableElements","connectWith","placeholderClass","draggingClass","hoverClass","maxItems","getChildren","Element","serialized","startParent","startList","classList","startparent","newParent","oldDisplay","oldindex","elementIndex","oldElementIndex","endparent","newEndList","newStartList","oldStartList","visiblePlaceholder","debouncedDragOverEnter","thisHeight","placeholderIndex","thisIndex","forcePlaceholderSize","deadZone","offsetTop","onDragOverEnter","dropEffect","enable","config","Comms","Store","PresentAppView","Actions","PresentApp","_comms","_store","_dispatchChannel","server_url","hostname","port","registerActions","actionHandler","onStart","_socket","_dataChannel","_appChannel","_commsChannel","io","respdata","ioUpdate","txPEventsCheckDesign","txPEventsGetPEInfo","txPEventsGetLayerInfo","txPEventsArr","castStartEvent","castPresentEvent","txStartEvent","txPlayEvent","viewcommand","command","project","info","layers","peinfo","statesarr","emit","pel","statearr","sev","seviews","grouparr","startinfo","castind","peviews","screenName","layerId","cmd","peview","viewstate","layerid","scrtxmsg","GroupCollection","LayerCollection","ViewCollection","EventCollection","ProjectModel","_storeChannel","groupCollection","viewCollection","eventCollection","layerCollection","presentevents","playMode","projectModel","setPlayMode","getPlayMode","Bb","GroupModel","handleChangeName","groupModel","oldName","newName","updateIndexes","canAddGroup","createNew","newGroup","tryName","myId","myName","LayerModel","layername","ViewModel","viewModel","canAddView","newView","Common","EventModel","selectedEvent","eventModel","selectEvent","getStartEvent","groupName","pestate","actiontype","addView","renameView","renameGroup","deleteView","storeChannel","parentid","newEvent","getViewData","viewName","screens","viewObj","matchingIdx","webpackPolyfill","createdate","creator","lastdate","screenheight","screenwidth","getName","out","vex","ScreensView","GroupListView","ViewEditView","GroupEditView","EventEditView","PresentView","mainTmpl","registerPlugin","defaultOptions","present","project_name","btn_groups_toggle","btn_add_group","click @ui.btn_groups_toggle","click @ui.btn_add_group","buttons","dialog","YES","alert","contentClassName","confirmDeleteGroup","confirmDeleteEvent","debounceSortables","reloadSortables","onRender","handleGroupsToggle","handleAddGroup","NO","confirm","require","f","u","1","createElementNS","testElement","createMethod","DOMTokenList","_toggle","force","elemCtrProto","objCtr","strTrim","arrIndexOf","DOMEx","DOMException","checkTokenAndGetIndex","ClassList","trimmedClasses","_updateClassName","classListProto","classListGetter","updated","classListPropDesc","ex","__defineGetter__","2","bugTestDiv","innerHTMLBug","legend","polyline","ellipse","polygon","circle","line","3","firstSource","nextSource","keysArray","nextIndex","nextKey","desc","getOwnPropertyDescriptor","polyfill","4","domify","escapeHtml","str","addClasses","classStr","animationEndEvent","eventNames","WebkitAnimation","MozAnimation","OAnimation","msAnimation","baseClassNames","overlay","closing","vexes","globalId","isEscapeActive","warnDeprecated","overlayCSS","contentCSS","closeCSS","vexInstance","isOpen","hasAnimationPre","escapeButtonCloses","beforeClose","contentEl","hasAnimation","rootEl","overlayEl","bodyEl","afterClose","unsafeContent","overlayClassName","overlayClosesOnClick","Node","showCloseButton","closeEl","closeClassName","querySelector","appendLocation","afterOpen","vexOrId","closeTop","closeAll","closeAllOnPopState","pluginFn","plugin","pluginName","classlist-polyfill","es6-object-assign","ScreenButton","change","AddScreenButton","view:add","view:edit","editView","GroupItemView","dom:refresh","group:toggle","group:edit","event:add","_viewCollection","handleActive","onDomRefresh","onChildAttach","toggleGroup","toggleActive","editGroup","addEvent","setActive","setInactive","EventListView","headerTmpl","EventHeaderScreenView","EventHeaderScreensView","EventHeaderView","event_count","group_name","btn_edit","btn_add_event","click .event-group-item-header","click @ui.btn_edit","click @ui.btn_add_event","eventListView","debounceUpdateUi","updateUi","EventItemView","event:play","event:start","event:select","getChildViewCount","startEvent","playEvent","Sortable","_extend","scroll","scrollSensitivity","scrollSpeed","draggable","ghostClass","chosenClass","dragClass","ignore","preventOnFilter","dragEl","dropBubble","dragoverBubble","dataIdAttr","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","_prepareGroup","nativeDraggable","supportDraggable","_onTapStart","touchDragOverListeners","_onDragOver","_cloneHide","lastPullMode","cloneEl","_css","revertClone","nextEl","_animate","_closest","_getParentOrHost","_globalDragOver","captureMode","_toggleClass","R_SPACE","currentStyle","_find","_dispatchEvent","targetEl","fromEl","newIndex","onName","from","oldIndex","_onMove","toEl","dragRect","targetRect","originalEvt","willInsertAfter","retVal","onMoveFn","onMove","dragged","draggedRect","relatedRect","_disableDraggable","_unsilent","_silent","_ghostIsLast","lastEl","lastElementChild","_generateId","charCodeAt","previousElementSibling","re","_throttle","ms","dst","_clone","Polymer","dom","_saveInputCheckedState","inputs","savedInputChecked","ghostEl","lastDownEl","scrollEl","scrollParentEl","scrollCustomFn","lastCSS","lastParentCSS","activeGroup","putSortable","tapEvt","touchEvt","moved","autoScroll","R_FLOAT","Zepto","supportCssPointerEvents","navigator","userAgent","pointerEvents","abs","_autoScroll","vx","vy","scrollOffsetX","scrollOffsetY","sens","winWidth","innerWidth","winHeight","innerHeight","scrollFn","scrollWidth","scrollHeight","bottom","pid","toFn","fromGroup","originalGroup","checkPull","checkPut","put","touch","touches","originalTarget","shadowRoot","_prepareDragStart","dragStartFn","_lastX","_lastY","_disableDelayedDrag","_triggerDragStart","_onDrop","_dragStartTimer","pointerType","_onDragStart","getSelection","removeAllRanges","_dragStarted","_nulling","_emulateDragOver","elementFromPoint","_onTouchMove","dx","dy","translate3d","_appendGhost","ghostRect","marginTop","useFallback","_offUpEvents","_loopId","revert","activeSortable","isOwner","isMovingBetweenSortable","canSort","cssFloat","isWide","isLong","halfway","elTop","tgTop","moveVector","prevRect","currentRect","handleEvent","capture","passive","utils","version","screenViewTmpl","EventItemScreenView","viewData","view_data","EventItemScreensView","btn_start","btn_play","click @ui.btn_start","click @ui.btn_play","deselect","isVisible","scrollIntoView","clientHeight","clientWidth","__t","__p","__j","print","btn_save","btn_cancel","btn_delete","input_name","click @ui.btn_cancel","click @ui.btn_save","click @ui.btn_delete","onAttach","handleCancel","handleSave","handleDelete","keypress @ui.input_name","handleEnter","screenLayerTmpl","SelectOptionView","SelectView","thisLayerId","layer","ScreenLayerItemView","layer_list","ScreenLayerListView","viewdata","$input","selectedLayerId","layerModel","play_mode","btn_next_event","click @ui.play_mode","click @ui.btn_next_event","handleNextEvent","form","serializer","hash_serializer","str_serialize","radio_store","k_r_success_contrls","k_r_submitter","selectOptions","isSelectedOptions","allowedEmpty","hasValue","parse_keys","brackets","hash_assign","between","_values","buildDialogForm","buttonsToDOM","domButtons","domButton","unsafeMessage","_escapeHtml","dialogInstance","shouldClose","onSubmit","focusFirstInput","defaultAlertOptions","defaultConfirmOptions","prompt","defaultPromptOptions","dynamicDefaults","label","form-serialize","handleAppStart","handleDesignReady","handleLayerInfo","handlePeInfo","handleSendEvents","handleUpdateActions","handleCastEvent","handleSendEventStart","handleSendEventPlay","evlists","evl","group_arr","view_arr","event_arr","vi","firstGroup","pei","eventArr","handleStoreSort","handlePlayMode","_eventCollection","_groupCollection","_sortGroups","_sortEvents","groupNodes","modelList","eventNodes","eventModelList","eventModelCid","groupModelCid","eventGroup","groupIdx","eventEl","eventIdx","eventModelItem","startEventModel","handleAddView","handleEditView","handleRenameView","handleDeleteView","handleEditGroup","handleRenameGroup","handleDeleteGroup","appchannel","handleAddEvent","handleSelectEvent","handleChangeEvent","handleDeleteEvent","handleStartEvent","handlePlayEvent","handlePrevEvent","indexOfSelected","indexOfNext","nextEvent","prevEvent"],"mappings":"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","file":"present.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 10);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Backbone.Radio v2.0.0\n\n(function (global, factory) {\n   true ? module.exports = factory(__webpack_require__(5), __webpack_require__(2)) :\n  typeof define === 'function' && define.amd ? define(['underscore', 'backbone'], factory) :\n  (global.Backbone = global.Backbone || {}, global.Backbone.Radio = factory(global._,global.Backbone));\n}(this, function (_,Backbone) { 'use strict';\n\n  _ = 'default' in _ ? _['default'] : _;\n  Backbone = 'default' in Backbone ? Backbone['default'] : Backbone;\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n  };\n\n  var previousRadio = Backbone.Radio;\n\n  var Radio = Backbone.Radio = {};\n\n  Radio.VERSION = '2.0.0';\n\n  // This allows you to run multiple instances of Radio on the same\n  // webapp. After loading the new version, call `noConflict()` to\n  // get a reference to it. At the same time the old version will be\n  // returned to Backbone.Radio.\n  Radio.noConflict = function () {\n    Backbone.Radio = previousRadio;\n    return this;\n  };\n\n  // Whether or not we're in DEBUG mode or not. DEBUG mode helps you\n  // get around the issues of lack of warnings when events are mis-typed.\n  Radio.DEBUG = false;\n\n  // Format debug text.\n  Radio._debugText = function (warning, eventName, channelName) {\n    return warning + (channelName ? ' on the ' + channelName + ' channel' : '') + ': \"' + eventName + '\"';\n  };\n\n  // This is the method that's called when an unregistered event was called.\n  // By default, it logs warning to the console. By overriding this you could\n  // make it throw an Error, for instance. This would make firing a nonexistent event\n  // have the same consequence as firing a nonexistent method on an Object.\n  Radio.debugLog = function (warning, eventName, channelName) {\n    if (Radio.DEBUG && console && console.warn) {\n      console.warn(Radio._debugText(warning, eventName, channelName));\n    }\n  };\n\n  var eventSplitter = /\\s+/;\n\n  // An internal method used to handle Radio's method overloading for Requests.\n  // It's borrowed from Backbone.Events. It differs from Backbone's overload\n  // API (which is used in Backbone.Events) in that it doesn't support space-separated\n  // event names.\n  Radio._eventsApi = function (obj, action, name, rest) {\n    if (!name) {\n      return false;\n    }\n\n    var results = {};\n\n    // Handle event maps.\n    if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object') {\n      for (var key in name) {\n        var result = obj[action].apply(obj, [key, name[key]].concat(rest));\n        eventSplitter.test(key) ? _.extend(results, result) : results[key] = result;\n      }\n      return results;\n    }\n\n    // Handle space separated event names.\n    if (eventSplitter.test(name)) {\n      var names = name.split(eventSplitter);\n      for (var i = 0, l = names.length; i < l; i++) {\n        results[names[i]] = obj[action].apply(obj, [names[i]].concat(rest));\n      }\n      return results;\n    }\n\n    return false;\n  };\n\n  // An optimized way to execute callbacks.\n  Radio._callHandler = function (callback, context, args) {\n    var a1 = args[0],\n        a2 = args[1],\n        a3 = args[2];\n    switch (args.length) {\n      case 0:\n        return callback.call(context);\n      case 1:\n        return callback.call(context, a1);\n      case 2:\n        return callback.call(context, a1, a2);\n      case 3:\n        return callback.call(context, a1, a2, a3);\n      default:\n        return callback.apply(context, args);\n    }\n  };\n\n  // A helper used by `off` methods to the handler from the store\n  function removeHandler(store, name, callback, context) {\n    var event = store[name];\n    if ((!callback || callback === event.callback || callback === event.callback._callback) && (!context || context === event.context)) {\n      delete store[name];\n      return true;\n    }\n  }\n\n  function removeHandlers(store, name, callback, context) {\n    store || (store = {});\n    var names = name ? [name] : _.keys(store);\n    var matched = false;\n\n    for (var i = 0, length = names.length; i < length; i++) {\n      name = names[i];\n\n      // If there's no event by this name, log it and continue\n      // with the loop\n      if (!store[name]) {\n        continue;\n      }\n\n      if (removeHandler(store, name, callback, context)) {\n        matched = true;\n      }\n    }\n\n    return matched;\n  }\n\n  /*\n   * tune-in\n   * -------\n   * Get console logs of a channel's activity\n   *\n   */\n\n  var _logs = {};\n\n  // This is to produce an identical function in both tuneIn and tuneOut,\n  // so that Backbone.Events unregisters it.\n  function _partial(channelName) {\n    return _logs[channelName] || (_logs[channelName] = _.bind(Radio.log, Radio, channelName));\n  }\n\n  _.extend(Radio, {\n\n    // Log information about the channel and event\n    log: function log(channelName, eventName) {\n      if (typeof console === 'undefined') {\n        return;\n      }\n      var args = _.toArray(arguments).slice(2);\n      console.log('[' + channelName + '] \"' + eventName + '\"', args);\n    },\n\n    // Logs all events on this channel to the console. It sets an\n    // internal value on the channel telling it we're listening,\n    // then sets a listener on the Backbone.Events\n    tuneIn: function tuneIn(channelName) {\n      var channel = Radio.channel(channelName);\n      channel._tunedIn = true;\n      channel.on('all', _partial(channelName));\n      return this;\n    },\n\n    // Stop logging all of the activities on this channel to the console\n    tuneOut: function tuneOut(channelName) {\n      var channel = Radio.channel(channelName);\n      channel._tunedIn = false;\n      channel.off('all', _partial(channelName));\n      delete _logs[channelName];\n      return this;\n    }\n  });\n\n  /*\n   * Backbone.Radio.Requests\n   * -----------------------\n   * A messaging system for requesting data.\n   *\n   */\n\n  function makeCallback(callback) {\n    return _.isFunction(callback) ? callback : function () {\n      return callback;\n    };\n  }\n\n  Radio.Requests = {\n\n    // Make a request\n    request: function request(name) {\n      var args = _.toArray(arguments).slice(1);\n      var results = Radio._eventsApi(this, 'request', name, args);\n      if (results) {\n        return results;\n      }\n      var channelName = this.channelName;\n      var requests = this._requests;\n\n      // Check if we should log the request, and if so, do it\n      if (channelName && this._tunedIn) {\n        Radio.log.apply(this, [channelName, name].concat(args));\n      }\n\n      // If the request isn't handled, log it in DEBUG mode and exit\n      if (requests && (requests[name] || requests['default'])) {\n        var handler = requests[name] || requests['default'];\n        args = requests[name] ? args : arguments;\n        return Radio._callHandler(handler.callback, handler.context, args);\n      } else {\n        Radio.debugLog('An unhandled request was fired', name, channelName);\n      }\n    },\n\n    // Set up a handler for a request\n    reply: function reply(name, callback, context) {\n      if (Radio._eventsApi(this, 'reply', name, [callback, context])) {\n        return this;\n      }\n\n      this._requests || (this._requests = {});\n\n      if (this._requests[name]) {\n        Radio.debugLog('A request was overwritten', name, this.channelName);\n      }\n\n      this._requests[name] = {\n        callback: makeCallback(callback),\n        context: context || this\n      };\n\n      return this;\n    },\n\n    // Set up a handler that can only be requested once\n    replyOnce: function replyOnce(name, callback, context) {\n      if (Radio._eventsApi(this, 'replyOnce', name, [callback, context])) {\n        return this;\n      }\n\n      var self = this;\n\n      var once = _.once(function () {\n        self.stopReplying(name);\n        return makeCallback(callback).apply(this, arguments);\n      });\n\n      return this.reply(name, once, context);\n    },\n\n    // Remove handler(s)\n    stopReplying: function stopReplying(name, callback, context) {\n      if (Radio._eventsApi(this, 'stopReplying', name)) {\n        return this;\n      }\n\n      // Remove everything if there are no arguments passed\n      if (!name && !callback && !context) {\n        delete this._requests;\n      } else if (!removeHandlers(this._requests, name, callback, context)) {\n        Radio.debugLog('Attempted to remove the unregistered request', name, this.channelName);\n      }\n\n      return this;\n    }\n  };\n\n  /*\n   * Backbone.Radio.channel\n   * ----------------------\n   * Get a reference to a channel by name.\n   *\n   */\n\n  Radio._channels = {};\n\n  Radio.channel = function (channelName) {\n    if (!channelName) {\n      throw new Error('You must provide a name for the channel.');\n    }\n\n    if (Radio._channels[channelName]) {\n      return Radio._channels[channelName];\n    } else {\n      return Radio._channels[channelName] = new Radio.Channel(channelName);\n    }\n  };\n\n  /*\n   * Backbone.Radio.Channel\n   * ----------------------\n   * A Channel is an object that extends from Backbone.Events,\n   * and Radio.Requests.\n   *\n   */\n\n  Radio.Channel = function (channelName) {\n    this.channelName = channelName;\n  };\n\n  _.extend(Radio.Channel.prototype, Backbone.Events, Radio.Requests, {\n\n    // Remove all handlers from the messaging systems of this channel\n    reset: function reset() {\n      this.off();\n      this.stopListening();\n      this.stopReplying();\n      return this;\n    }\n  });\n\n  /*\n   * Top-level API\n   * -------------\n   * Supplies the 'top-level API' for working with Channels directly\n   * from Backbone.Radio.\n   *\n   */\n\n  var channel;\n  var args;\n  var systems = [Backbone.Events, Radio.Requests];\n  _.each(systems, function (system) {\n    _.each(system, function (method, methodName) {\n      Radio[methodName] = function (channelName) {\n        args = _.toArray(arguments).slice(1);\n        channel = this.channel(channelName);\n        return channel[methodName].apply(channel, args);\n      };\n    });\n  });\n\n  Radio.reset = function (channelName) {\n    var channels = !channelName ? this._channels : [this._channels[channelName]];\n    _.each(channels, function (channel) {\n      channel.reset();\n    });\n  };\n\n  return Radio;\n\n}));\n//# sourceMappingURL=./backbone.radio.js.map\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n* @license\n* MarionetteJS (Backbone.Marionette)\n* ----------------------------------\n* v3.4.3\n*\n* Copyright (c)2017 Derick Bailey, Muted Solutions, LLC.\n* Distributed under MIT license\n*\n* http://marionettejs.com\n*/\n\n\n(function (global, factory) {\n\t true ? module.exports = factory(__webpack_require__(2), __webpack_require__(5), __webpack_require__(0)) :\n\ttypeof define === 'function' && define.amd ? define(['backbone', 'underscore', 'backbone.radio'], factory) :\n\t(global.Marionette = factory(global.Backbone,global._,global.Backbone.Radio));\n}(this, (function (Backbone,_,Radio) { 'use strict';\n\nBackbone = Backbone && Backbone.hasOwnProperty('default') ? Backbone['default'] : Backbone;\n_ = _ && _.hasOwnProperty('default') ? _['default'] : _;\nRadio = Radio && Radio.hasOwnProperty('default') ? Radio['default'] : Radio;\n\nvar version = \"3.4.3\";\n\n//Internal utility for creating context style global utils\nvar proxy = function proxy(method) {\n  return function (context) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return method.apply(context, args);\n  };\n};\n\n// Marionette.extend\n// -----------------\n\n// Borrow the Backbone `extend` method so we can use it as needed\nvar extend = Backbone.Model.extend;\n\n/* global console */\n\nvar deprecate = function deprecate(message, test) {\n  if (_.isObject(message)) {\n    message = message.prev + ' is going to be removed in the future. ' + 'Please use ' + message.next + ' instead.' + (message.url ? ' See: ' + message.url : '');\n  }\n\n  if (!Marionette.DEV_MODE) {\n    return;\n  }\n\n  if ((test === undefined || !test) && !deprecate._cache[message]) {\n    deprecate._warn('Deprecation warning: ' + message);\n    deprecate._cache[message] = true;\n  }\n};\n\n/* istanbul ignore next: can't clear console */\ndeprecate._console = typeof console !== 'undefined' ? console : {};\ndeprecate._warn = function () {\n  var warn = deprecate._console.warn || deprecate._console.log || _.noop;\n  return warn.apply(deprecate._console, arguments);\n};\ndeprecate._cache = {};\n\n// Marionette.isNodeAttached\n// -------------------------\n\n// Determine if `el` is a child of the document\nvar isNodeAttached = function isNodeAttached(el) {\n  return document.documentElement.contains(el && el.parentNode);\n};\n\n// Merge `keys` from `options` onto `this`\nvar mergeOptions = function mergeOptions(options, keys) {\n  var _this = this;\n\n  if (!options) {\n    return;\n  }\n\n  _.each(keys, function (key) {\n    var option = options[key];\n    if (option !== undefined) {\n      _this[key] = option;\n    }\n  });\n};\n\n// Marionette.getOption\n// --------------------\n\n// Retrieve an object, function or other value from the\n// object or its `options`, with `options` taking precedence.\nvar getOption = function getOption(optionName) {\n  if (!optionName) {\n    return;\n  }\n  if (this.options && this.options[optionName] !== undefined) {\n    return this.options[optionName];\n  } else {\n    return this[optionName];\n  }\n};\n\n// Marionette.normalizeMethods\n// ----------------------\n\n// Pass in a mapping of events => functions or function names\n// and return a mapping of events => functions\nvar normalizeMethods = function normalizeMethods(hash) {\n  var _this = this;\n\n  return _.reduce(hash, function (normalizedHash, method, name) {\n    if (!_.isFunction(method)) {\n      method = _this[method];\n    }\n    if (method) {\n      normalizedHash[name] = method;\n    }\n    return normalizedHash;\n  }, {});\n};\n\n// Trigger Method\n// --------------\n\n// split the event name on the \":\"\nvar splitter = /(^|:)(\\w)/gi;\n\n// take the event section (\"section1:section2:section3\")\n// and turn it in to uppercase name onSection1Section2Section3\nfunction getEventName(match, prefix, eventName) {\n  return eventName.toUpperCase();\n}\n\nvar getOnMethodName = _.memoize(function (event) {\n  return 'on' + event.replace(splitter, getEventName);\n});\n\n// Trigger an event and/or a corresponding method name. Examples:\n//\n// `this.triggerMethod(\"foo\")` will trigger the \"foo\" event and\n// call the \"onFoo\" method.\n//\n// `this.triggerMethod(\"foo:bar\")` will trigger the \"foo:bar\" event and\n// call the \"onFooBar\" method.\nfunction triggerMethod(event) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  // get the method name from the event name\n  var methodName = getOnMethodName(event);\n  var method = getOption.call(this, methodName);\n  var result = void 0;\n\n  // call the onMethodName if it exists\n  if (_.isFunction(method)) {\n    // pass all args, except the event name\n    result = method.apply(this, args);\n  }\n\n  // trigger the event\n  this.trigger.apply(this, arguments);\n\n  return result;\n}\n\n// triggerMethodOn invokes triggerMethod on a specific context\n//\n// e.g. `Marionette.triggerMethodOn(view, 'show')`\n// will trigger a \"show\" event or invoke onShow the view.\nfunction triggerMethodOn(context) {\n  for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  if (_.isFunction(context.triggerMethod)) {\n    return context.triggerMethod.apply(context, args);\n  }\n\n  return triggerMethod.apply(context, args);\n}\n\n// DOM Refresh\n// -----------\n\n// Trigger method on children unless a pure Backbone.View\nfunction triggerMethodChildren(view, event, shouldTrigger) {\n  if (!view._getImmediateChildren) {\n    return;\n  }\n  _.each(view._getImmediateChildren(), function (child) {\n    if (!shouldTrigger(child)) {\n      return;\n    }\n    triggerMethodOn(child, event, child);\n  });\n}\n\nfunction shouldTriggerAttach(view) {\n  return !view._isAttached;\n}\n\nfunction shouldAttach(view) {\n  if (!shouldTriggerAttach(view)) {\n    return false;\n  }\n  view._isAttached = true;\n  return true;\n}\n\nfunction shouldTriggerDetach(view) {\n  return view._isAttached;\n}\n\nfunction shouldDetach(view) {\n  if (!shouldTriggerDetach(view)) {\n    return false;\n  }\n  view._isAttached = false;\n  return true;\n}\n\nfunction triggerDOMRefresh(view) {\n  if (view._isAttached && view._isRendered) {\n    triggerMethodOn(view, 'dom:refresh', view);\n  }\n}\n\nfunction triggerDOMRemove(view) {\n  if (view._isAttached && view._isRendered) {\n    triggerMethodOn(view, 'dom:remove', view);\n  }\n}\n\nfunction handleBeforeAttach() {\n  triggerMethodChildren(this, 'before:attach', shouldTriggerAttach);\n}\n\nfunction handleAttach() {\n  triggerMethodChildren(this, 'attach', shouldAttach);\n  triggerDOMRefresh(this);\n}\n\nfunction handleBeforeDetach() {\n  triggerMethodChildren(this, 'before:detach', shouldTriggerDetach);\n  triggerDOMRemove(this);\n}\n\nfunction handleDetach() {\n  triggerMethodChildren(this, 'detach', shouldDetach);\n}\n\nfunction handleBeforeRender() {\n  triggerDOMRemove(this);\n}\n\nfunction handleRender() {\n  triggerDOMRefresh(this);\n}\n\n// Monitor a view's state, propagating attach/detach events to children and firing dom:refresh\n// whenever a rendered view is attached or an attached view is rendered.\nfunction monitorViewEvents(view) {\n  if (view._areViewEventsMonitored || view.monitorViewEvents === false) {\n    return;\n  }\n\n  view._areViewEventsMonitored = true;\n\n  view.on({\n    'before:attach': handleBeforeAttach,\n    'attach': handleAttach,\n    'before:detach': handleBeforeDetach,\n    'detach': handleDetach,\n    'before:render': handleBeforeRender,\n    'render': handleRender\n  });\n}\n\n// Error\n// -----\n\nvar errorProps = ['description', 'fileName', 'lineNumber', 'name', 'message', 'number'];\n\nvar MarionetteError = extend.call(Error, {\n  urlRoot: 'http://marionettejs.com/docs/v' + version + '/',\n\n  constructor: function constructor(message, options) {\n    if (_.isObject(message)) {\n      options = message;\n      message = options.message;\n    } else if (!options) {\n      options = {};\n    }\n\n    var error = Error.call(this, message);\n    _.extend(this, _.pick(error, errorProps), _.pick(options, errorProps));\n\n    this.captureStackTrace();\n\n    if (options.url) {\n      this.url = this.urlRoot + options.url;\n    }\n  },\n  captureStackTrace: function captureStackTrace() {\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, MarionetteError);\n    }\n  },\n  toString: function toString() {\n    return this.name + ': ' + this.message + (this.url ? ' See: ' + this.url : '');\n  }\n});\n\nMarionetteError.extend = extend;\n\n// Bind Entity Events & Unbind Entity Events\n// -----------------------------------------\n//\n// These methods are used to bind/unbind a backbone \"entity\" (e.g. collection/model)\n// to methods on a target object.\n//\n// The first parameter, `target`, must have the Backbone.Events module mixed in.\n//\n// The second parameter is the `entity` (Backbone.Model, Backbone.Collection or\n// any object that has Backbone.Events mixed in) to bind the events from.\n//\n// The third parameter is a hash of { \"event:name\": \"eventHandler\" }\n// configuration. Multiple handlers can be separated by a space. A\n// function can be supplied instead of a string handler name.\n\n// Bind/unbind the event to handlers specified as a string of\n// handler names on the target object\nfunction bindFromStrings(target, entity, evt, methods, actionName) {\n  var methodNames = methods.split(/\\s+/);\n\n  _.each(methodNames, function (methodName) {\n    var method = target[methodName];\n    if (!method) {\n      throw new MarionetteError('Method \"' + methodName + '\" was configured as an event handler, but does not exist.');\n    }\n\n    target[actionName](entity, evt, method);\n  });\n}\n\n// generic looping function\nfunction iterateEvents(target, entity, bindings, actionName) {\n  if (!entity || !bindings) {\n    return;\n  }\n\n  // type-check bindings\n  if (!_.isObject(bindings)) {\n    throw new MarionetteError({\n      message: 'Bindings must be an object.',\n      url: 'marionette.functions.html#marionettebindevents'\n    });\n  }\n\n  // iterate the bindings and bind/unbind them\n  _.each(bindings, function (method, evt) {\n\n    // allow for a list of method names as a string\n    if (_.isString(method)) {\n      bindFromStrings(target, entity, evt, method, actionName);\n      return;\n    }\n\n    target[actionName](entity, evt, method);\n  });\n}\n\nfunction bindEvents(entity, bindings) {\n  iterateEvents(this, entity, bindings, 'listenTo');\n  return this;\n}\n\nfunction unbindEvents(entity, bindings) {\n  iterateEvents(this, entity, bindings, 'stopListening');\n  return this;\n}\n\n// Bind/Unbind Radio Requests\n// -----------------------------------------\n//\n// These methods are used to bind/unbind a backbone.radio request\n// to methods on a target object.\n//\n// The first parameter, `target`, will set the context of the reply method\n//\n// The second parameter is the `Radio.channel` to bind the reply to.\n//\n// The third parameter is a hash of { \"request:name\": \"replyHandler\" }\n// configuration. A function can be supplied instead of a string handler name.\n\nfunction iterateReplies(target, channel, bindings, actionName) {\n  if (!channel || !bindings) {\n    return;\n  }\n\n  // type-check bindings\n  if (!_.isObject(bindings)) {\n    throw new MarionetteError({\n      message: 'Bindings must be an object.',\n      url: 'marionette.functions.html#marionettebindrequests'\n    });\n  }\n\n  var normalizedRadioRequests = normalizeMethods.call(target, bindings);\n\n  channel[actionName](normalizedRadioRequests, target);\n}\n\nfunction bindRequests(channel, bindings) {\n  iterateReplies(this, channel, bindings, 'reply');\n  return this;\n}\n\nfunction unbindRequests(channel, bindings) {\n  iterateReplies(this, channel, bindings, 'stopReplying');\n  return this;\n}\n\n// Internal utility for setting options consistently across Mn\nvar setOptions = function setOptions(options) {\n  this.options = _.extend({}, _.result(this, 'options'), options);\n};\n\nvar CommonMixin = {\n\n  // Imports the \"normalizeMethods\" to transform hashes of\n  // events=>function references/names to a hash of events=>function references\n  normalizeMethods: normalizeMethods,\n\n  _setOptions: setOptions,\n\n  // A handy way to merge passed-in options onto the instance\n  mergeOptions: mergeOptions,\n\n  // Enable getting options from this or this.options by name.\n  getOption: getOption,\n\n  // Enable binding view's events from another entity.\n  bindEvents: bindEvents,\n\n  // Enable unbinding view's events from another entity.\n  unbindEvents: unbindEvents\n};\n\n// MixinOptions\n// - channelName\n// - radioEvents\n// - radioRequests\n\nvar RadioMixin = {\n  _initRadio: function _initRadio() {\n    var channelName = _.result(this, 'channelName');\n\n    if (!channelName) {\n      return;\n    }\n\n    /* istanbul ignore next */\n    if (!Radio) {\n      throw new MarionetteError({\n        name: 'BackboneRadioMissing',\n        message: 'The dependency \"backbone.radio\" is missing.'\n      });\n    }\n\n    var channel = this._channel = Radio.channel(channelName);\n\n    var radioEvents = _.result(this, 'radioEvents');\n    this.bindEvents(channel, radioEvents);\n\n    var radioRequests = _.result(this, 'radioRequests');\n    this.bindRequests(channel, radioRequests);\n\n    this.on('destroy', this._destroyRadio);\n  },\n  _destroyRadio: function _destroyRadio() {\n    this._channel.stopReplying(null, null, this);\n  },\n  getChannel: function getChannel() {\n    return this._channel;\n  },\n\n\n  // Proxy `bindEvents`\n  bindEvents: bindEvents,\n\n  // Proxy `unbindEvents`\n  unbindEvents: unbindEvents,\n\n  // Proxy `bindRequests`\n  bindRequests: bindRequests,\n\n  // Proxy `unbindRequests`\n  unbindRequests: unbindRequests\n\n};\n\n// Object\n// ------\n\nvar ClassOptions = ['channelName', 'radioEvents', 'radioRequests'];\n\n// A Base Class that other Classes should descend from.\n// Object borrows many conventions and utilities from Backbone.\nvar MarionetteObject = function MarionetteObject(options) {\n  if (!this.hasOwnProperty('options')) {\n    this._setOptions(options);\n  }\n  this.mergeOptions(options, ClassOptions);\n  this._setCid();\n  this._initRadio();\n  this.initialize.apply(this, arguments);\n};\n\nMarionetteObject.extend = extend;\n\n// Object Methods\n// --------------\n\n// Ensure it can trigger events with Backbone.Events\n_.extend(MarionetteObject.prototype, Backbone.Events, CommonMixin, RadioMixin, {\n  cidPrefix: 'mno',\n\n  // for parity with Marionette.AbstractView lifecyle\n  _isDestroyed: false,\n\n  isDestroyed: function isDestroyed() {\n    return this._isDestroyed;\n  },\n\n\n  //this is a noop method intended to be overridden by classes that extend from this base\n  initialize: function initialize() {},\n  _setCid: function _setCid() {\n    if (this.cid) {\n      return;\n    }\n    this.cid = _.uniqueId(this.cidPrefix);\n  },\n  destroy: function destroy() {\n    if (this._isDestroyed) {\n      return this;\n    }\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this.triggerMethod.apply(this, ['before:destroy', this].concat(args));\n\n    this._isDestroyed = true;\n    this.triggerMethod.apply(this, ['destroy', this].concat(args));\n    this.stopListening();\n\n    return this;\n  },\n\n\n  triggerMethod: triggerMethod\n});\n\n// Template Cache\n// --------------\n\n// Manage templates stored in `<script>` blocks,\n// caching them for faster access.\nvar TemplateCache = function TemplateCache(templateId) {\n  this.templateId = templateId;\n};\n\n// TemplateCache object-level methods. Manage the template\n// caches from these method calls instead of creating\n// your own TemplateCache instances\n_.extend(TemplateCache, {\n\n  templateCaches: {},\n\n  // Get the specified template by id. Either\n  // retrieves the cached version, or loads it\n  // from the DOM.\n  get: function get(templateId, options) {\n    var cachedTemplate = this.templateCaches[templateId];\n\n    if (!cachedTemplate) {\n      cachedTemplate = new TemplateCache(templateId);\n      this.templateCaches[templateId] = cachedTemplate;\n    }\n\n    return cachedTemplate.load(options);\n  },\n\n\n  // Clear templates from the cache. If no arguments\n  // are specified, clears all templates:\n  // `clear()`\n  //\n  // If arguments are specified, clears each of the\n  // specified templates from the cache:\n  // `clear(\"#t1\", \"#t2\", \"...\")`\n  clear: function clear() {\n    var i = void 0;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var length = args.length;\n\n    if (length > 0) {\n      for (i = 0; i < length; i++) {\n        delete this.templateCaches[args[i]];\n      }\n    } else {\n      this.templateCaches = {};\n    }\n  }\n});\n\n// TemplateCache instance methods, allowing each\n// template cache object to manage its own state\n// and know whether or not it has been loaded\n_.extend(TemplateCache.prototype, {\n\n  // Internal method to load the template\n  load: function load(options) {\n    // Guard clause to prevent loading this template more than once\n    if (this.compiledTemplate) {\n      return this.compiledTemplate;\n    }\n\n    // Load the template and compile it\n    var template = this.loadTemplate(this.templateId, options);\n    this.compiledTemplate = this.compileTemplate(template, options);\n\n    return this.compiledTemplate;\n  },\n\n\n  // Load a template from the DOM, by default. Override\n  // this method to provide your own template retrieval\n  // For asynchronous loading with AMD/RequireJS, consider\n  // using a template-loader plugin as described here:\n  // https://github.com/marionettejs/backbone.marionette/wiki/Using-marionette-with-requirejs\n  loadTemplate: function loadTemplate(templateId, options) {\n    var $template = Backbone.$(templateId);\n\n    if (!$template.length) {\n      throw new MarionetteError({\n        name: 'NoTemplateError',\n        message: 'Could not find template: \"' + templateId + '\"'\n      });\n    }\n    return $template.html();\n  },\n\n\n  // Pre-compile the template before caching it. Override\n  // this method if you do not need to pre-compile a template\n  // (JST / RequireJS for example) or if you want to change\n  // the template engine used (Handebars, etc).\n  compileTemplate: function compileTemplate(rawTemplate, options) {\n    return _.template(rawTemplate, options);\n  }\n});\n\n// Implementation of the invoke method (http://underscorejs.org/#invoke) with support for\n// lodash v3, v4, and underscore.js\nvar _invoke = _.invokeMap || _.invoke;\n\n// MixinOptions\n// - behaviors\n\n// Takes care of getting the behavior class\n// given options and a key.\n// If a user passes in options.behaviorClass\n// default to using that.\n// If a user passes in a Behavior Class directly, use that\n// Otherwise delegate the lookup to the users `behaviorsLookup` implementation.\nfunction getBehaviorClass(options, key) {\n  if (options.behaviorClass) {\n    return options.behaviorClass;\n    //treat functions as a Behavior constructor\n  } else if (_.isFunction(options)) {\n    return options;\n  }\n\n  // behaviorsLookup can be either a flat object or a method\n  if (_.isFunction(Marionette.Behaviors.behaviorsLookup)) {\n    return Marionette.Behaviors.behaviorsLookup(options, key)[key];\n  }\n\n  return Marionette.Behaviors.behaviorsLookup[key];\n}\n\n// Iterate over the behaviors object, for each behavior\n// instantiate it and get its grouped behaviors.\n// This accepts a list of behaviors in either an object or array form\nfunction parseBehaviors(view, behaviors) {\n  return _.chain(behaviors).map(function (options, key) {\n    var BehaviorClass = getBehaviorClass(options, key);\n    //if we're passed a class directly instead of an object\n    var _options = options === BehaviorClass ? {} : options;\n    var behavior = new BehaviorClass(_options, view);\n    var nestedBehaviors = parseBehaviors(view, _.result(behavior, 'behaviors'));\n\n    return [behavior].concat(nestedBehaviors);\n  }).flatten().value();\n}\n\nvar BehaviorsMixin = {\n  _initBehaviors: function _initBehaviors() {\n    this._behaviors = this._getBehaviors();\n  },\n  _getBehaviors: function _getBehaviors() {\n    var behaviors = _.result(this, 'behaviors');\n\n    // Behaviors defined on a view can be a flat object literal\n    // or it can be a function that returns an object.\n    return _.isObject(behaviors) ? parseBehaviors(this, behaviors) : {};\n  },\n  _getBehaviorTriggers: function _getBehaviorTriggers() {\n    var triggers = _invoke(this._behaviors, 'getTriggers');\n    return _.reduce(triggers, function (memo, _triggers) {\n      return _.extend(memo, _triggers);\n    }, {});\n  },\n  _getBehaviorEvents: function _getBehaviorEvents() {\n    var events = _invoke(this._behaviors, 'getEvents');\n    return _.reduce(events, function (memo, _events) {\n      return _.extend(memo, _events);\n    }, {});\n  },\n\n\n  // proxy behavior $el to the view's $el.\n  _proxyBehaviorViewProperties: function _proxyBehaviorViewProperties() {\n    _invoke(this._behaviors, 'proxyViewProperties');\n  },\n\n\n  // delegate modelEvents and collectionEvents\n  _delegateBehaviorEntityEvents: function _delegateBehaviorEntityEvents() {\n    _invoke(this._behaviors, 'delegateEntityEvents');\n  },\n\n\n  // undelegate modelEvents and collectionEvents\n  _undelegateBehaviorEntityEvents: function _undelegateBehaviorEntityEvents() {\n    _invoke(this._behaviors, 'undelegateEntityEvents');\n  },\n  _destroyBehaviors: function _destroyBehaviors() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // Call destroy on each behavior after\n    // destroying the view.\n    // This unbinds event listeners\n    // that behaviors have registered for.\n    _invoke.apply(undefined, [this._behaviors, 'destroy'].concat(args));\n  },\n\n\n  // Remove a behavior\n  _removeBehavior: function _removeBehavior(behavior) {\n    // Don't worry about the clean up if the view is destroyed\n    if (this._isDestroyed) {\n      return;\n    }\n    this._behaviors = _.without(this._behaviors, behavior);\n  },\n  _bindBehaviorUIElements: function _bindBehaviorUIElements() {\n    _invoke(this._behaviors, 'bindUIElements');\n  },\n  _unbindBehaviorUIElements: function _unbindBehaviorUIElements() {\n    _invoke(this._behaviors, 'unbindUIElements');\n  },\n  _triggerEventOnBehaviors: function _triggerEventOnBehaviors() {\n    var behaviors = this._behaviors;\n    // Use good ol' for as this is a very hot function\n    for (var i = 0, length = behaviors && behaviors.length; i < length; i++) {\n      triggerMethod.apply(behaviors[i], arguments);\n    }\n  }\n};\n\n// MixinOptions\n// - collectionEvents\n// - modelEvents\n\nvar DelegateEntityEventsMixin = {\n  // Handle `modelEvents`, and `collectionEvents` configuration\n  _delegateEntityEvents: function _delegateEntityEvents(model, collection) {\n    this._undelegateEntityEvents(model, collection);\n\n    var modelEvents = _.result(this, 'modelEvents');\n    bindEvents.call(this, model, modelEvents);\n\n    var collectionEvents = _.result(this, 'collectionEvents');\n    bindEvents.call(this, collection, collectionEvents);\n  },\n  _undelegateEntityEvents: function _undelegateEntityEvents(model, collection) {\n    var modelEvents = _.result(this, 'modelEvents');\n    unbindEvents.call(this, model, modelEvents);\n\n    var collectionEvents = _.result(this, 'collectionEvents');\n    unbindEvents.call(this, collection, collectionEvents);\n  }\n};\n\n// Borrow event splitter from Backbone\nvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\nfunction uniqueName(eventName, selector) {\n  return '' + eventName + _.uniqueId('.evt') + ' ' + selector;\n}\n\n// Set event name to be namespaced using a unique index\n// to generate a non colliding event namespace\n// http://api.jquery.com/event.namespace/\nvar getUniqueEventName = function getUniqueEventName(eventName) {\n  var match = eventName.match(delegateEventSplitter);\n  return uniqueName(match[1], match[2]);\n};\n\n// Add Feature flags here\n// e.g. 'class' => false\nvar FEATURES = {\n  childViewEventPrefix: true,\n  triggersStopPropagation: true,\n  triggersPreventDefault: true\n};\n\nfunction isEnabled(name) {\n  return !!FEATURES[name];\n}\n\nfunction setEnabled(name, state) {\n  return FEATURES[name] = state;\n}\n\n// Internal method to create an event handler for a given `triggerDef` like\n// 'click:foo'\nfunction buildViewTrigger(view, triggerDef) {\n  if (_.isString(triggerDef)) {\n    triggerDef = { event: triggerDef };\n  }\n\n  var eventName = triggerDef.event;\n\n  var shouldPreventDefault = !!triggerDef.preventDefault;\n\n  if (isEnabled('triggersPreventDefault')) {\n    shouldPreventDefault = triggerDef.preventDefault !== false;\n  }\n\n  var shouldStopPropagation = !!triggerDef.stopPropagation;\n\n  if (isEnabled('triggersStopPropagation')) {\n    shouldStopPropagation = triggerDef.stopPropagation !== false;\n  }\n\n  return function (event) {\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n\n    if (shouldStopPropagation) {\n      event.stopPropagation();\n    }\n\n    view.triggerMethod(eventName, view, event);\n  };\n}\n\nvar TriggersMixin = {\n\n  // Configure `triggers` to forward DOM events to view\n  // events. `triggers: {\"click .foo\": \"do:foo\"}`\n  _getViewTriggers: function _getViewTriggers(view, triggers) {\n    // Configure the triggers, prevent default\n    // action and stop propagation of DOM events\n    return _.reduce(triggers, function (events, value, key) {\n      key = getUniqueEventName(key);\n      events[key] = buildViewTrigger(view, value);\n      return events;\n    }, {});\n  }\n};\n\n// allows for the use of the @ui. syntax within\n// a given key for triggers and events\n// swaps the @ui with the associated selector.\n// Returns a new, non-mutated, parsed events hash.\nvar _normalizeUIKeys = function _normalizeUIKeys(hash, ui) {\n  return _.reduce(hash, function (memo, val, key) {\n    var normalizedKey = _normalizeUIString(key, ui);\n    memo[normalizedKey] = val;\n    return memo;\n  }, {});\n};\n\n// utility method for parsing @ui. syntax strings\n// into associated selector\nvar _normalizeUIString = function _normalizeUIString(uiString, ui) {\n  return uiString.replace(/@ui\\.[a-zA-Z-_$0-9]*/g, function (r) {\n    return ui[r.slice(4)];\n  });\n};\n\n// allows for the use of the @ui. syntax within\n// a given value for regions\n// swaps the @ui with the associated selector\nvar _normalizeUIValues = function _normalizeUIValues(hash, ui, properties) {\n  _.each(hash, function (val, key) {\n    if (_.isString(val)) {\n      hash[key] = _normalizeUIString(val, ui);\n    } else if (_.isObject(val) && _.isArray(properties)) {\n      _.extend(val, _normalizeUIValues(_.pick(val, properties), ui));\n      /* Value is an object, and we got an array of embedded property names to normalize. */\n      _.each(properties, function (property) {\n        var propertyVal = val[property];\n        if (_.isString(propertyVal)) {\n          val[property] = _normalizeUIString(propertyVal, ui);\n        }\n      });\n    }\n  });\n  return hash;\n};\n\nvar UIMixin = {\n\n  // normalize the keys of passed hash with the views `ui` selectors.\n  // `{\"@ui.foo\": \"bar\"}`\n  normalizeUIKeys: function normalizeUIKeys(hash) {\n    var uiBindings = this._getUIBindings();\n    return _normalizeUIKeys(hash, uiBindings);\n  },\n\n\n  // normalize the passed string with the views `ui` selectors.\n  // `\"@ui.bar\"`\n  normalizeUIString: function normalizeUIString(uiString) {\n    var uiBindings = this._getUIBindings();\n    return _normalizeUIString(uiString, uiBindings);\n  },\n\n\n  // normalize the values of passed hash with the views `ui` selectors.\n  // `{foo: \"@ui.bar\"}`\n  normalizeUIValues: function normalizeUIValues(hash, properties) {\n    var uiBindings = this._getUIBindings();\n    return _normalizeUIValues(hash, uiBindings, properties);\n  },\n  _getUIBindings: function _getUIBindings() {\n    var uiBindings = _.result(this, '_uiBindings');\n    var ui = _.result(this, 'ui');\n    return uiBindings || ui;\n  },\n\n\n  // This method binds the elements specified in the \"ui\" hash inside the view's code with\n  // the associated jQuery selectors.\n  _bindUIElements: function _bindUIElements() {\n    var _this = this;\n\n    if (!this.ui) {\n      return;\n    }\n\n    // store the ui hash in _uiBindings so they can be reset later\n    // and so re-rendering the view will be able to find the bindings\n    if (!this._uiBindings) {\n      this._uiBindings = this.ui;\n    }\n\n    // get the bindings result, as a function or otherwise\n    var bindings = _.result(this, '_uiBindings');\n\n    // empty the ui so we don't have anything to start with\n    this._ui = {};\n\n    // bind each of the selectors\n    _.each(bindings, function (selector, key) {\n      _this._ui[key] = _this.$(selector);\n    });\n\n    this.ui = this._ui;\n  },\n  _unbindUIElements: function _unbindUIElements() {\n    var _this2 = this;\n\n    if (!this.ui || !this._uiBindings) {\n      return;\n    }\n\n    // delete all of the existing ui bindings\n    _.each(this.ui, function ($el, name) {\n      delete _this2.ui[name];\n    });\n\n    // reset the ui element to the original bindings configuration\n    this.ui = this._uiBindings;\n    delete this._uiBindings;\n    delete this._ui;\n  },\n  _getUI: function _getUI(name) {\n    return this._ui[name];\n  }\n};\n\n// DomApi\n//  ---------\n// Performant method for returning the jQuery instance\nfunction _getEl(el) {\n  return el instanceof Backbone.$ ? el : Backbone.$(el);\n}\n\n// Static setter\nfunction setDomApi(mixin) {\n  this.prototype.Dom = _.extend({}, this.prototype.Dom, mixin);\n  return this;\n}\n\nvar DomApi = {\n\n  // Returns a new HTML DOM node instance\n  createBuffer: function createBuffer() {\n    return document.createDocumentFragment();\n  },\n\n\n  // Lookup the `selector` string\n  // Selector may also be a DOM element\n  // Returns an array-like object of nodes\n  getEl: function getEl(selector) {\n    return _getEl(selector);\n  },\n\n\n  // Finds the `selector` string with the el\n  // Returns an array-like object of nodes\n  findEl: function findEl(el, selector) {\n    var _$el = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _getEl(el);\n\n    return _$el.find(selector);\n  },\n\n\n  // Returns true if the el contains the node childEl\n  hasEl: function hasEl(el, childEl) {\n    return el.contains(childEl && childEl.parentNode);\n  },\n\n\n  // Detach `el` from the DOM without removing listeners\n  detachEl: function detachEl(el) {\n    var _$el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _getEl(el);\n\n    _$el.detach();\n  },\n\n\n  // Remove `oldEl` from the DOM and put `newEl` in its place\n  replaceEl: function replaceEl(newEl, oldEl) {\n    if (newEl === oldEl) {\n      return;\n    }\n\n    var parent = oldEl.parentNode;\n\n    if (!parent) {\n      return;\n    }\n\n    parent.replaceChild(newEl, oldEl);\n  },\n\n\n  // Swaps the location of `el1` and `el2` in the DOM\n  swapEl: function swapEl(el1, el2) {\n    if (el1 === el2) {\n      return;\n    }\n\n    var parent1 = el1.parentNode;\n    var parent2 = el2.parentNode;\n\n    if (!parent1 || !parent2) {\n      return;\n    }\n\n    var next1 = el1.nextSibling;\n    var next2 = el2.nextSibling;\n\n    parent1.insertBefore(el2, next1);\n    parent2.insertBefore(el1, next2);\n  },\n\n\n  // Replace the contents of `el` with the HTML string of `html`\n  setContents: function setContents(el, html) {\n    var _$el = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _getEl(el);\n\n    _$el.html(html);\n  },\n\n\n  // Takes the DOM node `el` and appends the DOM node `contents`\n  // to the end of the element's contents.\n  appendContents: function appendContents(el, contents) {\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref$_$el = _ref._$el,\n        _$el = _ref$_$el === undefined ? _getEl(el) : _ref$_$el,\n        _ref$_$contents = _ref._$contents,\n        _$contents = _ref$_$contents === undefined ? _getEl(contents) : _ref$_$contents;\n\n    _$el.append(_$contents);\n  },\n\n\n  // Does the el have child nodes\n  hasContents: function hasContents(el) {\n    return el.hasChildNodes();\n  },\n\n\n  // Remove the inner contents of `el` from the DOM while leaving\n  // `el` itself in the DOM.\n  detachContents: function detachContents(el) {\n    var _$el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _getEl(el);\n\n    _$el.contents().detach();\n  }\n};\n\n// ViewMixin\n//  ---------\n\n// MixinOptions\n// - behaviors\n// - childViewEventPrefix\n// - childViewEvents\n// - childViewTriggers\n// - collectionEvents\n// - modelEvents\n// - triggers\n// - ui\n\n\nvar ViewMixin = {\n  Dom: DomApi,\n\n  supportsRenderLifecycle: true,\n  supportsDestroyLifecycle: true,\n\n  _isDestroyed: false,\n\n  isDestroyed: function isDestroyed() {\n    return !!this._isDestroyed;\n  },\n\n\n  _isRendered: false,\n\n  isRendered: function isRendered() {\n    return !!this._isRendered;\n  },\n\n\n  _isAttached: false,\n\n  isAttached: function isAttached() {\n    return !!this._isAttached;\n  },\n\n\n  // Overriding Backbone.View's `delegateEvents` to handle\n  // `events` and `triggers`\n  delegateEvents: function delegateEvents(eventsArg) {\n\n    this._proxyBehaviorViewProperties();\n    this._buildEventProxies();\n\n    var viewEvents = this._getEvents(eventsArg);\n\n    if (typeof eventsArg === 'undefined') {\n      this.events = viewEvents;\n    }\n\n    var combinedEvents = _.extend({}, this._getBehaviorEvents(), viewEvents, this._getBehaviorTriggers(), this.getTriggers());\n\n    Backbone.View.prototype.delegateEvents.call(this, combinedEvents);\n\n    return this;\n  },\n  _getEvents: function _getEvents(eventsArg) {\n    var events = eventsArg || this.events;\n\n    if (_.isFunction(events)) {\n      return this.normalizeUIKeys(events.call(this));\n    }\n\n    return this.normalizeUIKeys(events);\n  },\n\n\n  // Configure `triggers` to forward DOM events to view\n  // events. `triggers: {\"click .foo\": \"do:foo\"}`\n  getTriggers: function getTriggers() {\n    if (!this.triggers) {\n      return;\n    }\n\n    // Allow `triggers` to be configured as a function\n    var triggers = this.normalizeUIKeys(_.result(this, 'triggers'));\n\n    // Configure the triggers, prevent default\n    // action and stop propagation of DOM events\n    return this._getViewTriggers(this, triggers);\n  },\n\n\n  // Handle `modelEvents`, and `collectionEvents` configuration\n  delegateEntityEvents: function delegateEntityEvents() {\n    this._delegateEntityEvents(this.model, this.collection);\n\n    // bind each behaviors model and collection events\n    this._delegateBehaviorEntityEvents();\n\n    return this;\n  },\n\n\n  // Handle unbinding `modelEvents`, and `collectionEvents` configuration\n  undelegateEntityEvents: function undelegateEntityEvents() {\n    this._undelegateEntityEvents(this.model, this.collection);\n\n    // unbind each behaviors model and collection events\n    this._undelegateBehaviorEntityEvents();\n\n    return this;\n  },\n\n\n  // Handle destroying the view and its children.\n  destroy: function destroy() {\n    if (this._isDestroyed) {\n      return this;\n    }\n    var shouldTriggerDetach = this._isAttached && !this._shouldDisableEvents;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this.triggerMethod.apply(this, ['before:destroy', this].concat(args));\n    if (shouldTriggerDetach) {\n      this.triggerMethod('before:detach', this);\n    }\n\n    // unbind UI elements\n    this.unbindUIElements();\n\n    // remove the view from the DOM\n    this._removeElement();\n\n    if (shouldTriggerDetach) {\n      this._isAttached = false;\n      this.triggerMethod('detach', this);\n    }\n\n    // remove children after the remove to prevent extra paints\n    this._removeChildren();\n\n    this._isDestroyed = true;\n    this._isRendered = false;\n\n    // Destroy behaviors after _isDestroyed flag\n    this._destroyBehaviors.apply(this, args);\n\n    this.triggerMethod.apply(this, ['destroy', this].concat(args));\n\n    this.stopListening();\n\n    return this;\n  },\n\n\n  // Equates to this.$el.remove\n  _removeElement: function _removeElement() {\n    this.$el.off().removeData();\n    this.Dom.detachEl(this.el, this.$el);\n  },\n  bindUIElements: function bindUIElements() {\n    this._bindUIElements();\n    this._bindBehaviorUIElements();\n\n    return this;\n  },\n\n\n  // This method unbinds the elements specified in the \"ui\" hash\n  unbindUIElements: function unbindUIElements() {\n    this._unbindUIElements();\n    this._unbindBehaviorUIElements();\n\n    return this;\n  },\n  getUI: function getUI(name) {\n    return this._getUI(name);\n  },\n\n\n  // used as the prefix for child view events\n  // that are forwarded through the layoutview\n  childViewEventPrefix: function childViewEventPrefix() {\n    return isEnabled('childViewEventPrefix') ? 'childview' : false;\n  },\n\n\n  // import the `triggerMethod` to trigger events with corresponding\n  // methods if the method exists\n  triggerMethod: function triggerMethod$$1() {\n    var ret = triggerMethod.apply(this, arguments);\n\n    this._triggerEventOnBehaviors.apply(this, arguments);\n\n    return ret;\n  },\n\n\n  // Cache `childViewEvents` and `childViewTriggers`\n  _buildEventProxies: function _buildEventProxies() {\n    this._childViewEvents = _.result(this, 'childViewEvents');\n    this._childViewTriggers = _.result(this, 'childViewTriggers');\n  },\n  _proxyChildViewEvents: function _proxyChildViewEvents(view) {\n    this.listenTo(view, 'all', this._childViewEventHandler);\n  },\n  _childViewEventHandler: function _childViewEventHandler(eventName) {\n    var childViewEvents = this.normalizeMethods(this._childViewEvents);\n\n    // call collectionView childViewEvent if defined\n\n    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    if (typeof childViewEvents !== 'undefined' && _.isFunction(childViewEvents[eventName])) {\n      childViewEvents[eventName].apply(this, args);\n    }\n\n    // use the parent view's proxyEvent handlers\n    var childViewTriggers = this._childViewTriggers;\n\n    // Call the event with the proxy name on the parent layout\n    if (childViewTriggers && _.isString(childViewTriggers[eventName])) {\n      this.triggerMethod.apply(this, [childViewTriggers[eventName]].concat(args));\n    }\n\n    var prefix = _.result(this, 'childViewEventPrefix');\n\n    if (prefix !== false) {\n      var childEventName = prefix + ':' + eventName;\n\n      this.triggerMethod.apply(this, [childEventName].concat(args));\n    }\n  }\n};\n\n_.extend(ViewMixin, BehaviorsMixin, CommonMixin, DelegateEntityEventsMixin, TriggersMixin, UIMixin);\n\nfunction renderView(view) {\n  if (view._isRendered) {\n    return;\n  }\n\n  if (!view.supportsRenderLifecycle) {\n    triggerMethodOn(view, 'before:render', view);\n  }\n\n  view.render();\n\n  if (!view.supportsRenderLifecycle) {\n    view._isRendered = true;\n    triggerMethodOn(view, 'render', view);\n  }\n}\n\nfunction destroyView(view) {\n  if (view.destroy) {\n    view.destroy();\n    return;\n  }\n\n  if (!view.supportsDestroyLifecycle) {\n    triggerMethodOn(view, 'before:destroy', view);\n  }\n\n  var shouldTriggerDetach = view._isAttached && !view._shouldDisableEvents;\n\n  if (shouldTriggerDetach) {\n    triggerMethodOn(view, 'before:detach', view);\n  }\n\n  view.remove();\n\n  if (shouldTriggerDetach) {\n    view._isAttached = false;\n    triggerMethodOn(view, 'detach', view);\n  }\n\n  view._isDestroyed = true;\n\n  if (!view.supportsDestroyLifecycle) {\n    triggerMethodOn(view, 'destroy', view);\n  }\n}\n\n// Region\n// ------\n\nvar ClassOptions$2 = ['allowMissingEl', 'parentEl', 'replaceElement'];\n\nvar Region = MarionetteObject.extend({\n  Dom: DomApi,\n\n  cidPrefix: 'mnr',\n  replaceElement: false,\n  _isReplaced: false,\n  _isSwappingView: false,\n\n  constructor: function constructor(options) {\n    this._setOptions(options);\n\n    this.mergeOptions(options, ClassOptions$2);\n\n    // getOption necessary because options.el may be passed as undefined\n    this._initEl = this.el = this.getOption('el');\n\n    // Handle when this.el is passed in as a $ wrapped element.\n    this.el = this.el instanceof Backbone.$ ? this.el[0] : this.el;\n\n    if (!this.el) {\n      throw new MarionetteError({\n        name: 'NoElError',\n        message: 'An \"el\" must be specified for a region.'\n      });\n    }\n\n    this.$el = this.getEl(this.el);\n    MarionetteObject.call(this, options);\n  },\n\n\n  // Displays a backbone view instance inside of the region. Handles calling the `render`\n  // method for you. Reads content directly from the `el` attribute. The `preventDestroy`\n  // option can be used to prevent a view from the old view being destroyed on show.\n  show: function show(view, options) {\n    if (!this._ensureElement(options)) {\n      return;\n    }\n\n    view = this._getView(view, options);\n\n    if (view === this.currentView) {\n      return this;\n    }\n\n    this._isSwappingView = !!this.currentView;\n\n    this.triggerMethod('before:show', this, view, options);\n\n    // Assume an attached view is already in the region for pre-existing DOM\n    if (!view._isAttached) {\n      this.empty(options);\n    }\n\n    this._setupChildView(view);\n\n    this.currentView = view;\n\n    renderView(view);\n\n    this._attachView(view, options);\n\n    this.triggerMethod('show', this, view, options);\n\n    this._isSwappingView = false;\n\n    return this;\n  },\n  _setupChildView: function _setupChildView(view) {\n    monitorViewEvents(view);\n\n    this._proxyChildViewEvents(view);\n\n    // We need to listen for if a view is destroyed in a way other than through the region.\n    // If this happens we need to remove the reference to the currentView since once a view\n    // has been destroyed we can not reuse it.\n    view.on('destroy', this._empty, this);\n  },\n  _proxyChildViewEvents: function _proxyChildViewEvents(view) {\n    var parentView = this._parentView;\n\n    if (!parentView) {\n      return;\n    }\n\n    parentView._proxyChildViewEvents(view);\n  },\n\n\n  // If the regions parent view is not monitoring its attach/detach events\n  _shouldDisableMonitoring: function _shouldDisableMonitoring() {\n    return this._parentView && this._parentView.monitorViewEvents === false;\n  },\n  _attachView: function _attachView(view) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var shouldTriggerAttach = !view._isAttached && isNodeAttached(this.el) && !this._shouldDisableMonitoring();\n    var shouldReplaceEl = typeof options.replaceElement === 'undefined' ? !!_.result(this, 'replaceElement') : !!options.replaceElement;\n\n    if (shouldTriggerAttach) {\n      triggerMethodOn(view, 'before:attach', view);\n    }\n\n    if (shouldReplaceEl) {\n      this._replaceEl(view);\n    } else {\n      this.attachHtml(view);\n    }\n\n    if (shouldTriggerAttach) {\n      view._isAttached = true;\n      triggerMethodOn(view, 'attach', view);\n    }\n  },\n  _ensureElement: function _ensureElement() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!_.isObject(this.el)) {\n      this.$el = this.getEl(this.el);\n      this.el = this.$el[0];\n      // Make sure the $el contains only the el\n      this.$el = this.Dom.getEl(this.el);\n    }\n\n    if (!this.$el || this.$el.length === 0) {\n      var allowMissingEl = typeof options.allowMissingEl === 'undefined' ? !!_.result(this, 'allowMissingEl') : !!options.allowMissingEl;\n\n      if (allowMissingEl) {\n        return false;\n      } else {\n        throw new MarionetteError('An \"el\" must exist in DOM for this region ' + this.cid);\n      }\n    }\n    return true;\n  },\n  _getView: function _getView(view) {\n    if (!view) {\n      throw new MarionetteError({\n        name: 'ViewNotValid',\n        message: 'The view passed is undefined and therefore invalid. You must pass a view instance to show.'\n      });\n    }\n\n    if (view._isDestroyed) {\n      throw new MarionetteError({\n        name: 'ViewDestroyedError',\n        message: 'View (cid: \"' + view.cid + '\") has already been destroyed and cannot be used.'\n      });\n    }\n\n    if (view instanceof Backbone.View) {\n      return view;\n    }\n\n    var viewOptions = this._getViewOptions(view);\n\n    return new View(viewOptions);\n  },\n\n\n  // This allows for a template or a static string to be\n  // used as a template\n  _getViewOptions: function _getViewOptions(viewOptions) {\n    if (_.isFunction(viewOptions)) {\n      return { template: viewOptions };\n    }\n\n    if (_.isObject(viewOptions)) {\n      return viewOptions;\n    }\n\n    var template = function template() {\n      return viewOptions;\n    };\n\n    return { template: template };\n  },\n\n\n  // Override this method to change how the region finds the DOM element that it manages. Return\n  // a jQuery selector object scoped to a provided parent el or the document if none exists.\n  getEl: function getEl(el) {\n    var context = _.result(this, 'parentEl');\n\n    if (context && _.isString(el)) {\n      return this.Dom.findEl(context, el);\n    }\n\n    return this.Dom.getEl(el);\n  },\n  _replaceEl: function _replaceEl(view) {\n    // always restore the el to ensure the regions el is present before replacing\n    this._restoreEl();\n\n    view.on('before:destroy', this._restoreEl, this);\n\n    this.Dom.replaceEl(view.el, this.el);\n\n    this._isReplaced = true;\n  },\n\n\n  // Restore the region's element in the DOM.\n  _restoreEl: function _restoreEl() {\n    // There is nothing to replace\n    if (!this._isReplaced) {\n      return;\n    }\n\n    var view = this.currentView;\n\n    if (!view) {\n      return;\n    }\n\n    this._detachView(view);\n\n    this._isReplaced = false;\n  },\n\n\n  // Check to see if the region's el was replaced.\n  isReplaced: function isReplaced() {\n    return !!this._isReplaced;\n  },\n\n\n  // Check to see if a view is being swapped by another\n  isSwappingView: function isSwappingView() {\n    return !!this._isSwappingView;\n  },\n\n\n  // Override this method to change how the new view is appended to the `$el` that the\n  // region is managing\n  attachHtml: function attachHtml(view) {\n    this.Dom.appendContents(this.el, view.el, { _$el: this.$el, _$contents: view.$el });\n  },\n\n\n  // Destroy the current view, if there is one. If there is no current view, it does\n  // nothing and returns immediately.\n  empty: function empty() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { allowMissingEl: true };\n\n    var view = this.currentView;\n\n    // If there is no view in the region we should only detach current html\n    if (!view) {\n      if (this._ensureElement(options)) {\n        this.detachHtml();\n      }\n      return this;\n    }\n\n    var shouldDestroy = !options.preventDestroy;\n\n    if (!shouldDestroy) {\n      deprecate('The preventDestroy option is deprecated. Use Region#detachView');\n    }\n\n    this._empty(view, shouldDestroy);\n    return this;\n  },\n  _empty: function _empty(view, shouldDestroy) {\n    view.off('destroy', this._empty, this);\n    this.triggerMethod('before:empty', this, view);\n\n    this._restoreEl();\n\n    delete this.currentView;\n\n    if (!view._isDestroyed) {\n      if (shouldDestroy) {\n        this.removeView(view);\n      } else {\n        this._detachView(view);\n      }\n      this._stopChildViewEvents(view);\n    }\n\n    this.triggerMethod('empty', this, view);\n  },\n  _stopChildViewEvents: function _stopChildViewEvents(view) {\n    var parentView = this._parentView;\n\n    if (!parentView) {\n      return;\n    }\n\n    this._parentView.stopListening(view);\n  },\n  destroyView: function destroyView$$1(view) {\n    if (view._isDestroyed) {\n      return view;\n    }\n\n    view._shouldDisableEvents = this._shouldDisableMonitoring();\n    destroyView(view);\n    return view;\n  },\n  removeView: function removeView(view) {\n    this.destroyView(view);\n  },\n\n\n  // Empties the Region without destroying the view\n  // Returns the detached view\n  detachView: function detachView() {\n    var view = this.currentView;\n\n    if (!view) {\n      return;\n    }\n\n    this._empty(view);\n\n    return view;\n  },\n  _detachView: function _detachView(view) {\n    var shouldTriggerDetach = view._isAttached && !this._shouldDisableMonitoring();\n    var shouldRestoreEl = this._isReplaced;\n    if (shouldTriggerDetach) {\n      triggerMethodOn(view, 'before:detach', view);\n    }\n\n    if (shouldRestoreEl) {\n      this.Dom.replaceEl(this.el, view.el);\n    } else {\n      this.detachHtml();\n    }\n\n    if (shouldTriggerDetach) {\n      view._isAttached = false;\n      triggerMethodOn(view, 'detach', view);\n    }\n  },\n\n\n  // Override this method to change how the region detaches current content\n  detachHtml: function detachHtml() {\n    this.Dom.detachContents(this.el, this.$el);\n  },\n\n\n  // Checks whether a view is currently present within the region. Returns `true` if there is\n  // and `false` if no view is present.\n  hasView: function hasView() {\n    return !!this.currentView;\n  },\n\n\n  // Reset the region by destroying any existing view and clearing out the cached `$el`.\n  // The next time a view is shown via this region, the region will re-query the DOM for\n  // the region's `el`.\n  reset: function reset(options) {\n    this.empty(options);\n\n    if (this.$el) {\n      this.el = this._initEl;\n    }\n\n    delete this.$el;\n    return this;\n  },\n  destroy: function destroy(options) {\n    if (this._isDestroyed) {\n      return this;\n    }\n\n    this.reset(options);\n\n    if (this._name) {\n      this._parentView._removeReferences(this._name);\n    }\n    delete this._parentView;\n    delete this._name;\n\n    return MarionetteObject.prototype.destroy.apply(this, arguments);\n  }\n}, {\n  setDomApi: setDomApi\n});\n\n// return the region instance from the definition\nvar buildRegion = function (definition, defaults) {\n  if (definition instanceof Region) {\n    return definition;\n  }\n\n  return buildRegionFromDefinition(definition, defaults);\n};\n\nfunction buildRegionFromDefinition(definition, defaults) {\n  var opts = _.extend({}, defaults);\n\n  if (_.isString(definition)) {\n    _.extend(opts, { el: definition });\n\n    return buildRegionFromObject(opts);\n  }\n\n  if (_.isFunction(definition)) {\n    _.extend(opts, { regionClass: definition });\n\n    return buildRegionFromObject(opts);\n  }\n\n  if (_.isObject(definition)) {\n    if (definition.selector) {\n      deprecate('The selector option on a Region definition object is deprecated. Use el to pass a selector string');\n    }\n\n    _.extend(opts, { el: definition.selector }, definition);\n\n    return buildRegionFromObject(opts);\n  }\n\n  throw new MarionetteError({\n    message: 'Improper region configuration type.',\n    url: 'marionette.region.html#region-configuration-types'\n  });\n}\n\nfunction buildRegionFromObject(definition) {\n  var RegionClass = definition.regionClass;\n\n  var options = _.omit(definition, 'regionClass');\n\n  return new RegionClass(options);\n}\n\n// MixinOptions\n// - regions\n// - regionClass\n\nvar RegionsMixin = {\n  regionClass: Region,\n\n  // Internal method to initialize the regions that have been defined in a\n  // `regions` attribute on this View.\n  _initRegions: function _initRegions() {\n\n    // init regions hash\n    this.regions = this.regions || {};\n    this._regions = {};\n\n    this.addRegions(_.result(this, 'regions'));\n  },\n\n\n  // Internal method to re-initialize all of the regions by updating\n  // the `el` that they point to\n  _reInitRegions: function _reInitRegions() {\n    _invoke(this._regions, 'reset');\n  },\n\n\n  // Add a single region, by name, to the View\n  addRegion: function addRegion(name, definition) {\n    var regions = {};\n    regions[name] = definition;\n    return this.addRegions(regions)[name];\n  },\n\n\n  // Add multiple regions as a {name: definition, name2: def2} object literal\n  addRegions: function addRegions(regions) {\n    // If there's nothing to add, stop here.\n    if (_.isEmpty(regions)) {\n      return;\n    }\n\n    // Normalize region selectors hash to allow\n    // a user to use the @ui. syntax.\n    regions = this.normalizeUIValues(regions, ['selector', 'el']);\n\n    // Add the regions definitions to the regions property\n    this.regions = _.extend({}, this.regions, regions);\n\n    return this._addRegions(regions);\n  },\n\n\n  // internal method to build and add regions\n  _addRegions: function _addRegions(regionDefinitions) {\n    var _this = this;\n\n    var defaults = {\n      regionClass: this.regionClass,\n      parentEl: _.partial(_.result, this, 'el')\n    };\n\n    return _.reduce(regionDefinitions, function (regions, definition, name) {\n      regions[name] = buildRegion(definition, defaults);\n      _this._addRegion(regions[name], name);\n      return regions;\n    }, {});\n  },\n  _addRegion: function _addRegion(region, name) {\n    this.triggerMethod('before:add:region', this, name, region);\n\n    region._parentView = this;\n    region._name = name;\n\n    this._regions[name] = region;\n\n    this.triggerMethod('add:region', this, name, region);\n  },\n\n\n  // Remove a single region from the View, by name\n  removeRegion: function removeRegion(name) {\n    var region = this._regions[name];\n\n    this._removeRegion(region, name);\n\n    return region;\n  },\n\n\n  // Remove all regions from the View\n  removeRegions: function removeRegions() {\n    var regions = this._getRegions();\n\n    _.each(this._regions, _.bind(this._removeRegion, this));\n\n    return regions;\n  },\n  _removeRegion: function _removeRegion(region, name) {\n    this.triggerMethod('before:remove:region', this, name, region);\n\n    region.destroy();\n\n    this.triggerMethod('remove:region', this, name, region);\n  },\n\n\n  // Called in a region's destroy\n  _removeReferences: function _removeReferences(name) {\n    delete this.regions[name];\n    delete this._regions[name];\n  },\n\n\n  // Empty all regions in the region manager, but\n  // leave them attached\n  emptyRegions: function emptyRegions() {\n    var regions = this.getRegions();\n    _invoke(regions, 'empty');\n    return regions;\n  },\n\n\n  // Checks to see if view contains region\n  // Accepts the region name\n  // hasRegion('main')\n  hasRegion: function hasRegion(name) {\n    return !!this.getRegion(name);\n  },\n\n\n  // Provides access to regions\n  // Accepts the region name\n  // getRegion('main')\n  getRegion: function getRegion(name) {\n    if (!this._isRendered) {\n      this.render();\n    }\n    return this._regions[name];\n  },\n\n\n  // Get all regions\n  _getRegions: function _getRegions() {\n    return _.clone(this._regions);\n  },\n  getRegions: function getRegions() {\n    if (!this._isRendered) {\n      this.render();\n    }\n    return this._getRegions();\n  },\n  showChildView: function showChildView(name, view) {\n    var region = this.getRegion(name);\n\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    return region.show.apply(region, [view].concat(args));\n  },\n  detachChildView: function detachChildView(name) {\n    return this.getRegion(name).detachView();\n  },\n  getChildView: function getChildView(name) {\n    return this.getRegion(name).currentView;\n  }\n};\n\n// Renderer\n// --------\n\n// Render a template with data by passing in the template\n// selector and the data to render.\nvar Renderer = {\n\n  // Render a template with data. The `template` parameter is\n  // passed to the `TemplateCache` object to retrieve the\n  // template function. Override this method to provide your own\n  // custom rendering and template handling for all of Marionette.\n  render: function render(template, data) {\n    if (!template) {\n      throw new MarionetteError({\n        name: 'TemplateNotFoundError',\n        message: 'Cannot render the template since its false, null or undefined.'\n      });\n    }\n\n    var templateFunc = _.isFunction(template) ? template : TemplateCache.get(template);\n\n    return templateFunc(data);\n  }\n};\n\n// View\n// ---------\n\nvar ClassOptions$1 = ['behaviors', 'childViewEventPrefix', 'childViewEvents', 'childViewTriggers', 'collectionEvents', 'events', 'modelEvents', 'regionClass', 'regions', 'template', 'templateContext', 'triggers', 'ui'];\n\n// The standard view. Includes view events, automatic rendering\n// of Underscore templates, nested views, and more.\nvar View = Backbone.View.extend({\n  constructor: function constructor(options) {\n    this.render = _.bind(this.render, this);\n\n    this._setOptions(options);\n\n    this.mergeOptions(options, ClassOptions$1);\n\n    monitorViewEvents(this);\n\n    this._initBehaviors();\n    this._initRegions();\n\n    var args = Array.prototype.slice.call(arguments);\n    args[0] = this.options;\n    Backbone.View.prototype.constructor.apply(this, args);\n\n    this.delegateEntityEvents();\n\n    this._triggerEventOnBehaviors('initialize', this);\n  },\n\n\n  // Serialize the view's model *or* collection, if\n  // it exists, for the template\n  serializeData: function serializeData() {\n    if (!this.model && !this.collection) {\n      return {};\n    }\n\n    // If we have a model, we serialize that\n    if (this.model) {\n      return this.serializeModel();\n    }\n\n    // Otherwise, we serialize the collection,\n    // making it available under the `items` property\n    return {\n      items: this.serializeCollection()\n    };\n  },\n\n\n  // Prepares the special `model` property of a view\n  // for being displayed in the template. By default\n  // we simply clone the attributes. Override this if\n  // you need a custom transformation for your view's model\n  serializeModel: function serializeModel() {\n    if (!this.model) {\n      return {};\n    }\n    return _.clone(this.model.attributes);\n  },\n\n\n  // Serialize a collection by cloning each of\n  // its model's attributes\n  serializeCollection: function serializeCollection() {\n    if (!this.collection) {\n      return {};\n    }\n    return this.collection.map(function (model) {\n      return _.clone(model.attributes);\n    });\n  },\n\n\n  // Overriding Backbone.View's `setElement` to handle\n  // if an el was previously defined. If so, the view might be\n  // rendered or attached on setElement.\n  setElement: function setElement() {\n    var hasEl = !!this.el;\n\n    Backbone.View.prototype.setElement.apply(this, arguments);\n\n    if (hasEl) {\n      this._isRendered = this.Dom.hasContents(this.el);\n      this._isAttached = isNodeAttached(this.el);\n    }\n\n    if (this._isRendered) {\n      this.bindUIElements();\n    }\n\n    return this;\n  },\n\n\n  // Render the view, defaulting to underscore.js templates.\n  // You can override this in your view definition to provide\n  // a very specific rendering for your view. In general, though,\n  // you should override the `Marionette.Renderer` object to\n  // change how Marionette renders views.\n  // Subsequent renders after the first will re-render all nested\n  // views.\n  render: function render() {\n    if (this._isDestroyed) {\n      return this;\n    }\n\n    this.triggerMethod('before:render', this);\n\n    // If this is not the first render call, then we need to\n    // re-initialize the `el` for each region\n    if (this._isRendered) {\n      this._reInitRegions();\n    }\n\n    this._renderTemplate();\n    this.bindUIElements();\n\n    this._isRendered = true;\n    this.triggerMethod('render', this);\n\n    return this;\n  },\n\n\n  // Internal method to render the template with the serialized data\n  // and template context via the `Marionette.Renderer` object.\n  _renderTemplate: function _renderTemplate() {\n    var template = this.getTemplate();\n\n    // Allow template-less views\n    if (template === false) {\n      deprecate('template:false is deprecated.  Use _.noop.');\n      return;\n    }\n\n    // Add in entity data and template context\n    var data = this.mixinTemplateContext(this.serializeData());\n\n    // Render and add to el\n    var html = this._renderHtml(template, data);\n    this.attachElContent(html);\n  },\n\n\n  // Renders the data into the template\n  _renderHtml: function _renderHtml(template, data) {\n    return Renderer.render(template, data, this);\n  },\n\n\n  // Get the template for this view\n  // instance. You can set a `template` attribute in the view\n  // definition or pass a `template: \"whatever\"` parameter in\n  // to the constructor options.\n  getTemplate: function getTemplate() {\n    return this.template;\n  },\n\n\n  // Mix in template context methods. Looks for a\n  // `templateContext` attribute, which can either be an\n  // object literal, or a function that returns an object\n  // literal. All methods and attributes from this object\n  // are copies to the object passed in.\n  mixinTemplateContext: function mixinTemplateContext() {\n    var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var templateContext = _.result(this, 'templateContext');\n    return _.extend(target, templateContext);\n  },\n\n\n  // Attaches the content of a given view.\n  // This method can be overridden to optimize rendering,\n  // or to render in a non standard way.\n  //\n  // For example, using `innerHTML` instead of `$el.html`\n  //\n  // ```js\n  // attachElContent(html) {\n  //   this.el.innerHTML = html;\n  //   return this;\n  // }\n  // ```\n  attachElContent: function attachElContent(html) {\n    this.Dom.setContents(this.el, html, this.$el);\n\n    return this;\n  },\n\n\n  // called by ViewMixin destroy\n  _removeChildren: function _removeChildren() {\n    this.removeRegions();\n  },\n  _getImmediateChildren: function _getImmediateChildren() {\n    return _.chain(this._getRegions()).map('currentView').compact().value();\n  }\n}, {\n  // Sets the renderer for the Marionette.View class\n  setRenderer: function setRenderer(renderer) {\n    this.prototype._renderHtml = renderer;\n    return this;\n  },\n\n\n  setDomApi: setDomApi\n});\n\n_.extend(View.prototype, ViewMixin, RegionsMixin);\n\n// Mix in methods from Underscore, for iteration, and other\n// collection related features.\n// Borrowing this code from Backbone.Collection:\n// https://github.com/jashkenas/backbone/blob/1.1.2/backbone.js#L962\n\nvar methods = ['forEach', 'each', 'map', 'find', 'detect', 'filter', 'select', 'reject', 'every', 'all', 'some', 'any', 'include', 'contains', 'invoke', 'toArray', 'first', 'initial', 'rest', 'last', 'without', 'isEmpty', 'pluck', 'reduce', 'partition'];\n\nvar emulateCollection = function emulateCollection(object, listProperty) {\n  _.each(methods, function (method) {\n    object[method] = function () {\n      var list = _.result(this, listProperty);\n      var args = Array.prototype.slice.call(arguments);\n      return _[method].apply(_, [list].concat(args));\n    };\n  });\n};\n\n// Provide a container to store, retrieve and\n// shut down child views.\nvar Container = function Container(views) {\n  this._views = {};\n  this._indexByModel = {};\n  this._indexByCustom = {};\n  this._updateLength();\n\n  _.each(views, _.bind(this.add, this));\n};\n\nemulateCollection(Container.prototype, '_getViews');\n\n// Container Methods\n// -----------------\n\n_.extend(Container.prototype, {\n  _getViews: function _getViews() {\n    return _.values(this._views);\n  },\n\n\n  // Add a view to this container. Stores the view\n  // by `cid` and makes it searchable by the model\n  // cid (and model itself). Optionally specify\n  // a custom key to store an retrieve the view.\n  add: function add(view, customIndex) {\n    return this._add(view, customIndex)._updateLength();\n  },\n\n\n  // To be used when avoiding call _updateLength\n  // When you are done adding all your new views\n  // call _updateLength\n  _add: function _add(view, customIndex) {\n    var viewCid = view.cid;\n\n    // store the view\n    this._views[viewCid] = view;\n\n    // index it by model\n    if (view.model) {\n      this._indexByModel[view.model.cid] = viewCid;\n    }\n\n    // index by custom\n    if (customIndex) {\n      this._indexByCustom[customIndex] = viewCid;\n    }\n\n    return this;\n  },\n\n\n  // Find a view by the model that was attached to\n  // it. Uses the model's `cid` to find it.\n  findByModel: function findByModel(model) {\n    return this.findByModelCid(model.cid);\n  },\n\n\n  // Find a view by the `cid` of the model that was attached to\n  // it. Uses the model's `cid` to find the view `cid` and\n  // retrieve the view using it.\n  findByModelCid: function findByModelCid(modelCid) {\n    var viewCid = this._indexByModel[modelCid];\n    return this.findByCid(viewCid);\n  },\n\n\n  // Find a view by a custom indexer.\n  findByCustom: function findByCustom(index) {\n    var viewCid = this._indexByCustom[index];\n    return this.findByCid(viewCid);\n  },\n\n\n  // Find by index. This is not guaranteed to be a\n  // stable index.\n  findByIndex: function findByIndex(index) {\n    return _.values(this._views)[index];\n  },\n\n\n  // retrieve a view by its `cid` directly\n  findByCid: function findByCid(cid) {\n    return this._views[cid];\n  },\n\n\n  // Remove a view\n  remove: function remove(view) {\n    return this._remove(view)._updateLength();\n  },\n\n\n  // To be used when avoiding call _updateLength\n  // When you are done adding all your new views\n  // call _updateLength\n  _remove: function _remove(view) {\n    var viewCid = view.cid;\n\n    // delete model index\n    if (view.model) {\n      delete this._indexByModel[view.model.cid];\n    }\n\n    // delete custom index\n    _.some(this._indexByCustom, _.bind(function (cid, key) {\n      if (cid === viewCid) {\n        delete this._indexByCustom[key];\n        return true;\n      }\n    }, this));\n\n    // remove the view from the container\n    delete this._views[viewCid];\n\n    return this;\n  },\n\n\n  // Update the `.length` attribute on this container\n  _updateLength: function _updateLength() {\n    this.length = _.size(this._views);\n\n    return this;\n  }\n});\n\n// Collection View\n// ---------------\n\nvar ClassOptions$3 = ['behaviors', 'childView', 'childViewEventPrefix', 'childViewEvents', 'childViewOptions', 'childViewTriggers', 'collectionEvents', 'events', 'filter', 'emptyView', 'emptyViewOptions', 'modelEvents', 'reorderOnSort', 'sort', 'triggers', 'ui', 'viewComparator'];\n\n// A view that iterates over a Backbone.Collection\n// and renders an individual child view for each model.\nvar CollectionView = Backbone.View.extend({\n\n  // flag for maintaining the sorted order of the collection\n  sort: true,\n\n  // constructor\n  // option to pass `{sort: false}` to prevent the `CollectionView` from\n  // maintaining the sorted order of the collection.\n  // This will fallback onto appending childView's to the end.\n  //\n  // option to pass `{viewComparator: compFunction()}` to allow the `CollectionView`\n  // to use a custom sort order for the collection.\n  constructor: function constructor(options) {\n    this.render = _.bind(this.render, this);\n\n    this._setOptions(options);\n\n    this.mergeOptions(options, ClassOptions$3);\n\n    monitorViewEvents(this);\n\n    this._initBehaviors();\n    this.once('render', this._initialEvents);\n    this._initChildViewStorage();\n    this._bufferedChildren = [];\n\n    var args = Array.prototype.slice.call(arguments);\n    args[0] = this.options;\n    Backbone.View.prototype.constructor.apply(this, args);\n\n    this.delegateEntityEvents();\n\n    this._triggerEventOnBehaviors('initialize', this);\n  },\n\n\n  // Instead of inserting elements one by one into the page, it's much more performant to insert\n  // elements into a document fragment and then insert that document fragment into the page\n  _startBuffering: function _startBuffering() {\n    this._isBuffering = true;\n  },\n  _endBuffering: function _endBuffering() {\n    var shouldTriggerAttach = this._isAttached && this.monitorViewEvents !== false;\n    var triggerOnChildren = shouldTriggerAttach ? this._getImmediateChildren() : [];\n\n    this._isBuffering = false;\n\n    _.each(triggerOnChildren, function (child) {\n      triggerMethodOn(child, 'before:attach', child);\n    });\n\n    this.attachBuffer(this, this._createBuffer());\n\n    _.each(triggerOnChildren, function (child) {\n      child._isAttached = true;\n      triggerMethodOn(child, 'attach', child);\n    });\n\n    this._bufferedChildren = [];\n  },\n  _getImmediateChildren: function _getImmediateChildren() {\n    return _.values(this.children._views);\n  },\n\n\n  // Configured the initial events that the collection view binds to.\n  _initialEvents: function _initialEvents() {\n    if (this.collection) {\n      this.listenTo(this.collection, 'add', this._onCollectionAdd);\n      this.listenTo(this.collection, 'update', this._onCollectionUpdate);\n      this.listenTo(this.collection, 'reset', this.render);\n\n      if (this.sort) {\n        this.listenTo(this.collection, 'sort', this._sortViews);\n      }\n    }\n  },\n\n\n  // Handle a child added to the collection\n  _onCollectionAdd: function _onCollectionAdd(child, collection, opts) {\n    // `index` is present when adding with `at` since BB 1.2; indexOf fallback for < 1.2\n    var index = opts.at !== undefined && (opts.index || collection.indexOf(child));\n\n    // When filtered or when there is no initial index, calculate index.\n    if (this.filter || index === false) {\n      index = _.indexOf(this._filteredSortedModels(index), child);\n    }\n\n    if (this._shouldAddChild(child, index)) {\n      this._destroyEmptyView();\n      this._addChild(child, index);\n    }\n  },\n\n\n  // Handle collection update model removals\n  _onCollectionUpdate: function _onCollectionUpdate(collection, options) {\n    var changes = options.changes;\n    this._removeChildModels(changes.removed);\n  },\n\n\n  // Remove the child views and destroy them.\n  // This function also updates the indices of later views\n  // in the collection in order to keep the children in sync with the collection.\n  // \"models\" is an array of models and the corresponding views\n  // will be removed and destroyed from the CollectionView\n  _removeChildModels: function _removeChildModels(models) {\n    // Used to determine where to update the remaining\n    // sibling view indices after these views are removed.\n    var removedViews = this._getRemovedViews(models);\n\n    if (!removedViews.length) {\n      return;\n    }\n\n    this.children._updateLength();\n\n    // decrement the index of views after this one\n    this._updateIndices(removedViews, false);\n\n    if (this.isEmpty()) {\n      this._showEmptyView();\n    }\n  },\n\n\n  // Returns the views that will be used for re-indexing\n  // through CollectionView#_updateIndices.\n  _getRemovedViews: function _getRemovedViews(models) {\n    var _this = this;\n\n    // Returning a view means something was removed.\n    return _.reduce(models, function (removingViews, model) {\n      var view = model && _this.children.findByModel(model);\n\n      if (!view || view._isDestroyed) {\n        return removingViews;\n      }\n\n      _this._removeChildView(view);\n\n      removingViews.push(view);\n\n      return removingViews;\n    }, []);\n  },\n  _removeChildView: function _removeChildView(view) {\n    this.triggerMethod('before:remove:child', this, view);\n\n    this.children._remove(view);\n    view._shouldDisableEvents = this.monitorViewEvents === false;\n    destroyView(view);\n\n    this.stopListening(view);\n    this.triggerMethod('remove:child', this, view);\n  },\n\n\n  // Overriding Backbone.View's `setElement` to handle\n  // if an el was previously defined. If so, the view might be\n  // attached on setElement.\n  setElement: function setElement() {\n    var hasEl = !!this.el;\n\n    Backbone.View.prototype.setElement.apply(this, arguments);\n\n    if (hasEl) {\n      this._isAttached = isNodeAttached(this.el);\n    }\n\n    return this;\n  },\n\n\n  // Render children views. Override this method to provide your own implementation of a\n  // render function for the collection view.\n  render: function render() {\n    if (this._isDestroyed) {\n      return this;\n    }\n    this.triggerMethod('before:render', this);\n    this._renderChildren();\n    this._isRendered = true;\n    this.triggerMethod('render', this);\n    return this;\n  },\n\n\n  // An efficient rendering used for filtering. Instead of modifying the whole DOM for the\n  // collection view, we are only adding or removing the related childrenViews.\n  setFilter: function setFilter(filter) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        preventRender = _ref.preventRender;\n\n    var canBeRendered = this._isRendered && !this._isDestroyed;\n    var filterChanged = this.filter !== filter;\n    var shouldRender = canBeRendered && filterChanged && !preventRender;\n\n    if (shouldRender) {\n      var previousModels = this._filteredSortedModels();\n      this.filter = filter;\n      var models = this._filteredSortedModels();\n      this._applyModelDeltas(models, previousModels);\n    } else {\n      this.filter = filter;\n    }\n\n    return this;\n  },\n\n\n  // `removeFilter` is actually an alias for removing filters.\n  removeFilter: function removeFilter(options) {\n    return this.setFilter(null, options);\n  },\n\n\n  // Calculate and apply difference by cid between `models` and `previousModels`.\n  _applyModelDeltas: function _applyModelDeltas(models, previousModels) {\n    var _this2 = this;\n\n    var currentIds = {};\n    _.each(models, function (model, index) {\n      var addedChildNotExists = !_this2.children.findByModel(model);\n      if (addedChildNotExists) {\n        _this2._onCollectionAdd(model, _this2.collection, { at: index });\n      }\n      currentIds[model.cid] = true;\n    });\n\n    var removeModels = _.filter(previousModels, function (prevModel) {\n      return !currentIds[prevModel.cid] && _this2.children.findByModel(prevModel);\n    });\n\n    this._removeChildModels(removeModels);\n  },\n\n\n  // Reorder DOM after sorting. When your element's rendering do not use their index,\n  // you can pass reorderOnSort: true to only reorder the DOM after a sort instead of\n  // rendering all the collectionView.\n  reorder: function reorder() {\n    var _this3 = this;\n\n    var children = this.children;\n    var models = this._filteredSortedModels();\n\n    if (!models.length && this._showingEmptyView) {\n      return this;\n    }\n\n    var anyModelsAdded = _.some(models, function (model) {\n      return !children.findByModel(model);\n    });\n\n    // If there are any new models added due to filtering we need to add child views,\n    // so render as normal.\n    if (anyModelsAdded) {\n      this.render();\n    } else {\n\n      var filteredOutModels = [];\n\n      // Get the DOM nodes in the same order as the models and\n      // find the model that were children before but aren't in this new order.\n      var elsToReorder = _.reduce(this.children._views, function (viewEls, view) {\n        var index = _.indexOf(models, view.model);\n\n        if (index === -1) {\n          filteredOutModels.push(view.model);\n          return viewEls;\n        }\n\n        view._index = index;\n\n        viewEls[index] = view.el;\n\n        return viewEls;\n      }, new Array(models.length));\n\n      this.triggerMethod('before:reorder', this);\n\n      var elBuffer = this.Dom.createBuffer();\n\n      _.each(elsToReorder, function (el) {\n        _this3.Dom.appendContents(elBuffer, el);\n      });\n\n      // Since append moves elements that are already in the DOM, appending the elements\n      // will effectively reorder them.\n      this._appendReorderedChildren(elBuffer);\n\n      // remove any views that have been filtered out\n      this._removeChildModels(filteredOutModels);\n\n      this.triggerMethod('reorder', this);\n    }\n    return this;\n  },\n\n\n  // Render view after sorting. Override this method to change how the view renders\n  // after a `sort` on the collection.\n  resortView: function resortView() {\n    if (this.reorderOnSort) {\n      this.reorder();\n    } else {\n      this._renderChildren();\n    }\n    return this;\n  },\n\n\n  // Internal method. This checks for any changes in the order of the collection.\n  // If the index of any view doesn't match, it will render.\n  _sortViews: function _sortViews() {\n    var _this4 = this;\n\n    var models = this._filteredSortedModels();\n\n    // check for any changes in sort order of views\n    var orderChanged = _.find(models, function (item, index) {\n      var view = _this4.children.findByModel(item);\n      return !view || view._index !== index;\n    });\n\n    if (orderChanged) {\n      this.resortView();\n    }\n  },\n\n\n  // Internal reference to what index a `emptyView` is.\n  _emptyViewIndex: -1,\n\n  // Internal method. Separated so that CompositeView can append to the childViewContainer\n  // if necessary\n  _appendReorderedChildren: function _appendReorderedChildren(children) {\n    this.Dom.appendContents(this.el, children, { _$el: this.$el });\n  },\n\n\n  // Internal method. Separated so that CompositeView can have more control over events\n  // being triggered, around the rendering process\n  _renderChildren: function _renderChildren() {\n    if (this._isRendered) {\n      this._destroyEmptyView();\n      this._destroyChildren();\n    }\n\n    var models = this._filteredSortedModels();\n    if (this.isEmpty({ processedModels: models })) {\n      this._showEmptyView();\n    } else {\n      this.triggerMethod('before:render:children', this);\n      this._startBuffering();\n      this._showCollection(models);\n      this._endBuffering();\n      this.triggerMethod('render:children', this);\n    }\n  },\n  _createView: function _createView(model, index) {\n    var ChildView = this._getChildView(model);\n    var childViewOptions = this._getChildViewOptions(model, index);\n    var view = this.buildChildView(model, ChildView, childViewOptions);\n    return view;\n  },\n  _setupChildView: function _setupChildView(view, index) {\n    monitorViewEvents(view);\n\n    // set up the child view event forwarding\n    this._proxyChildViewEvents(view);\n\n    if (this.sort) {\n      view._index = index;\n    }\n  },\n\n\n  // Internal method to loop through collection and show each child view.\n  _showCollection: function _showCollection(models) {\n    _.each(models, _.bind(this._addChild, this));\n    this.children._updateLength();\n  },\n\n\n  // Allow the collection to be sorted by a custom view comparator\n  _filteredSortedModels: function _filteredSortedModels(addedAt) {\n    if (!this.collection || !this.collection.length) {\n      return [];\n    }\n\n    var viewComparator = this.getViewComparator();\n    var models = this.collection.models;\n    addedAt = Math.min(Math.max(addedAt, 0), models.length - 1);\n\n    if (viewComparator) {\n      var addedModel = void 0;\n      // Preserve `at` location, even for a sorted view\n      if (addedAt) {\n        addedModel = models[addedAt];\n        models = models.slice(0, addedAt).concat(models.slice(addedAt + 1));\n      }\n      models = this._sortModelsBy(models, viewComparator);\n      if (addedModel) {\n        models.splice(addedAt, 0, addedModel);\n      }\n    }\n\n    // Filter after sorting in case the filter uses the index\n    models = this._filterModels(models);\n\n    return models;\n  },\n  getViewComparator: function getViewComparator() {\n    return this.viewComparator;\n  },\n\n\n  // Filter an array of models, if a filter exists\n  _filterModels: function _filterModels(models) {\n    var _this5 = this;\n\n    if (this.filter) {\n      models = _.filter(models, function (model, index) {\n        return _this5._shouldAddChild(model, index);\n      });\n    }\n    return models;\n  },\n  _sortModelsBy: function _sortModelsBy(models, comparator) {\n    if (typeof comparator === 'string') {\n      return _.sortBy(models, function (model) {\n        return model.get(comparator);\n      });\n    } else if (comparator.length === 1) {\n      return _.sortBy(models, _.bind(comparator, this));\n    } else {\n      return _.clone(models).sort(_.bind(comparator, this));\n    }\n  },\n\n\n  // Internal method to show an empty view in place of a collection of child views,\n  // when the collection is empty\n  _showEmptyView: function _showEmptyView() {\n    var EmptyView = this._getEmptyView();\n\n    if (EmptyView && !this._showingEmptyView) {\n      this._showingEmptyView = true;\n\n      var model = new Backbone.Model();\n      var emptyViewOptions = this.emptyViewOptions || this.childViewOptions;\n      if (_.isFunction(emptyViewOptions)) {\n        emptyViewOptions = emptyViewOptions.call(this, model, this._emptyViewIndex);\n      }\n\n      var view = this.buildChildView(model, EmptyView, emptyViewOptions);\n\n      this.triggerMethod('before:render:empty', this, view);\n      this.addChildView(view, 0);\n      this.triggerMethod('render:empty', this, view);\n    }\n  },\n\n\n  // Internal method to destroy an existing emptyView instance if one exists. Called when\n  // a collection view has been rendered empty, and then a child is added to the collection.\n  _destroyEmptyView: function _destroyEmptyView() {\n    if (this._showingEmptyView) {\n      this.triggerMethod('before:remove:empty', this);\n\n      this._destroyChildren();\n      delete this._showingEmptyView;\n\n      this.triggerMethod('remove:empty', this);\n    }\n  },\n\n\n  // Retrieve the empty view class\n  _getEmptyView: function _getEmptyView() {\n    var emptyView = this.emptyView;\n\n    if (!emptyView) {\n      return;\n    }\n\n    return this._getView(emptyView);\n  },\n\n\n  // Retrieve the `childView` class\n  // The `childView` property can be either a view class or a function that\n  // returns a view class. If it is a function, it will receive the model that\n  // will be passed to the view instance (created from the returned view class)\n  _getChildView: function _getChildView(child) {\n    var childView = this.childView;\n\n    if (!childView) {\n      throw new MarionetteError({\n        name: 'NoChildViewError',\n        message: 'A \"childView\" must be specified'\n      });\n    }\n\n    childView = this._getView(childView, child);\n\n    if (!childView) {\n      throw new MarionetteError({\n        name: 'InvalidChildViewError',\n        message: '\"childView\" must be a view class or a function that returns a view class'\n      });\n    }\n\n    return childView;\n  },\n\n\n  // First check if the `view` is a view class (the common case)\n  // Then check if it's a function (which we assume that returns a view class)\n  _getView: function _getView(view, child) {\n    if (view.prototype instanceof Backbone.View || view === Backbone.View) {\n      return view;\n    } else if (_.isFunction(view)) {\n      return view.call(this, child);\n    }\n  },\n\n\n  // Internal method for building and adding a child view\n  _addChild: function _addChild(child, index) {\n    var view = this._createView(child, index);\n    this.addChildView(view, index);\n\n    return view;\n  },\n  _getChildViewOptions: function _getChildViewOptions(child, index) {\n    if (_.isFunction(this.childViewOptions)) {\n      return this.childViewOptions(child, index);\n    }\n\n    return this.childViewOptions;\n  },\n\n\n  // Render the child's view and add it to the HTML for the collection view at a given index.\n  // This will also update the indices of later views in the collection in order to keep the\n  // children in sync with the collection.\n  addChildView: function addChildView(view, index) {\n    this.triggerMethod('before:add:child', this, view);\n    this._setupChildView(view, index);\n\n    // Store the child view itself so we can properly remove and/or destroy it later\n    if (this._isBuffering) {\n      // Add to children, but don't update children's length.\n      this.children._add(view);\n    } else {\n      // increment indices of views after this one\n      this._updateIndices(view, true);\n      this.children.add(view);\n    }\n\n    renderView(view);\n\n    this._attachView(view, index);\n\n    this.triggerMethod('add:child', this, view);\n\n    return view;\n  },\n\n\n  // Internal method. This decrements or increments the indices of views after the added/removed\n  // view to keep in sync with the collection.\n  _updateIndices: function _updateIndices(views, increment) {\n    if (!this.sort) {\n      return;\n    }\n\n    if (!increment) {\n      _.each(_.sortBy(this.children._views, '_index'), function (view, index) {\n        view._index = index;\n      });\n\n      return;\n    }\n\n    var view = _.isArray(views) ? _.max(views, '_index') : views;\n\n    if (_.isObject(view)) {\n      // update the indexes of views after this one\n      _.each(this.children._views, function (laterView) {\n        if (laterView._index >= view._index) {\n          laterView._index += 1;\n        }\n      });\n    }\n  },\n  _attachView: function _attachView(view, index) {\n    // Only trigger attach if already attached and not buffering,\n    // otherwise _endBuffering() or Region#show() handles this.\n    var shouldTriggerAttach = !view._isAttached && !this._isBuffering && this._isAttached && this.monitorViewEvents !== false;\n\n    if (shouldTriggerAttach) {\n      triggerMethodOn(view, 'before:attach', view);\n    }\n\n    this.attachHtml(this, view, index);\n\n    if (shouldTriggerAttach) {\n      view._isAttached = true;\n      triggerMethodOn(view, 'attach', view);\n    }\n  },\n\n\n  // Build a `childView` for a model in the collection.\n  buildChildView: function buildChildView(child, ChildViewClass, childViewOptions) {\n    var options = _.extend({ model: child }, childViewOptions);\n    return new ChildViewClass(options);\n  },\n\n\n  // Remove the child view and destroy it. This function also updates the indices of later views\n  // in the collection in order to keep the children in sync with the collection.\n  removeChildView: function removeChildView(view) {\n    if (!view || view._isDestroyed) {\n      return view;\n    }\n\n    this._removeChildView(view);\n    this.children._updateLength();\n    // decrement the index of views after this one\n    this._updateIndices(view, false);\n    return view;\n  },\n\n\n  // check if the collection is empty or optionally whether an array of pre-processed models is empty\n  isEmpty: function isEmpty(options) {\n    var models = void 0;\n    if (_.result(options, 'processedModels')) {\n      models = options.processedModels;\n    } else {\n      models = this.collection ? this.collection.models : [];\n      models = this._filterModels(models);\n    }\n    return models.length === 0;\n  },\n\n\n  // You might need to override this if you've overridden attachHtml\n  attachBuffer: function attachBuffer(collectionView, buffer) {\n    this.Dom.appendContents(collectionView.el, buffer, { _$el: collectionView.$el });\n  },\n\n\n  // Create a fragment buffer from the currently buffered children\n  _createBuffer: function _createBuffer() {\n    var _this6 = this;\n\n    var elBuffer = this.Dom.createBuffer();\n    _.each(this._bufferedChildren, function (b) {\n      _this6.Dom.appendContents(elBuffer, b.el, { _$contents: b.$el });\n    });\n    return elBuffer;\n  },\n\n\n  // Append the HTML to the collection's `el`. Override this method to do something other\n  // than `.append`.\n  attachHtml: function attachHtml(collectionView, childView, index) {\n    if (collectionView._isBuffering) {\n      // buffering happens on reset events and initial renders\n      // in order to reduce the number of inserts into the\n      // document, which are expensive.\n      collectionView._bufferedChildren.splice(index, 0, childView);\n    } else {\n      // If we've already rendered the main collection, append\n      // the new child into the correct order if we need to. Otherwise\n      // append to the end.\n      if (!collectionView._insertBefore(childView, index)) {\n        collectionView._insertAfter(childView);\n      }\n    }\n  },\n\n\n  // Internal method. Check whether we need to insert the view into the correct position.\n  _insertBefore: function _insertBefore(childView, index) {\n    var currentView = void 0;\n    var findPosition = this.sort && index < this.children.length - 1;\n    if (findPosition) {\n      // Find the view after this one\n      currentView = _.find(this.children._views, function (view) {\n        return view._index === index + 1;\n      });\n    }\n\n    if (currentView) {\n      this.beforeEl(currentView.el, childView.el);\n      return true;\n    }\n\n    return false;\n  },\n\n\n  // Override to handle DOM inserting differently\n  beforeEl: function beforeEl(el, siblings) {\n    this.$(el).before(siblings);\n  },\n\n\n  // Internal method. Append a view to the end of the $el\n  _insertAfter: function _insertAfter(childView) {\n    this.Dom.appendContents(this.el, childView.el, { _$el: this.$el, _$contents: childView.$el });\n  },\n\n\n  // Internal method to set up the `children` object for storing all of the child views\n  _initChildViewStorage: function _initChildViewStorage() {\n    this.children = new Container();\n  },\n\n\n  // called by ViewMixin destroy\n  _removeChildren: function _removeChildren() {\n    this._destroyChildren();\n  },\n\n\n  // Destroy the child views that this collection view is holding on to, if any\n  _destroyChildren: function _destroyChildren(options) {\n    if (!this.children.length) {\n      return;\n    }\n\n    this.triggerMethod('before:destroy:children', this);\n    _.each(this.children._views, _.bind(this._removeChildView, this));\n    this.children._updateLength();\n    this.triggerMethod('destroy:children', this);\n  },\n\n\n  // Return true if the given child should be shown. Return false otherwise.\n  // The filter will be passed (child, index, collection), where\n  //  'child' is the given model\n  //  'index' is the index of that model in the collection\n  //  'collection' is the collection referenced by this CollectionView\n  _shouldAddChild: function _shouldAddChild(child, index) {\n    var filter = this.filter;\n    return !_.isFunction(filter) || filter.call(this, child, index, this.collection);\n  }\n}, {\n  setDomApi: setDomApi\n});\n\n_.extend(CollectionView.prototype, ViewMixin);\n\n// Provide a container to store, retrieve and\n// shut down child views.\nvar Container$1 = function Container() {\n  this._init();\n};\n\nemulateCollection(Container$1.prototype, '_views');\n\nfunction stringComparator(comparator, view) {\n  return view.model && view.model.get(comparator);\n}\n\n// Container Methods\n// -----------------\n\n_.extend(Container$1.prototype, {\n\n  // Initializes an empty container\n  _init: function _init() {\n    this._views = [];\n    this._viewsByCid = {};\n    this._indexByModel = {};\n    this._updateLength();\n  },\n\n\n  // Add a view to this container. Stores the view\n  // by `cid` and makes it searchable by the model\n  // cid (and model itself). Additionally it stores\n  // the view by index in the _views array\n  _add: function _add(view) {\n    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._views.length;\n\n    var viewCid = view.cid;\n\n    // store the view\n    this._viewsByCid[viewCid] = view;\n\n    // index it by model\n    if (view.model) {\n      this._indexByModel[view.model.cid] = viewCid;\n    }\n\n    // add to end by default\n    this._views.splice(index, 0, view);\n\n    this._updateLength();\n  },\n\n\n  // Sort (mutate) and return the array of the child views.\n  _sort: function _sort(comparator) {\n    if (typeof comparator === 'string') {\n      comparator = _.partial(stringComparator, comparator);\n      return this._sortBy(comparator);\n    }\n\n    if (comparator.length === 1) {\n      return this._sortBy(comparator);\n    }\n\n    return this._views.sort(comparator);\n  },\n\n\n  // Makes `_.sortBy` mutate the array to match `this._views.sort`\n  _sortBy: function _sortBy(comparator) {\n    var sortedViews = _.sortBy(this._views, comparator);\n\n    this._set(sortedViews);\n\n    return sortedViews;\n  },\n\n\n  // Replace array contents without overwriting the reference.\n  _set: function _set(views) {\n    this._views.length = 0;\n\n    this._views.push.apply(this._views, views.slice(0));\n\n    this._updateLength();\n  },\n\n\n  // Swap views by index\n  _swap: function _swap(view1, view2) {\n    var view1Index = this.findIndexByView(view1);\n    var view2Index = this.findIndexByView(view2);\n\n    if (view1Index === -1 || view2Index === -1) {\n      return;\n    }\n\n    var swapView = this._views[view1Index];\n    this._views[view1Index] = this._views[view2Index];\n    this._views[view2Index] = swapView;\n  },\n\n\n  // Find a view by the model that was attached to it.\n  // Uses the model's `cid` to find it.\n  findByModel: function findByModel(model) {\n    return this.findByModelCid(model.cid);\n  },\n\n\n  // Find a view by the `cid` of the model that was attached to it.\n  // Uses the model's `cid` to find the view `cid` and\n  // retrieve the view using it.\n  findByModelCid: function findByModelCid(modelCid) {\n    var viewCid = this._indexByModel[modelCid];\n    return this.findByCid(viewCid);\n  },\n\n\n  // Find a view by index.\n  findByIndex: function findByIndex(index) {\n    return this._views[index];\n  },\n\n\n  // Find the index of a view instance\n  findIndexByView: function findIndexByView(view) {\n    return this._views.indexOf(view);\n  },\n\n\n  // Retrieve a view by its `cid` directly\n  findByCid: function findByCid(cid) {\n    return this._viewsByCid[cid];\n  },\n  hasView: function hasView(view) {\n    return !!this.findByCid(view.cid);\n  },\n\n\n  // Remove a view and clean up index references.\n  _remove: function _remove(view) {\n    if (!this._viewsByCid[view.cid]) {\n      return;\n    }\n\n    // delete model index\n    if (view.model) {\n      delete this._indexByModel[view.model.cid];\n    }\n\n    // remove the view from the container\n    delete this._viewsByCid[view.cid];\n\n    var index = this.findIndexByView(view);\n    this._views.splice(index, 1);\n\n    this._updateLength();\n  },\n\n\n  // Update the `.length` attribute on this container\n  _updateLength: function _updateLength() {\n    this.length = this._views.length;\n  }\n});\n\n// Next Collection View\n// ---------------\n\nvar ClassOptions$4 = ['behaviors', 'childView', 'childViewEventPrefix', 'childViewEvents', 'childViewOptions', 'childViewTriggers', 'collectionEvents', 'emptyView', 'emptyViewOptions', 'events', 'modelEvents', 'sortWithCollection', 'triggers', 'ui', 'viewComparator', 'viewFilter'];\n\n// A view that iterates over a Backbone.Collection\n// and renders an individual child view for each model.\nvar CollectionView$2 = Backbone.View.extend({\n  // flag for maintaining the sorted order of the collection\n  sortWithCollection: true,\n\n  // constructor\n  constructor: function constructor(options) {\n    this._setOptions(options);\n\n    this.mergeOptions(options, ClassOptions$4);\n\n    monitorViewEvents(this);\n\n    this.once('render', this._initialEvents);\n\n    // This children container isn't really used by a render, but it provides\n    // the ability to check `this.children.length` prior to rendering\n    // It also allows for cases where only addChildView is used\n    this._initChildViewStorage();\n    this._initBehaviors();\n\n    var args = Array.prototype.slice.call(arguments);\n    args[0] = this.options;\n    Backbone.View.prototype.constructor.apply(this, args);\n\n    // Init empty region\n    this.getEmptyRegion();\n\n    this.delegateEntityEvents();\n\n    this._triggerEventOnBehaviors('initialize', this);\n  },\n\n\n  // Internal method to set up the `children` object for storing all of the child views\n  _initChildViewStorage: function _initChildViewStorage() {\n    this.children = new Container$1();\n  },\n\n\n  // Create an region to show the emptyView\n  getEmptyRegion: function getEmptyRegion() {\n    if (this._emptyRegion && !this._emptyRegion.isDestroyed()) {\n      return this._emptyRegion;\n    }\n\n    this._emptyRegion = new Region({ el: this.el, replaceElement: false });\n\n    this._emptyRegion._parentView = this;\n\n    return this._emptyRegion;\n  },\n\n\n  // Configured the initial events that the collection view binds to.\n  _initialEvents: function _initialEvents() {\n    this.listenTo(this.collection, {\n      'sort': this._onCollectionSort,\n      'reset': this._onCollectionReset,\n      'update': this._onCollectionUpdate\n    });\n  },\n\n\n  // Internal method. This checks for any changes in the order of the collection.\n  // If the index of any view doesn't match, it will re-sort.\n  _onCollectionSort: function _onCollectionSort() {\n    var _this = this;\n\n    if (!this.sortWithCollection || this.viewComparator === false) {\n      return;\n    }\n\n    // If the data is changing we will handle the sort later\n    if (this.collection.length !== this.children.length) {\n      return;\n    }\n\n    // Additional check if the data is changing\n    var hasAddedModel = this.collection.some(function (model) {\n      return !_this.children.findByModel(model);\n    });\n\n    if (hasAddedModel) {\n      return;\n    }\n\n    // If the only thing happening here is sorting, sort.\n    this.sort();\n  },\n  _onCollectionReset: function _onCollectionReset() {\n    this.render();\n  },\n\n\n  // Handle collection update model additions and  removals\n  _onCollectionUpdate: function _onCollectionUpdate(collection, options) {\n    var changes = options.changes;\n\n    // Remove first since it'll be a shorter array lookup.\n    var removedViews = changes.removed.length && this._removeChildModels(changes.removed);\n\n    this._addedViews = changes.added.length && this._addChildModels(changes.added);\n\n    this._detachChildren(removedViews);\n\n    this._showChildren();\n\n    // Destroy removed child views after all of the render is complete\n    this._removeChildViews(removedViews);\n  },\n  _removeChildModels: function _removeChildModels(models) {\n    return _.map(models, _.bind(this._removeChildModel, this));\n  },\n  _removeChildModel: function _removeChildModel(model) {\n    var view = this.children.findByModel(model);\n\n    this._removeChild(view);\n\n    return view;\n  },\n  _removeChild: function _removeChild(view) {\n    this.triggerMethod('before:remove:child', this, view);\n\n    this.children._remove(view);\n\n    this.triggerMethod('remove:child', this, view);\n  },\n\n\n  // Added views are returned for consistency with _removeChildModels\n  _addChildModels: function _addChildModels(models) {\n    return _.map(models, _.bind(this._addChildModel, this));\n  },\n  _addChildModel: function _addChildModel(model) {\n    var view = this._createChildView(model);\n\n    this._addChild(view);\n\n    return view;\n  },\n  _createChildView: function _createChildView(model) {\n    var ChildView = this._getChildView(model);\n    var childViewOptions = this._getChildViewOptions(model);\n    var view = this.buildChildView(model, ChildView, childViewOptions);\n\n    return view;\n  },\n  _addChild: function _addChild(view, index) {\n    this.triggerMethod('before:add:child', this, view);\n\n    this._setupChildView(view);\n    this.children._add(view, index);\n\n    this.triggerMethod('add:child', this, view);\n  },\n\n\n  // Retrieve the `childView` class\n  // The `childView` property can be either a view class or a function that\n  // returns a view class. If it is a function, it will receive the model that\n  // will be passed to the view instance (created from the returned view class)\n  _getChildView: function _getChildView(child) {\n    var childView = this.childView;\n\n    if (!childView) {\n      throw new MarionetteError({\n        name: 'NoChildViewError',\n        message: 'A \"childView\" must be specified'\n      });\n    }\n\n    childView = this._getView(childView, child);\n\n    if (!childView) {\n      throw new MarionetteError({\n        name: 'InvalidChildViewError',\n        message: '\"childView\" must be a view class or a function that returns a view class'\n      });\n    }\n\n    return childView;\n  },\n\n\n  // First check if the `view` is a view class (the common case)\n  // Then check if it's a function (which we assume that returns a view class)\n  _getView: function _getView(view, child) {\n    if (view.prototype instanceof Backbone.View || view === Backbone.View) {\n      return view;\n    } else if (_.isFunction(view)) {\n      return view.call(this, child);\n    }\n  },\n  _getChildViewOptions: function _getChildViewOptions(child) {\n    if (_.isFunction(this.childViewOptions)) {\n      return this.childViewOptions(child);\n    }\n\n    return this.childViewOptions;\n  },\n\n\n  // Build a `childView` for a model in the collection.\n  // Override to customize the build\n  buildChildView: function buildChildView(child, ChildViewClass, childViewOptions) {\n    var options = _.extend({ model: child }, childViewOptions);\n    return new ChildViewClass(options);\n  },\n  _setupChildView: function _setupChildView(view) {\n    monitorViewEvents(view);\n\n    // We need to listen for if a view is destroyed in a way other\n    // than through the CollectionView.\n    // If this happens we need to remove the reference to the view\n    // since once a view has been destroyed we can not reuse it.\n    view.on('destroy', this.removeChildView, this);\n\n    // set up the child view event forwarding\n    this._proxyChildViewEvents(view);\n  },\n\n\n  // used by ViewMixin's `_childViewEventHandler`\n  _getImmediateChildren: function _getImmediateChildren() {\n    return this.children._views;\n  },\n\n\n  // Overriding Backbone.View's `setElement` to handle\n  // if an el was previously defined. If so, the view might be\n  // attached on setElement.\n  setElement: function setElement() {\n    var hasEl = !!this.el;\n\n    Backbone.View.prototype.setElement.apply(this, arguments);\n\n    if (hasEl) {\n      this._isAttached = isNodeAttached(this.el);\n    }\n\n    return this;\n  },\n\n\n  // Render children views.\n  render: function render() {\n    if (this._isDestroyed) {\n      return this;\n    }\n    this.triggerMethod('before:render', this);\n\n    this._destroyChildren();\n\n    // After all children have been destroyed re-init the container\n    this.children._init();\n\n    if (this.collection) {\n      this._addChildModels(this.collection.models);\n    }\n\n    this._showChildren();\n\n    this._isRendered = true;\n\n    this.triggerMethod('render', this);\n    return this;\n  },\n\n\n  // Sorts the children then filters and renders the results.\n  sort: function sort() {\n    if (this._isDestroyed) {\n      return this;\n    }\n\n    if (!this.children.length) {\n      return this;\n    }\n\n    this._showChildren();\n\n    return this;\n  },\n  _showChildren: function _showChildren() {\n    if (this.isEmpty()) {\n      this._showEmptyView();\n      return;\n    }\n\n    this._sortChildren();\n\n    this.filter();\n  },\n\n\n  // Returns true if the collectionView is considered empty.\n  // This is called twice during a render. Once to check the data,\n  // and again when views are filtered. Override this function to\n  // customize what empty means.\n  isEmpty: function isEmpty(allViewsFiltered) {\n    return allViewsFiltered || !this.children.length;\n  },\n  _showEmptyView: function _showEmptyView() {\n    var EmptyView = this._getEmptyView();\n\n    if (!EmptyView) {\n      return;\n    }\n\n    var options = this._getEmptyViewOptions();\n\n    var emptyRegion = this.getEmptyRegion();\n\n    emptyRegion.show(new EmptyView(options));\n  },\n\n\n  // Retrieve the empty view class\n  _getEmptyView: function _getEmptyView() {\n    var emptyView = this.emptyView;\n\n    if (!emptyView) {\n      return;\n    }\n\n    return this._getView(emptyView);\n  },\n\n\n  // Remove the emptyView\n  _destroyEmptyView: function _destroyEmptyView() {\n    var emptyRegion = this.getEmptyRegion();\n    // Only empty if a view is show so the region\n    // doesn't detach any other unrelated HTML\n    if (emptyRegion.hasView()) {\n      emptyRegion.empty();\n    }\n  },\n\n\n  //\n  _getEmptyViewOptions: function _getEmptyViewOptions() {\n    var emptyViewOptions = this.emptyViewOptions || this.childViewOptions;\n\n    if (_.isFunction(emptyViewOptions)) {\n      return emptyViewOptions.call(this);\n    }\n\n    return emptyViewOptions;\n  },\n\n\n  // Sorts views by viewComparator and sets the children to the new order\n  _sortChildren: function _sortChildren() {\n    if (this.viewComparator === false) {\n      return;\n    }\n\n    this.triggerMethod('before:sort', this);\n\n    var viewComparator = this.getComparator();\n\n    if (_.isFunction(viewComparator)) {\n      // Must use native bind to preserve length\n      viewComparator = viewComparator.bind(this);\n    }\n\n    this.children._sort(viewComparator);\n\n    this.triggerMethod('sort', this);\n  },\n\n\n  // Sets the view's `viewComparator` and applies the sort if the view is ready.\n  // To prevent the render pass `{ preventRender: true }` as the 2nd argument.\n  setComparator: function setComparator(comparator) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        preventRender = _ref.preventRender;\n\n    var comparatorChanged = this.viewComparator !== comparator;\n    var shouldSort = comparatorChanged && !preventRender;\n\n    this.viewComparator = comparator;\n\n    if (shouldSort) {\n      this.sort();\n    }\n\n    return this;\n  },\n\n\n  // Clears the `viewComparator` and follows the same rules for rendering as `setComparator`.\n  removeComparator: function removeComparator(options) {\n    return this.setComparator(null, options);\n  },\n\n\n  // If viewComparator is overriden it will be returned here.\n  // Additionally override this function to provide custom\n  // viewComparator logic\n  getComparator: function getComparator() {\n    return this.viewComparator || this._viewComparator;\n  },\n\n\n  // Default internal view comparator that order the views by\n  // the order of the collection\n  _viewComparator: function _viewComparator(view) {\n    if (!this.collection) {\n      return;\n    }\n    return this.collection.indexOf(view.model);\n  },\n\n\n  // This method re-filters the children views and re-renders the results\n  filter: function filter() {\n    if (this._isDestroyed) {\n      return this;\n    }\n\n    if (!this.children.length) {\n      return this;\n    }\n\n    var filteredViews = this._filterChildren();\n\n    this._renderChildren(filteredViews);\n\n    return this;\n  },\n  _isAddedAtEnd: function _isAddedAtEnd(addedView, index, addedViews) {\n    var viewIndex = this.children._views.length - addedViews.length + index;\n    return addedView === this.children._views[viewIndex];\n  },\n  _filterChildren: function _filterChildren() {\n    var viewFilter = this._getFilter();\n    var addedViews = this._addedViews;\n\n    delete this._addedViews;\n\n    if (!viewFilter) {\n      if (addedViews && _.every(addedViews, _.bind(this._isAddedAtEnd, this))) {\n        return addedViews;\n      }\n\n      return this.children._views;\n    }\n\n    this.triggerMethod('before:filter', this);\n\n    var filteredViews = _.partition(this.children._views, _.bind(viewFilter, this));\n\n    this._detachChildren(filteredViews[1]);\n\n    this.triggerMethod('filter', this);\n\n    return filteredViews[0];\n  },\n\n\n  // This method returns a function for the viewFilter\n  _getFilter: function _getFilter() {\n    var viewFilter = this.getFilter();\n\n    if (!viewFilter) {\n      return false;\n    }\n\n    if (_.isFunction(viewFilter)) {\n      return viewFilter;\n    }\n\n    // Support filter predicates `{ fooFlag: true }`\n    if (_.isObject(viewFilter)) {\n      var matcher = _.matches(viewFilter);\n      return function (view) {\n        return matcher(view.model && view.model.attributes);\n      };\n    }\n\n    // Filter by model attribute\n    if (_.isString(viewFilter)) {\n      return function (view) {\n        return view.model && view.model.get(viewFilter);\n      };\n    }\n\n    throw new MarionetteError({\n      name: 'InvalidViewFilterError',\n      message: '\"viewFilter\" must be a function, predicate object literal, a string indicating a model attribute, or falsy'\n    });\n  },\n\n\n  // Override this function to provide custom\n  // viewFilter logic\n  getFilter: function getFilter() {\n    return this.viewFilter;\n  },\n\n\n  // Sets the view's `viewFilter` and applies the filter if the view is ready.\n  // To prevent the render pass `{ preventRender: true }` as the 2nd argument.\n  setFilter: function setFilter(filter) {\n    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        preventRender = _ref2.preventRender;\n\n    var filterChanged = this.viewFilter !== filter;\n    var shouldRender = filterChanged && !preventRender;\n\n    this.viewFilter = filter;\n\n    if (shouldRender) {\n      this.filter();\n    }\n\n    return this;\n  },\n\n\n  // Clears the `viewFilter` and follows the same rules for rendering as `setFilter`.\n  removeFilter: function removeFilter(options) {\n    return this.setFilter(null, options);\n  },\n  _detachChildren: function _detachChildren(detachingViews) {\n    _.each(detachingViews, _.bind(this._detachChildView, this));\n  },\n  _detachChildView: function _detachChildView(view) {\n    var shouldTriggerDetach = view._isAttached && this.monitorViewEvents !== false;\n    if (shouldTriggerDetach) {\n      triggerMethodOn(view, 'before:detach', view);\n    }\n\n    this.detachHtml(view);\n\n    if (shouldTriggerDetach) {\n      view._isAttached = false;\n      triggerMethodOn(view, 'detach', view);\n    }\n  },\n\n\n  // Override this method to change how the collectionView detaches a child view\n  detachHtml: function detachHtml(view) {\n    this.Dom.detachEl(view.el, view.$el);\n  },\n  _renderChildren: function _renderChildren(views) {\n    if (this.isEmpty(!views.length)) {\n      this._showEmptyView();\n      return;\n    }\n\n    this._destroyEmptyView();\n\n    this.triggerMethod('before:render:children', this, views);\n\n    var els = this._getBuffer(views);\n\n    this._attachChildren(els, views);\n\n    this.triggerMethod('render:children', this, views);\n  },\n  _attachChildren: function _attachChildren(els, views) {\n    var shouldTriggerAttach = this._isAttached && this.monitorViewEvents !== false;\n\n    views = shouldTriggerAttach ? views : [];\n\n    _.each(views, function (view) {\n      if (view._isAttached) {\n        return;\n      }\n      triggerMethodOn(view, 'before:attach', view);\n    });\n\n    this.attachHtml(els);\n\n    _.each(views, function (view) {\n      if (view._isAttached) {\n        return;\n      }\n      view._isAttached = true;\n      triggerMethodOn(view, 'attach', view);\n    });\n  },\n\n\n  // Renders each view in children and creates a fragment buffer from them\n  _getBuffer: function _getBuffer(views) {\n    var _this2 = this;\n\n    var elBuffer = this.Dom.createBuffer();\n\n    _.each(views, function (view) {\n      renderView(view);\n      _this2.Dom.appendContents(elBuffer, view.el, { _$contents: view.$el });\n    });\n\n    return elBuffer;\n  },\n\n\n  // Override this method to do something other than `.append`.\n  // You can attach any HTML at this point including the els.\n  attachHtml: function attachHtml(els) {\n    this.Dom.appendContents(this.el, els, { _$el: this.$el });\n  },\n  swapChildViews: function swapChildViews(view1, view2) {\n    if (!this.children.hasView(view1) || !this.children.hasView(view2)) {\n      throw new MarionetteError({\n        name: 'ChildSwapError',\n        message: 'Both views must be children of the collection view'\n      });\n    }\n\n    this.children._swap(view1, view2);\n    this.Dom.swapEl(view1.el, view2.el);\n\n    // If the views are not filtered the same, refilter\n    if (this.Dom.hasEl(this.el, view1.el) !== this.Dom.hasEl(this.el, view2.el)) {\n      this.filter();\n    }\n\n    return this;\n  },\n\n\n  // Render the child's view and add it to the HTML for the collection view at a given index, based on the current sort\n  addChildView: function addChildView(view, index) {\n    if (!view || view._isDestroyed) {\n      return view;\n    }\n\n    this._addChild(view, index);\n    this._addedViews = [view];\n    this._showChildren();\n\n    return view;\n  },\n\n\n  // Detach a view from the children.  Best used when adding a\n  // childView from `addChildView`\n  detachChildView: function detachChildView(view) {\n    this.removeChildView(view, { shouldDetach: true });\n\n    return view;\n  },\n\n\n  // Remove the child view and destroy it.  Best used when adding a\n  // childView from `addChildView`\n  // The options argument is for internal use only\n  removeChildView: function removeChildView(view, options) {\n    if (!view) {\n      return view;\n    }\n\n    this._removeChildView(view, options);\n\n    this._removeChild(view);\n\n    if (this.isEmpty()) {\n      this._showEmptyView();\n    }\n\n    return view;\n  },\n  _removeChildViews: function _removeChildViews(views) {\n    _.each(views, _.bind(this._removeChildView, this));\n  },\n  _removeChildView: function _removeChildView(view) {\n    var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        shouldDetach = _ref3.shouldDetach;\n\n    view.off('destroy', this.removeChildView, this);\n\n    if (shouldDetach) {\n      this._detachChildView(view);\n    } else {\n      this._destroyChildView(view);\n    }\n\n    this.stopListening(view);\n  },\n  _destroyChildView: function _destroyChildView(view) {\n    if (view._isDestroyed) {\n      return;\n    }\n\n    view._shouldDisableEvents = this.monitorViewEvents === false;\n    destroyView(view);\n  },\n\n\n  // called by ViewMixin destroy\n  _removeChildren: function _removeChildren() {\n    this._destroyChildren();\n    var emptyRegion = this.getEmptyRegion();\n    emptyRegion.destroy();\n    delete this._addedViews;\n  },\n\n\n  // Destroy the child views that this collection view is holding on to, if any\n  _destroyChildren: function _destroyChildren() {\n    if (!this.children || !this.children.length) {\n      return;\n    }\n\n    this.triggerMethod('before:destroy:children', this);\n    if (this.monitorViewEvents === false) {\n      this.Dom.detachContents(this.el, this.$el);\n    }\n    _.each(this.children._views, _.bind(this._removeChildView, this));\n    this.triggerMethod('destroy:children', this);\n  }\n}, {\n  setDomApi: setDomApi\n});\n\n_.extend(CollectionView$2.prototype, ViewMixin);\n\n// Composite View\n// --------------\n\nvar ClassOptions$5 = ['childViewContainer', 'template', 'templateContext'];\n\n// Used for rendering a branch-leaf, hierarchical structure.\n// Extends directly from CollectionView\n// @deprecated\nvar CompositeView = CollectionView.extend({\n\n  // Setting up the inheritance chain which allows changes to\n  // Marionette.CollectionView.prototype.constructor which allows overriding\n  // option to pass '{sort: false}' to prevent the CompositeView from\n  // maintaining the sorted order of the collection.\n  // This will fallback onto appending childView's to the end.\n  constructor: function constructor(options) {\n    deprecate('CompositeView is deprecated. Convert to View at your earliest convenience');\n\n    this.mergeOptions(options, ClassOptions$5);\n\n    CollectionView.prototype.constructor.apply(this, arguments);\n  },\n\n\n  // Configured the initial events that the composite view\n  // binds to. Override this method to prevent the initial\n  // events, or to add your own initial events.\n  _initialEvents: function _initialEvents() {\n\n    // Bind only after composite view is rendered to avoid adding child views\n    // to nonexistent childViewContainer\n\n    if (this.collection) {\n      this.listenTo(this.collection, 'add', this._onCollectionAdd);\n      this.listenTo(this.collection, 'update', this._onCollectionUpdate);\n      this.listenTo(this.collection, 'reset', this.renderChildren);\n\n      if (this.sort) {\n        this.listenTo(this.collection, 'sort', this._sortViews);\n      }\n    }\n  },\n\n\n  // Retrieve the `childView` to be used when rendering each of\n  // the items in the collection. The default is to return\n  // `this.childView` or Marionette.CompositeView if no `childView`\n  // has been defined. As happens in CollectionView, `childView` can\n  // be a function (which should return a view class).\n  _getChildView: function _getChildView(child) {\n    var childView = this.childView;\n\n    // for CompositeView, if `childView` is not specified, we'll get the same\n    // composite view class rendered for each child in the collection\n    // then check if the `childView` is a view class (the common case)\n    // finally check if it's a function (which we assume that returns a view class)\n    if (!childView) {\n      return this.constructor;\n    }\n\n    childView = this._getView(childView, child);\n\n    if (!childView) {\n      throw new MarionetteError({\n        name: 'InvalidChildViewError',\n        message: '\"childView\" must be a view class or a function that returns a view class'\n      });\n    }\n\n    return childView;\n  },\n\n\n  // Return the serialized model\n  serializeData: function serializeData() {\n    return this.serializeModel();\n  },\n\n\n  // Renders the model and the collection.\n  render: function render() {\n    if (this._isDestroyed) {\n      return this;\n    }\n    this._isRendering = true;\n    this.resetChildViewContainer();\n\n    this.triggerMethod('before:render', this);\n\n    this._renderTemplate();\n    this.bindUIElements();\n    this.renderChildren();\n\n    this._isRendering = false;\n    this._isRendered = true;\n    this.triggerMethod('render', this);\n    return this;\n  },\n  renderChildren: function renderChildren() {\n    if (this._isRendered || this._isRendering) {\n      CollectionView.prototype._renderChildren.call(this);\n    }\n  },\n\n\n  // You might need to override this if you've overridden attachHtml\n  attachBuffer: function attachBuffer(compositeView, buffer) {\n    var $container = this.getChildViewContainer(compositeView);\n    this.Dom.appendContents($container[0], buffer, { _$el: $container });\n  },\n\n\n  // Internal method. Append a view to the end of the $el.\n  // Overidden from CollectionView to ensure view is appended to\n  // childViewContainer\n  _insertAfter: function _insertAfter(childView) {\n    var $container = this.getChildViewContainer(this, childView);\n    this.Dom.appendContents($container[0], childView.el, { _$el: $container, _$contents: childView.$el });\n  },\n\n\n  // Internal method. Append reordered childView'.\n  // Overidden from CollectionView to ensure reordered views\n  // are appended to childViewContainer\n  _appendReorderedChildren: function _appendReorderedChildren(children) {\n    var $container = this.getChildViewContainer(this);\n    this.Dom.appendContents($container[0], children, { _$el: $container });\n  },\n\n\n  // Internal method to ensure an `$childViewContainer` exists, for the\n  // `attachHtml` method to use.\n  getChildViewContainer: function getChildViewContainer(containerView, childView) {\n    if (!!containerView.$childViewContainer) {\n      return containerView.$childViewContainer;\n    }\n\n    var container = void 0;\n    var childViewContainer = containerView.childViewContainer;\n    if (childViewContainer) {\n\n      var selector = _.result(containerView, 'childViewContainer');\n\n      if (selector.charAt(0) === '@' && containerView.ui) {\n        container = containerView.ui[selector.substr(4)];\n      } else {\n        container = this.$(selector);\n      }\n\n      if (container.length <= 0) {\n        throw new MarionetteError({\n          name: 'ChildViewContainerMissingError',\n          message: 'The specified \"childViewContainer\" was not found: ' + containerView.childViewContainer\n        });\n      }\n    } else {\n      container = containerView.$el;\n    }\n\n    containerView.$childViewContainer = container;\n    return container;\n  },\n\n\n  // Internal method to reset the `$childViewContainer` on render\n  resetChildViewContainer: function resetChildViewContainer() {\n    if (this.$childViewContainer) {\n      this.$childViewContainer = undefined;\n    }\n  }\n});\n\n// To prevent duplication but allow the best View organization\n// Certain View methods are mixed directly into the deprecated CompositeView\nvar MixinFromView = _.pick(View.prototype, 'serializeModel', 'getTemplate', '_renderTemplate', '_renderHtml', 'mixinTemplateContext', 'attachElContent');\n_.extend(CompositeView.prototype, MixinFromView);\n\n// Behavior\n// --------\n\n// A Behavior is an isolated set of DOM /\n// user interactions that can be mixed into any View.\n// Behaviors allow you to blackbox View specific interactions\n// into portable logical chunks, keeping your views simple and your code DRY.\n\nvar ClassOptions$6 = ['collectionEvents', 'events', 'modelEvents', 'triggers', 'ui'];\n\nvar Behavior = MarionetteObject.extend({\n  cidPrefix: 'mnb',\n\n  constructor: function constructor(options, view) {\n    // Setup reference to the view.\n    // this comes in handle when a behavior\n    // wants to directly talk up the chain\n    // to the view.\n    this.view = view;\n\n    if (this.defaults) {\n      deprecate('Behavior defaults are deprecated. For similar functionality set options on the Behavior class.');\n    }\n\n    this.defaults = _.clone(_.result(this, 'defaults', {}));\n\n    this._setOptions(_.extend({}, this.defaults, options));\n    this.mergeOptions(this.options, ClassOptions$6);\n\n    // Construct an internal UI hash using\n    // the behaviors UI hash and then the view UI hash.\n    // This allows the user to use UI hash elements\n    // defined in the parent view as well as those\n    // defined in the given behavior.\n    // This order will help the reuse and share of a behavior\n    // between multiple views, while letting a view override a\n    // selector under an UI key.\n    this.ui = _.extend({}, _.result(this, 'ui'), _.result(view, 'ui'));\n\n    MarionetteObject.apply(this, arguments);\n  },\n\n\n  // proxy behavior $ method to the view\n  // this is useful for doing jquery DOM lookups\n  // scoped to behaviors view.\n  $: function $() {\n    return this.view.$.apply(this.view, arguments);\n  },\n\n\n  // Stops the behavior from listening to events.\n  // Overrides Object#destroy to prevent additional events from being triggered.\n  destroy: function destroy() {\n    this.stopListening();\n\n    this.view._removeBehavior(this);\n\n    return this;\n  },\n  proxyViewProperties: function proxyViewProperties() {\n    this.$el = this.view.$el;\n    this.el = this.view.el;\n\n    return this;\n  },\n  bindUIElements: function bindUIElements() {\n    this._bindUIElements();\n\n    return this;\n  },\n  unbindUIElements: function unbindUIElements() {\n    this._unbindUIElements();\n\n    return this;\n  },\n  getUI: function getUI(name) {\n    return this._getUI(name);\n  },\n\n\n  // Handle `modelEvents`, and `collectionEvents` configuration\n  delegateEntityEvents: function delegateEntityEvents() {\n    this._delegateEntityEvents(this.view.model, this.view.collection);\n\n    return this;\n  },\n  undelegateEntityEvents: function undelegateEntityEvents() {\n    this._undelegateEntityEvents(this.view.model, this.view.collection);\n\n    return this;\n  },\n  getEvents: function getEvents() {\n    var _this = this;\n\n    // Normalize behavior events hash to allow\n    // a user to use the @ui. syntax.\n    var behaviorEvents = this.normalizeUIKeys(_.result(this, 'events'));\n\n    // binds the handler to the behavior and builds a unique eventName\n    return _.reduce(behaviorEvents, function (events, behaviorHandler, key) {\n      if (!_.isFunction(behaviorHandler)) {\n        behaviorHandler = _this[behaviorHandler];\n      }\n      if (!behaviorHandler) {\n        return;\n      }\n      key = getUniqueEventName(key);\n      events[key] = _.bind(behaviorHandler, _this);\n      return events;\n    }, {});\n  },\n\n\n  // Internal method to build all trigger handlers for a given behavior\n  getTriggers: function getTriggers() {\n    if (!this.triggers) {\n      return;\n    }\n\n    // Normalize behavior triggers hash to allow\n    // a user to use the @ui. syntax.\n    var behaviorTriggers = this.normalizeUIKeys(_.result(this, 'triggers'));\n\n    return this._getViewTriggers(this.view, behaviorTriggers);\n  }\n});\n\n_.extend(Behavior.prototype, DelegateEntityEventsMixin, TriggersMixin, UIMixin);\n\n// Application\n// -----------\nvar ClassOptions$7 = ['region', 'regionClass'];\n\n// A container for a Marionette application.\nvar Application = MarionetteObject.extend({\n  cidPrefix: 'mna',\n\n  constructor: function constructor(options) {\n    this._setOptions(options);\n\n    this.mergeOptions(options, ClassOptions$7);\n\n    this._initRegion();\n\n    MarionetteObject.prototype.constructor.apply(this, arguments);\n  },\n\n\n  regionClass: Region,\n\n  _initRegion: function _initRegion() {\n    var region = this.region;\n\n    if (!region) {\n      return;\n    }\n\n    var defaults = {\n      regionClass: this.regionClass\n    };\n\n    this._region = buildRegion(region, defaults);\n  },\n  getRegion: function getRegion() {\n    return this._region;\n  },\n  showView: function showView(view) {\n    var region = this.getRegion();\n\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return region.show.apply(region, [view].concat(args));\n  },\n  getView: function getView() {\n    return this.getRegion().currentView;\n  },\n\n\n  // kick off all of the application's processes.\n  start: function start(options) {\n    this.triggerMethod('before:start', this, options);\n    this.triggerMethod('start', this, options);\n    return this;\n  }\n});\n\n// App Router\n// ----------\n\n// Reduce the boilerplate code of handling route events\n// and then calling a single method on another object,\n// called a controller.\n// Have your routers configured to call the method on\n// your controller, directly.\n//\n// Configure an AppRouter with `appRoutes`.\n//\n// App routers can only take one `controller` object.\n// It is recommended that you divide your controller\n// objects in to smaller pieces of related functionality\n// and have multiple routers / controllers, instead of\n// just one giant router and controller.\n//\n// You can also add standard routes to an AppRouter.\n\nvar ClassOptions$8 = ['appRoutes', 'controller'];\n\nvar AppRouter = Backbone.Router.extend({\n  constructor: function constructor(options) {\n    this._setOptions(options);\n\n    this.mergeOptions(options, ClassOptions$8);\n\n    Backbone.Router.apply(this, arguments);\n\n    var appRoutes = this.appRoutes;\n    var controller = this._getController();\n    this.processAppRoutes(controller, appRoutes);\n    this.on('route', this._processOnRoute, this);\n  },\n\n\n  // Similar to route method on a Backbone Router but\n  // method is called on the controller\n  appRoute: function appRoute(route, methodName) {\n    var controller = this._getController();\n    this._addAppRoute(controller, route, methodName);\n    return this;\n  },\n\n\n  // process the route event and trigger the onRoute\n  // method call, if it exists\n  _processOnRoute: function _processOnRoute(routeName, routeArgs) {\n    // make sure an onRoute before trying to call it\n    if (_.isFunction(this.onRoute)) {\n      // find the path that matches the current route\n      var routePath = _.invert(this.appRoutes)[routeName];\n      this.onRoute(routeName, routePath, routeArgs);\n    }\n  },\n\n\n  // Internal method to process the `appRoutes` for the\n  // router, and turn them in to routes that trigger the\n  // specified method on the specified `controller`.\n  processAppRoutes: function processAppRoutes(controller, appRoutes) {\n    var _this = this;\n\n    if (!appRoutes) {\n      return this;\n    }\n\n    var routeNames = _.keys(appRoutes).reverse(); // Backbone requires reverted order of routes\n\n    _.each(routeNames, function (route) {\n      _this._addAppRoute(controller, route, appRoutes[route]);\n    });\n\n    return this;\n  },\n  _getController: function _getController() {\n    return this.controller;\n  },\n  _addAppRoute: function _addAppRoute(controller, route, methodName) {\n    var method = controller[methodName];\n\n    if (!method) {\n      throw new MarionetteError('Method \"' + methodName + '\" was not found on the controller');\n    }\n\n    this.route(route, methodName, _.bind(method, controller));\n  },\n\n\n  triggerMethod: triggerMethod\n});\n\n_.extend(AppRouter.prototype, CommonMixin);\n\n// Placeholder method to be extended by the user.\n// The method should define the object that stores the behaviors.\n// i.e.\n//\n// ```js\n// Marionette.Behaviors.behaviorsLookup: function() {\n//   return App.Behaviors\n// }\n// ```\nfunction behaviorsLookup() {\n  throw new MarionetteError({\n    message: 'You must define where your behaviors are stored.',\n    url: 'marionette.behaviors.md#behaviorslookup'\n  });\n}\n\nvar previousMarionette = Backbone.Marionette;\nvar Marionette = Backbone.Marionette = {};\n\n// This allows you to run multiple instances of Marionette on the same\n// webapp. After loading the new version, call `noConflict()` to\n// get a reference to it. At the same time the old version will be\n// returned to Backbone.Marionette.\nMarionette.noConflict = function () {\n  Backbone.Marionette = previousMarionette;\n  return this;\n};\n\n// Utilities\nMarionette.bindEvents = proxy(bindEvents);\nMarionette.unbindEvents = proxy(unbindEvents);\nMarionette.bindRequests = proxy(bindRequests);\nMarionette.unbindRequests = proxy(unbindRequests);\nMarionette.mergeOptions = proxy(mergeOptions);\nMarionette.getOption = proxy(getOption);\nMarionette.normalizeMethods = proxy(normalizeMethods);\nMarionette.extend = extend;\nMarionette.isNodeAttached = isNodeAttached;\nMarionette.deprecate = deprecate;\nMarionette.triggerMethod = proxy(triggerMethod);\nMarionette.triggerMethodOn = triggerMethodOn;\nMarionette.isEnabled = isEnabled;\nMarionette.setEnabled = setEnabled;\nMarionette.monitorViewEvents = monitorViewEvents;\n\nMarionette.Behaviors = {};\nMarionette.Behaviors.behaviorsLookup = behaviorsLookup;\n\n// Classes\nMarionette.Application = Application;\nMarionette.AppRouter = AppRouter;\nMarionette.Renderer = Renderer;\nMarionette.TemplateCache = TemplateCache;\nMarionette.View = View;\nMarionette.CollectionView = CollectionView;\nMarionette.NextCollectionView = CollectionView$2;\nMarionette.CompositeView = CompositeView;\nMarionette.Behavior = Behavior;\nMarionette.Region = Region;\nMarionette.Error = MarionetteError;\nMarionette.Object = MarionetteObject;\n\n// Configuration\nMarionette.DEV_MODE = false;\nMarionette.FEATURES = FEATURES;\nMarionette.VERSION = version;\nMarionette.DomApi = DomApi;\nMarionette.setDomApi = function (mixin) {\n  CollectionView.setDomApi(mixin);\n  CompositeView.setDomApi(mixin);\n  CollectionView$2.setDomApi(mixin);\n  Region.setDomApi(mixin);\n  View.setDomApi(mixin);\n};\n\nreturn Marionette;\n\n})));\nthis && this.Marionette && (this.Mn = this.Marionette);\n//# sourceMappingURL=backbone.marionette.js.map\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Backbone.js 1.3.3\n\n//     (c) 2010-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = (typeof self == 'object' && self.self === self && self) ||\n            (typeof global == 'object' && global.global === global && global);\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(5), __webpack_require__(4), exports], __WEBPACK_AMD_DEFINE_RESULT__ = function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'), $;\n    try { $ = require('jquery'); } catch (e) {}\n    factory(root, exports, _, $);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n})(function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to a common array method we'll want to use later.\n  var slice = Array.prototype.slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.3.3';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\n  // `attributes` object or collection's `models` array behind the scenes.\n  //\n  // collection.filter(function(model) { return model.get('age') > 10 });\n  // collection.each(this.addView);\n  //\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\n  var addMethod = function(length, method, attribute) {\n    switch (length) {\n      case 1: return function() {\n        return _[method](this[attribute]);\n      };\n      case 2: return function(value) {\n        return _[method](this[attribute], value);\n      };\n      case 3: return function(iteratee, context) {\n        return _[method](this[attribute], cb(iteratee, this), context);\n      };\n      case 4: return function(iteratee, defaultVal, context) {\n        return _[method](this[attribute], cb(iteratee, this), defaultVal, context);\n      };\n      default: return function() {\n        var args = slice.call(arguments);\n        args.unshift(this[attribute]);\n        return _[method].apply(_, args);\n      };\n    }\n  };\n  var addUnderscoreMethods = function(Class, methods, attribute) {\n    _.each(methods, function(length, method) {\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\n    });\n  };\n\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n  var cb = function(iteratee, instance) {\n    if (_.isFunction(iteratee)) return iteratee;\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\n    return iteratee;\n  };\n  var modelMatcher = function(attrs) {\n    var matcher = _.matches(attrs);\n    return function(model) {\n      return matcher(model.attributes);\n    };\n  };\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // a custom event channel. You may bind a callback to an event with `on` or\n  // remove with `off`; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`).\n  var eventsApi = function(iteratee, events, name, callback, opts) {\n    var i = 0, names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n      for (names = _.keys(name); i < names.length ; i++) {\n        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space-separated event names by delegating them individually.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        events = iteratee(events, names[i], callback, opts);\n      }\n    } else {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n    }\n    return events;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function(name, callback, context) {\n    return internalOn(this, name, callback, context);\n  };\n\n  // Guard the `listening` argument from the public API.\n  var internalOn = function(obj, name, callback, context, listening) {\n    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {\n      context: context,\n      ctx: obj,\n      listening: listening\n    });\n\n    if (listening) {\n      var listeners = obj._listeners || (obj._listeners = {});\n      listeners[listening.id] = listening;\n    }\n\n    return obj;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n  Events.listenTo = function(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = listeningTo[id] = {obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0};\n    }\n\n    // Bind callbacks on obj, and keep track of them on listening.\n    internalOn(obj, name, callback, this, listening);\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({callback: callback, context: context, ctx: context || ctx, listening: listening});\n    }\n    return events;\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off = function(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n      context: context,\n      listeners: this._listeners\n    });\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening = function(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n    }\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function(events, name, callback, options) {\n    if (!events) return;\n\n    var i = 0, listening;\n    var context = options.context, listeners = options.listeners;\n\n    // Delete all events listeners and \"drop\" events.\n    if (!name && !callback && !context) {\n      var ids = _.keys(listeners);\n      for (; i < ids.length; i++) {\n        listening = listeners[ids[i]];\n        delete listeners[listening.id];\n        delete listening.listeningTo[listening.objId];\n      }\n      return;\n    }\n\n    var names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (\n          callback && callback !== handler.callback &&\n            callback !== handler.callback._callback ||\n              context && context !== handler.context\n        ) {\n          remaining.push(handler);\n        } else {\n          listening = handler.listening;\n          if (listening && --listening.count === 0) {\n            delete listeners[listening.id];\n            delete listening.listeningTo[listening.objId];\n          }\n        }\n      }\n\n      // Update tail event if the list has any events.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n    return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n  Events.once = function(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));\n    if (typeof name === 'string' && context == null) callback = void 0;\n    return this.on(events, callback, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce = function(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n  var onceMap = function(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function() {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger = function(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function(objEvents, name, callback, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    var defaults = _.result(this, 'defaults');\n    attrs = _.defaults(_.extend({}, defaults, attrs), defaults);\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      var unset      = options.unset;\n      var silent     = options.silent;\n      var changes    = [];\n      var changing   = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev    = this._previousAttributes;\n\n      // For each `set` attribute, update or delete the current value.\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Update the `id`.\n      if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n      }\n      return _.size(changed) ? changed : false;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true, parse: true}, options);\n      var wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else if (!this._validate(attrs, options)) {\n        return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.extend({}, options, {validate: true}));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model, mapped to the\n  // number of arguments they take.\n  var modelMethods = {keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n      omit: 0, chain: 1, isEmpty: 1};\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  addUnderscoreMethods(Model, modelMethods, 'attributes');\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Splices `insert` into `array` at index `at`.\n  var splice = function(array, insert, at) {\n    at = Math.min(Math.max(at, 0), array.length);\n    var tail = Array(array.length - at);\n    var length = insert.length;\n    var i;\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n  };\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model) { return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set. `models` may be Backbone\n    // Models or raw JavaScript objects to be converted to Models, or any\n    // combination of the two.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n      var removed = this._removeModels(models, options);\n      if (!options.silent && removed.length) {\n        options.changes = {added: [], merged: [], removed: removed};\n        this.trigger('update', this, options);\n      }\n      return singular ? removed[0] : removed;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      if (models == null) return;\n\n      options = _.extend({}, setOptions, options);\n      if (options.parse && !this._isModel(models)) {\n        models = this.parse(models, options) || [];\n      }\n\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at > this.length) at = this.length;\n      if (at < 0) at += this.length + 1;\n\n      var set = [];\n      var toAdd = [];\n      var toMerge = [];\n      var toRemove = [];\n      var modelMap = {};\n\n      var add = options.add;\n      var merge = options.merge;\n      var remove = options.remove;\n\n      var sort = false;\n      var sortable = this.comparator && at == null && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      var model, i;\n      for (i = 0; i < models.length; i++) {\n        model = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        var existing = this.get(model);\n        if (existing) {\n          if (merge && model !== existing) {\n            var attrs = this._isModel(model) ? model.attributes : model;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            toMerge.push(existing);\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n          }\n          if (!modelMap[existing.cid]) {\n            modelMap[existing.cid] = true;\n            set.push(existing);\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(model, options);\n          if (model) {\n            toAdd.push(model);\n            this._addReference(model, options);\n            modelMap[model.cid] = true;\n            set.push(model);\n          }\n        }\n      }\n\n      // Remove stale models.\n      if (remove) {\n        for (i = 0; i < this.length; i++) {\n          model = this.models[i];\n          if (!modelMap[model.cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      var orderChanged = false;\n      var replace = !sortable && add && remove;\n      if (set.length && replace) {\n        orderChanged = this.length !== set.length || _.some(this.models, function(m, index) {\n          return m !== set[index];\n        });\n        this.models.length = 0;\n        splice(this.models, set, 0);\n        this.length = this.models.length;\n      } else if (toAdd.length) {\n        if (sortable) sort = true;\n        splice(this.models, toAdd, at == null ? this.length : at);\n        this.length = this.models.length;\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\n      if (!options.silent) {\n        for (i = 0; i < toAdd.length; i++) {\n          if (at != null) options.index = at + i;\n          model = toAdd[i];\n          model.trigger('add', model, this, options);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length || toMerge.length) {\n          options.changes = {\n            added: toAdd,\n            removed: toRemove,\n            merged: toMerge\n          };\n          this.trigger('update', this, options);\n        }\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id, cid, model object with id or cid\n    // properties, or an attributes object that is transformed through modelId.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      return this._byId[obj] ||\n        this._byId[this.modelId(obj.attributes || obj)] ||\n        obj.cid && this._byId[obj.cid];\n    },\n\n    // Returns `true` if the model is in the collection.\n    has: function(obj) {\n      return this.get(obj) != null;\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      return this[first ? 'find' : 'filter'](attrs);\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      var comparator = this.comparator;\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      var length = comparator.length;\n      if (_.isFunction(comparator)) comparator = _.bind(comparator, this);\n\n      // Run sort based on type of `comparator`.\n      if (length === 1 || _.isString(comparator)) {\n        this.models = this.sortBy(comparator);\n      } else {\n        this.models.sort(comparator);\n      }\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return this.map(attr + '');\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(m, resp, callbackOpts) {\n        if (wait) collection.add(m, callbackOpts);\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function(attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set.\n    _removeModels: function(models, options) {\n      var removed = [];\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        // Remove references before triggering 'remove' event to prevent an\n        // infinite loop. #3693\n        delete this._byId[model.cid];\n        var id = this.modelId(model.attributes);\n        if (id != null) delete this._byId[id];\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n        this._removeReference(model, options);\n      }\n      return removed;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function(model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if (model) {\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\n        if (event === 'destroy') this.remove(model, options);\n        if (event === 'change') {\n          var prevId = this.modelId(model.previousAttributes());\n          var id = this.modelId(model.attributes);\n          if (prevId !== id) {\n            if (prevId != null) delete this._byId[prevId];\n            if (id != null) this._byId[id] = model;\n          }\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = {forEach: 3, each: 3, map: 3, collect: 3, reduce: 0,\n      foldl: 0, inject: 0, reduceRight: 0, foldr: 0, find: 3, detect: 3, filter: 3,\n      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\n      contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n      isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\n      sortBy: 3, indexBy: 3, findIndex: 3, findLastIndex: 3};\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  addUnderscoreMethods(Collection, collectionMethods, 'models');\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be set as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function(events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], _.bind(method, this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function(xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch': 'PATCH',\n    'delete': 'DELETE',\n    'read': 'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(optionalParam, '(?:$1)?')\n                   .replace(namedParam, function(match, optional) {\n                     return optional ? match : '([^/?]+)';\n                   })\n                   .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    this.checkUrl = _.bind(this.checkUrl, this);\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function() {\n      var path = this.decodeFragment(this.location.pathname);\n      var rootPath = path.slice(0, this.root.length - 1) + '/';\n      return rootPath === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function() {\n      var path = this.decodeFragment(\n        this.location.pathname + this.getSearch()\n      ).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.history && this.history.pushState);\n      this._usePushState    = this._wantsPushState && this._hasPushState;\n      this.fragment         = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var rootPath = this.root.slice(0, -1) || '/';\n          this.location.replace(rootPath + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {replace: true});\n        }\n\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function(eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function(eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.some(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var rootPath = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        rootPath = rootPath.slice(0, -1) || '/';\n      }\n      var url = rootPath + fragment;\n\n      // Strip the hash and decode for matching.\n      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\n          var iWindow = this.iframe.contentWindow;\n\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function and add the prototype properties.\n    child.prototype = _.create(parent.prototype, protoProps);\n    child.prototype.constructor = child;\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n});\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\r\n\tDOM_VK_RETURN: 13,\r\n\tDOM_VK_J: 74,\r\n    DOM_VK_K: 75,\r\n\tuse_io: true,\r\n\tmax_views: 4,\r\n\tmax_groups: 99\r\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * jQuery JavaScript Library v2.2.4\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-05-20T17:23Z\n */\n\n(function( global, factory ) {\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Support: Firefox 18+\n// Can't be in strict mode, several libs including ASP.NET trace\n// the stack via arguments.caller.callee and Firefox dies if\n// you try to trace through \"use strict\" call chains. (#13335)\n//\"use strict\";\nvar arr = [];\n\nvar document = window.document;\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar support = {};\n\n\n\nvar\n\tversion = \"2.2.4\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android<4.1\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n\t// Matches dashed string for camelizing\n\trmsPrefix = /^-ms-/,\n\trdashAlpha = /-([\\da-z])/gi,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn letter.toUpperCase();\n\t};\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// Start with an empty selector\n\tselector: \"\",\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\t\treturn num != null ?\n\n\t\t\t// Return just the one element from the set\n\t\t\t( num < 0 ? this[ num + this.length ] : this[ num ] ) :\n\n\t\t\t// Return all the elements in a clean array\n\t\t\tslice.call( this );\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\t\tret.context = this.context;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = jQuery.isArray( copy ) ) ) ) {\n\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && jQuery.isArray( src ) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type( obj ) === \"function\";\n\t},\n\n\tisArray: Array.isArray,\n\n\tisWindow: function( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t},\n\n\tisNumeric: function( obj ) {\n\n\t\t// parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t// adding 1 corrects loss of precision from parseFloat (#15100)\n\t\tvar realStringObj = obj && obj.toString();\n\t\treturn !jQuery.isArray( obj ) && ( realStringObj - parseFloat( realStringObj ) + 1 ) >= 0;\n\t},\n\n\tisPlainObject: function( obj ) {\n\t\tvar key;\n\n\t\t// Not plain objects:\n\t\t// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n\t\t// - DOM nodes\n\t\t// - window\n\t\tif ( jQuery.type( obj ) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Not own constructor property must be Object\n\t\tif ( obj.constructor &&\n\t\t\t\t!hasOwn.call( obj, \"constructor\" ) &&\n\t\t\t\t!hasOwn.call( obj.constructor.prototype || {}, \"isPrototypeOf\" ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Own properties are enumerated firstly, so to speed up,\n\t\t// if last one is own, then all properties are own\n\t\tfor ( key in obj ) {}\n\n\t\treturn key === undefined || hasOwn.call( obj, key );\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\ttype: function( obj ) {\n\t\tif ( obj == null ) {\n\t\t\treturn obj + \"\";\n\t\t}\n\n\t\t// Support: Android<4.0, iOS<6 (functionish RegExp)\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\t\ttypeof obj;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tvar script,\n\t\t\tindirect = eval;\n\n\t\tcode = jQuery.trim( code );\n\n\t\tif ( code ) {\n\n\t\t\t// If the code includes a valid, prologue position\n\t\t\t// strict mode pragma, execute code by injecting a\n\t\t\t// script tag into the document.\n\t\t\tif ( code.indexOf( \"use strict\" ) === 1 ) {\n\t\t\t\tscript = document.createElement( \"script\" );\n\t\t\t\tscript.text = code;\n\t\t\t\tdocument.head.appendChild( script ).parentNode.removeChild( script );\n\t\t\t} else {\n\n\t\t\t\t// Otherwise, avoid the DOM node creation, insertion\n\t\t\t\t// and removal by using an indirect global eval\n\n\t\t\t\tindirect( code );\n\t\t\t}\n\t\t}\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Support: IE9-11+\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\tnodeName: function( elem, name ) {\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android<4.1\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tvar tmp, args, proxy;\n\n\t\tif ( typeof context === \"string\" ) {\n\t\t\ttmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\targs = slice.call( arguments, 2 );\n\t\tproxy = function() {\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\tnow: Date.now,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\n// JSHint would error on this code due to the Symbol not being defined in ES5.\n// Defining this global in .jshintrc would create a danger of using the global\n// unguarded in another place, it seems safer to just disable JSHint for these\n// three lines.\n/* jshint ignore: start */\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n/* jshint ignore: end */\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: iOS 8.2 (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = jQuery.type( obj );\n\n\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.2.1\n * http://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2015-10-17\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// General-purpose constants\n\tMAX_NEGATIVE = 1 << 31,\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// http://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\trescape = /'|\\\\/g,\n\n\t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t};\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, nidselect, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( (m = match[1]) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\n\t\t\t\tif ( nodeType !== 1 ) {\n\t\t\t\t\tnewContext = context;\n\t\t\t\t\tnewSelector = selector;\n\n\t\t\t\t// qSA looks outside Element context, which is not what we want\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\n\t\t\t\t// Support: IE <=8\n\t\t\t\t// Exclude object elements\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\n\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\tnid = nid.replace( rescape, \"\\\\$&\" );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\tnidselect = ridentifier.test( nid ) ? \"#\" + nid : \"[id='\" + nid + \"']\";\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[i] = nidselect + \" \" + toSelector( groups[i] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\t\t\t\t}\n\n\t\t\t\tif ( newSelector ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created div and expects a boolean result\n */\nfunction assert( fn ) {\n\tvar div = document.createElement(\"div\");\n\n\ttry {\n\t\treturn !!fn( div );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( div.parentNode ) {\n\t\t\tdiv.parentNode.removeChild( div );\n\t\t}\n\t\t// release memory in IE\n\t\tdiv = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\t( ~b.sourceIndex || MAX_NEGATIVE ) -\n\t\t\t( ~a.sourceIndex || MAX_NEGATIVE );\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, parent,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9-11, Edge\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\tif ( (parent = document.defaultView) && parent.top !== parent ) {\n\t\t// Support: IE 11\n\t\tif ( parent.addEventListener ) {\n\t\t\tparent.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( parent.attachEvent ) {\n\t\t\tparent.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( div ) {\n\t\tdiv.className = \"i\";\n\t\treturn !div.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( div ) {\n\t\tdiv.appendChild( document.createComment(\"\") );\n\t\treturn !div.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( div ) {\n\t\tdocElem.appendChild( div ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t});\n\n\t// ID find and filter\n\tif ( support.getById ) {\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar m = context.getElementById( id );\n\t\t\t\treturn m ? [ m ] : [];\n\t\t\t}\n\t\t};\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t} else {\n\t\t// Support: IE6/7\n\t\t// getElementById is not reliable as a find shortcut\n\t\tdelete Expr.find[\"ID\"];\n\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See http://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( div ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// http://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( div ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( div.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !div.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !div.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibing-combinator selector` fails\n\t\t\tif ( !div.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( div ) {\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tdiv.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( div.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":enabled\").length ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tdiv.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( div ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( div, \"div\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( div, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === document ? -1 :\n\t\t\t\tb === document ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!compilerCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": function( elem ) {\n\t\t\treturn elem.disabled === false;\n\t\t},\n\n\t\t\"disabled\": function( elem ) {\n\t\t\treturn elem.disabled === true;\n\t\t},\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tcheckNonElements = base && dir === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\n\t\t\t\t\t\tif ( (oldCache = uniqueCache[ dir ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ dir ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tsupport.getById && context.nodeType === 9 && documentIsHTML &&\n\t\t\t\tExpr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( div1 ) {\n\t// Should return 1, but returns 4 (following)\n\treturn div1.compareDocumentPosition( document.createElement(\"div\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( div ) {\n\tdiv.innerHTML = \"<a href='#'></a>\";\n\treturn div.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( div ) {\n\tdiv.innerHTML = \"<input/>\";\n\tdiv.firstChild.setAttribute( \"value\", \"\" );\n\treturn div.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( div ) {\n\treturn div.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\nvar rsingleTag = ( /^<([\\w-]+)\\s*\\/?>(?:<\\/\\1>|)$/ );\n\n\n\nvar risSimple = /^.[^:#\\[\\.,]*$/;\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( jQuery.isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\t/* jshint -W018 */\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\n\t}\n\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\n\t}\n\n\tif ( typeof qualifier === \"string\" ) {\n\t\tif ( risSimple.test( qualifier ) ) {\n\t\t\treturn jQuery.filter( qualifier, elements, not );\n\t\t}\n\n\t\tqualifier = jQuery.filter( qualifier, elements );\n\t}\n\n\treturn jQuery.grep( elements, function( elem ) {\n\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t} );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\treturn elems.length === 1 && elem.nodeType === 1 ?\n\t\tjQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\n\t\tjQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\t\treturn elem.nodeType === 1;\n\t\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i,\n\t\t\tlen = this.length,\n\t\t\tret = [],\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\n\t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\n\t\tret.selector = this.selector ? this.selector + \" \" + selector : selector;\n\t\treturn ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\t// Support: Blackberry 4.6\n\t\t\t\t\t// gEBID returns nodes no longer in the document (#6963)\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.context = document;\n\t\t\t\t\tthis.selector = selector;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis.context = this[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\tif ( selector.selector !== undefined ) {\n\t\t\tthis.selector = selector.selector;\n\t\t\tthis.context = selector.context;\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\tpos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?\n\t\t\t\tjQuery( selectors, context || this.context ) :\n\t\t\t\t0;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t// Always skip document fragments\n\t\t\t\tif ( cur.nodeType < 11 && ( pos ?\n\t\t\t\t\tpos.index( cur ) > -1 :\n\n\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnotwhite = ( /\\S+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( jQuery.isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && jQuery.type( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, listener list, final state\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ), \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ), \"rejected\" ],\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ) ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\n\n\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis === promise ? newDefer.promise() : this,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Keep pipe for back-compat\n\t\tpromise.pipe = promise.then;\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 3 ];\n\n\t\t\t// promise[ done | fail | progress ] = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add( function() {\n\n\t\t\t\t\t// state = [ resolved | rejected ]\n\t\t\t\t\tstate = stateString;\n\n\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\n\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\n\t\t\t}\n\n\t\t\t// deferred[ resolve | reject | notify ]\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? promise : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( subordinate /* , ..., subordinateN */ ) {\n\t\tvar i = 0,\n\t\t\tresolveValues = slice.call( arguments ),\n\t\t\tlength = resolveValues.length,\n\n\t\t\t// the count of uncompleted subordinates\n\t\t\tremaining = length !== 1 ||\n\t\t\t\t( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\n\n\t\t\t// the master Deferred.\n\t\t\t// If resolveValues consist of only a single Deferred, just use that.\n\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n\n\t\t\t// Update function for both resolve and progress values\n\t\t\tupdateFunc = function( i, contexts, values ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tcontexts[ i ] = this;\n\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( values === progressValues ) {\n\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\n\t\t\t\t\t} else if ( !( --remaining ) ) {\n\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tprogressValues, progressContexts, resolveContexts;\n\n\t\t// Add listeners to Deferred subordinates; treat others as resolved\n\t\tif ( length > 1 ) {\n\t\t\tprogressValues = new Array( length );\n\t\t\tprogressContexts = new Array( length );\n\t\t\tresolveContexts = new Array( length );\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\n\t\t\t\t\tresolveValues[ i ].promise()\n\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) )\n\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\n\t\t\t\t\t\t.fail( deferred.reject );\n\t\t\t\t} else {\n\t\t\t\t\t--remaining;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If we're not waiting on anything, resolve the master\n\t\tif ( !remaining ) {\n\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\n\t\t}\n\n\t\treturn deferred.promise();\n\t}\n} );\n\n\n// The deferred used on DOM ready\nvar readyList;\n\njQuery.fn.ready = function( fn ) {\n\n\t// Add the callback\n\tjQuery.ready.promise().done( fn );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\n\t\t// Trigger any bound ready events\n\t\tif ( jQuery.fn.triggerHandler ) {\n\t\t\tjQuery( document ).triggerHandler( \"ready\" );\n\t\t\tjQuery( document ).off( \"ready\" );\n\t\t}\n\t}\n} );\n\n/**\n * The ready event handler and self cleanup method\n */\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\njQuery.ready.promise = function( obj ) {\n\tif ( !readyList ) {\n\n\t\treadyList = jQuery.Deferred();\n\n\t\t// Catch cases where $(document).ready() is called\n\t\t// after the browser event has already occurred.\n\t\t// Support: IE9-10 only\n\t\t// Older IE sometimes signals \"interactive\" too soon\n\t\tif ( document.readyState === \"complete\" ||\n\t\t\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\twindow.setTimeout( jQuery.ready );\n\n\t\t} else {\n\n\t\t\t// Use the handy event callback\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.addEventListener( \"load\", completed );\n\t\t}\n\t}\n\treturn readyList.promise( obj );\n};\n\n// Kick off the DOM ready check even if the user does not\njQuery.ready.promise();\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( jQuery.type( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn chainable ?\n\t\telems :\n\n\t\t// Gets\n\t\tbulk ?\n\t\t\tfn.call( elems ) :\n\t\t\tlen ? fn( elems[ 0 ], key ) : emptyGet;\n};\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\t/* jshint -W018 */\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tregister: function( owner, initial ) {\n\t\tvar value = initial || {};\n\n\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t// use plain assignment\n\t\tif ( owner.nodeType ) {\n\t\t\towner[ this.expando ] = value;\n\n\t\t// Otherwise secure it in a non-enumerable, non-writable property\n\t\t// configurability must be true to allow the property to be\n\t\t// deleted with the delete operator\n\t\t} else {\n\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\tvalue: value,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: true\n\t\t\t} );\n\t\t}\n\t\treturn owner[ this.expando ];\n\t},\n\tcache: function( owner ) {\n\n\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t// but we should not, see #8335.\n\t\t// Always return an empty object.\n\t\tif ( !acceptData( owner ) ) {\n\t\t\treturn {};\n\t\t}\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ data ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ prop ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\t\t\towner[ this.expando ] && owner[ this.expando ][ key ];\n\t},\n\taccess: function( owner, key, value ) {\n\t\tvar stored;\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\tstored = this.get( owner, key );\n\n\t\t\treturn stored !== undefined ?\n\t\t\t\tstored : this.get( owner, jQuery.camelCase( key ) );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i, name, camel,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key === undefined ) {\n\t\t\tthis.register( owner );\n\n\t\t} else {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( jQuery.isArray( key ) ) {\n\n\t\t\t\t// If \"name\" is an array of keys...\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\n\t\t\t\t// keys will be converted to camelCase.\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\n\t\t\t\t// both plain key and camelCase key. #12786\n\t\t\t\t// This will only penalize the array argument path.\n\t\t\t\tname = key.concat( key.map( jQuery.camelCase ) );\n\t\t\t} else {\n\t\t\t\tcamel = jQuery.camelCase( key );\n\n\t\t\t\t// Try the string as a key before any manipulation\n\t\t\t\tif ( key in cache ) {\n\t\t\t\t\tname = [ key, camel ];\n\t\t\t\t} else {\n\n\t\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\t\tname = camel;\n\t\t\t\t\tname = name in cache ?\n\t\t\t\t\t\t[ name ] : ( name.match( rnotwhite ) || [] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = name.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ name[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <= 35-45+\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://code.google.com/p/chromium/issues/detail?id=378607\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = data === \"true\" ? true :\n\t\t\t\t\tdata === \"false\" ? false :\n\t\t\t\t\tdata === \"null\" ? null :\n\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\n\t\t\t\t\t+data + \"\" === data ? +data :\n\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\n\t\t\t\t\tdata;\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE11+\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data, camelKey;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key as-is\n\t\t\t\tdata = dataUser.get( elem, key ) ||\n\n\t\t\t\t\t// Try to find dashed key if it exists (gh-2779)\n\t\t\t\t\t// This is for 2.2.x only\n\t\t\t\t\tdataUser.get( elem, key.replace( rmultiDash, \"-$&\" ).toLowerCase() );\n\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\tcamelKey = jQuery.camelCase( key );\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key camelized\n\t\t\t\tdata = dataUser.get( elem, camelKey );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, camelKey, undefined );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tcamelKey = jQuery.camelCase( key );\n\t\t\tthis.each( function() {\n\n\t\t\t\t// First, attempt to store a copy or reference of any\n\t\t\t\t// data that might've been store with a camelCased key.\n\t\t\t\tvar data = dataUser.get( this, camelKey );\n\n\t\t\t\t// For HTML5 data-* attribute interop, we have to\n\t\t\t\t// store property names with dashes in a camelCase form.\n\t\t\t\t// This might not apply to all properties...*\n\t\t\t\tdataUser.set( this, camelKey, value );\n\n\t\t\t\t// *... In the case of properties that might _actually_\n\t\t\t\t// have dashes, we need to also store a copy of that\n\t\t\t\t// unchanged property.\n\t\t\t\tif ( key.indexOf( \"-\" ) > -1 && data !== undefined ) {\n\t\t\t\t\tdataUser.set( this, key, value );\n\t\t\t\t}\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHidden = function( elem, el ) {\n\n\t\t// isHidden might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\t\treturn jQuery.css( elem, \"display\" ) === \"none\" ||\n\t\t\t!jQuery.contains( elem.ownerDocument, elem );\n\t};\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted,\n\t\tscale = 1,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() { return tween.cur(); } :\n\t\t\tfunction() { return jQuery.css( elem, prop, \"\" ); },\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\tdo {\n\n\t\t\t// If previous iteration zeroed out, double until we get *something*.\n\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\n\t\t\tscale = scale || \".5\";\n\n\t\t\t// Adjust and apply\n\t\t\tinitialInUnit = initialInUnit / scale;\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Update scale, tolerating zero or NaN from tween.cur()\n\t\t// Break the loop if scale is unchanged or perfect, or if we've just had enough.\n\t\t} while (\n\t\t\tscale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations\n\t\t);\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([\\w:-]+)/ );\n\nvar rscriptType = ( /^$|\\/(?:java|ecma)script/i );\n\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// Support: IE9\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\n// Support: IE9\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE9-11+\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret = typeof context.getElementsByTagName !== \"undefined\" ?\n\t\t\tcontext.getElementsByTagName( tag || \"*\" ) :\n\t\t\ttypeof context.querySelectorAll !== \"undefined\" ?\n\t\t\t\tcontext.querySelectorAll( tag || \"*\" ) :\n\t\t\t[];\n\n\treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\n\t\tjQuery.merge( [ context ], ret ) :\n\t\tret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, contains, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( contains ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0-4.3, Safari<=5.1\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Safari<=5.1, Android<4.2\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE<=11+\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n} )();\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE9\n// See #13393 for more info\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( event ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tevent = jQuery.event.fix( event );\n\n\t\tvar i, j, ret, matched, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\targs = slice.call( arguments ),\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, matches, sel, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Support (at least): Chrome, IE9\n\t\t// Find delegate handlers\n\t\t// Black-hole SVG <use> instance trees (#13180)\n\t\t//\n\t\t// Support: Firefox<=42+\n\t\t// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)\n\t\tif ( delegateCount && cur.nodeType &&\n\t\t\t( event.type !== \"click\" || isNaN( event.button ) || event.button < 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && ( cur.disabled !== true || event.type !== \"click\" ) ) {\n\t\t\t\t\tmatches = [];\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matches[ sel ] ) {\n\t\t\t\t\t\t\tmatches.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matches.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matches } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: this, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\t// Includes some event props shared by KeyEvent and MouseEvent\n\tprops: ( \"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase \" +\n\t\t\"metaKey relatedTarget shiftKey target timeStamp view which\" ).split( \" \" ),\n\n\tfixHooks: {},\n\n\tkeyHooks: {\n\t\tprops: \"char charCode key keyCode\".split( \" \" ),\n\t\tfilter: function( event, original ) {\n\n\t\t\t// Add which for key events\n\t\t\tif ( event.which == null ) {\n\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tmouseHooks: {\n\t\tprops: ( \"button buttons clientX clientY offsetX offsetY pageX pageY \" +\n\t\t\t\"screenX screenY toElement\" ).split( \" \" ),\n\t\tfilter: function( event, original ) {\n\t\t\tvar eventDoc, doc, body,\n\t\t\t\tbutton = original.button;\n\n\t\t\t// Calculate pageX/Y if missing and clientX/Y available\n\t\t\tif ( event.pageX == null && original.clientX != null ) {\n\t\t\t\teventDoc = event.target.ownerDocument || document;\n\t\t\t\tdoc = eventDoc.documentElement;\n\t\t\t\tbody = eventDoc.body;\n\n\t\t\t\tevent.pageX = original.clientX +\n\t\t\t\t\t( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) -\n\t\t\t\t\t( doc && doc.clientLeft || body && body.clientLeft || 0 );\n\t\t\t\tevent.pageY = original.clientY +\n\t\t\t\t\t( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) -\n\t\t\t\t\t( doc && doc.clientTop  || body && body.clientTop  || 0 );\n\t\t\t}\n\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\t\t// Note: button is not normalized, so don't use it\n\t\t\tif ( !event.which && button !== undefined ) {\n\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tfix: function( event ) {\n\t\tif ( event[ jQuery.expando ] ) {\n\t\t\treturn event;\n\t\t}\n\n\t\t// Create a writable copy of the event object and normalize some properties\n\t\tvar i, prop, copy,\n\t\t\ttype = event.type,\n\t\t\toriginalEvent = event,\n\t\t\tfixHook = this.fixHooks[ type ];\n\n\t\tif ( !fixHook ) {\n\t\t\tthis.fixHooks[ type ] = fixHook =\n\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\n\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\n\t\t\t\t{};\n\t\t}\n\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\n\n\t\tevent = new jQuery.Event( originalEvent );\n\n\t\ti = copy.length;\n\t\twhile ( i-- ) {\n\t\t\tprop = copy[ i ];\n\t\t\tevent[ prop ] = originalEvent[ prop ];\n\t\t}\n\n\t\t// Support: Cordova 2.5 (WebKit) (#13255)\n\t\t// All events should have a target; Cordova deviceready doesn't\n\t\tif ( !event.target ) {\n\t\t\tevent.target = document;\n\t\t}\n\n\t\t// Support: Safari 6.0+, Chrome<28\n\t\t// Target should not be a text node (#504, #13143)\n\t\tif ( event.target.nodeType === 3 ) {\n\t\t\tevent.target = event.target.parentNode;\n\t\t}\n\n\t\treturn fixHook.filter ? fixHook.filter( event, originalEvent ) : event;\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android<4.0\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://code.google.com/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:-]+)[^>]*)\\/>/gi,\n\n\t// Support: IE 10-11, Edge 10240+\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptTypeMasked = /^true\\/(.*)/,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Manipulating tables requires a tbody\nfunction manipulationTarget( elem, content ) {\n\treturn jQuery.nodeName( elem, \"table\" ) &&\n\t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ?\n\n\t\telem.getElementsByTagName( \"tbody\" )[ 0 ] ||\n\t\t\telem.appendChild( elem.ownerDocument.createElement( \"tbody\" ) ) :\n\t\telem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tvar match = rscriptTypeMasked.exec( elem.type );\n\n\tif ( match ) {\n\t\telem.type = match[ 1 ];\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.access( src );\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = concat.apply( [], args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tisFunction = jQuery.isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( isFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( isFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tjQuery.globalEval( node.textContent.replace( rcleanScript, \"\" ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <= 35-45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <= 35-45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\n\t// Keep domManip exposed until 3.0 (gh-2225)\n\tdomManip: domManip,\n\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: QtWebKit\n\t\t\t// .get() because push.apply(_, arraylike) throws\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\n\n\nvar iframe,\n\telemdisplay = {\n\n\t\t// Support: Firefox\n\t\t// We have to pre-define these values for FF (#10227)\n\t\tHTML: \"block\",\n\t\tBODY: \"block\"\n\t};\n\n/**\n * Retrieve the actual display of a element\n * @param {String} name nodeName of the element\n * @param {Object} doc Document object\n */\n\n// Called only from within defaultDisplay\nfunction actualDisplay( name, doc ) {\n\tvar elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\n\n\t\tdisplay = jQuery.css( elem[ 0 ], \"display\" );\n\n\t// We don't have any data stored on the element,\n\t// so use \"detach\" method as fast way to get rid of the element\n\telem.detach();\n\n\treturn display;\n}\n\n/**\n * Try to determine the default display value of an element\n * @param {String} nodeName\n */\nfunction defaultDisplay( nodeName ) {\n\tvar doc = document,\n\t\tdisplay = elemdisplay[ nodeName ];\n\n\tif ( !display ) {\n\t\tdisplay = actualDisplay( nodeName, doc );\n\n\t\t// If the simple way fails, read from inside an iframe\n\t\tif ( display === \"none\" || !display ) {\n\n\t\t\t// Use the already-created iframe if possible\n\t\t\tiframe = ( iframe || jQuery( \"<iframe frameborder='0' width='0' height='0'/>\" ) )\n\t\t\t\t.appendTo( doc.documentElement );\n\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n\t\t\tdoc = iframe[ 0 ].contentDocument;\n\n\t\t\t// Support: IE\n\t\t\tdoc.write();\n\t\t\tdoc.close();\n\n\t\t\tdisplay = actualDisplay( nodeName, doc );\n\t\t\tiframe.detach();\n\t\t}\n\n\t\t// Store the correct default display\n\t\telemdisplay[ nodeName ] = display;\n\t}\n\n\treturn display;\n}\nvar rmargin = ( /^margin/ );\n\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE<=11+, Firefox<=30+ (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar documentElement = document.documentElement;\n\n\n\n( function() {\n\tvar pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE9-11+\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tcontainer.style.cssText = \"border:0;width:8px;height:0;top:0;left:-9999px;\" +\n\t\t\"padding:0;margin-top:1px;position:absolute\";\n\tcontainer.appendChild( div );\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\t\tdiv.style.cssText =\n\n\t\t\t// Support: Firefox<29, Android 2.3\n\t\t\t// Vendor-prefix box-sizing\n\t\t\t\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;\" +\n\t\t\t\"position:relative;display:block;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"top:1%;width:50%\";\n\t\tdiv.innerHTML = \"\";\n\t\tdocumentElement.appendChild( container );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\t\treliableMarginLeftVal = divStyle.marginLeft === \"2px\";\n\t\tboxSizingReliableVal = divStyle.width === \"4px\";\n\n\t\t// Support: Android 4.0 - 4.3 only\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.marginRight = \"50%\";\n\t\tpixelMarginRightVal = divStyle.marginRight === \"4px\";\n\n\t\tdocumentElement.removeChild( container );\n\t}\n\n\tjQuery.extend( support, {\n\t\tpixelPosition: function() {\n\n\t\t\t// This test is executed only once but we still do memoizing\n\t\t\t// since we can use the boxSizingReliable pre-computing.\n\t\t\t// No need to check if the test was already performed, though.\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\tboxSizingReliable: function() {\n\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelMarginRight: function() {\n\n\t\t\t// Support: Android 4.0-4.3\n\t\t\t// We're checking for boxSizingReliableVal here instead of pixelMarginRightVal\n\t\t\t// since that compresses better and they're computed together anyway.\n\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn pixelMarginRightVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\n\t\t\t// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37\n\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\treliableMarginRight: function() {\n\n\t\t\t// Support: Android 2.3\n\t\t\t// Check if div with explicit width and no margin-right incorrectly\n\t\t\t// gets computed margin-right based on width of container. (#3333)\n\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\t// This support function is only executed once so no memoizing is needed.\n\t\t\tvar ret,\n\t\t\t\tmarginDiv = div.appendChild( document.createElement( \"div\" ) );\n\n\t\t\t// Reset CSS: box-sizing; display; margin; border; padding\n\t\t\tmarginDiv.style.cssText = div.style.cssText =\n\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Vendor-prefix box-sizing\n\t\t\t\t\"-webkit-box-sizing:content-box;box-sizing:content-box;\" +\n\t\t\t\t\"display:block;margin:0;border:0;padding:0\";\n\t\t\tmarginDiv.style.marginRight = marginDiv.style.width = \"0\";\n\t\t\tdiv.style.width = \"1px\";\n\t\t\tdocumentElement.appendChild( container );\n\n\t\t\tret = !parseFloat( window.getComputedStyle( marginDiv ).marginRight );\n\n\t\t\tdocumentElement.removeChild( container );\n\t\t\tdiv.removeChild( marginDiv );\n\n\t\t\treturn ret;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\tret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;\n\n\t// Support: Opera 12.1x only\n\t// Fall back to style even without computed\n\t// computed is undefined for elems on document fragments\n\tif ( ( ret === \"\" || ret === undefined ) && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\tret = jQuery.style( elem, name );\n\t}\n\n\t// Support: IE9\n\t// getPropertyValue is only needed for .css('filter') (#12537)\n\tif ( computed ) {\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// http://dev.w3.org/csswg/cssom/#resolved-values\n\t\tif ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE9-11+\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style;\n\n// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( name ) {\n\n\t// Shortcut for names that are not vendor prefixed\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\tvar i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\n\n\t\t// If we already have the right measurement, avoid augmentation\n\t\t4 :\n\n\t\t// Otherwise initialize for horizontal or vertical properties\n\t\tname === \"width\" ? 1 : 0,\n\n\t\tval = 0;\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin, so add it if we want it\n\t\tif ( extra === \"margin\" ) {\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\tif ( isBorderBox ) {\n\n\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\tif ( extra === \"content\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// At this point, extra isn't border nor margin, so remove border\n\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t} else {\n\n\t\t\t// At this point, extra isn't content, so add padding\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// At this point, extra isn't content nor padding, so add border\n\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n\n\t// Start with offset property, which is equivalent to the border-box value\n\tvar valueIsBorderBox = true,\n\t\tval = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n\t\tstyles = getStyles( elem ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t// Some non-html elements return undefined for offsetWidth, so check for null/undefined\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\tif ( val <= 0 || val == null ) {\n\n\t\t// Fall back to computed then uncomputed css if necessary\n\t\tval = curCSS( elem, name, styles );\n\t\tif ( val < 0 || val == null ) {\n\t\t\tval = elem.style[ name ];\n\t\t}\n\n\t\t// Computed unit is not pixels. Stop here and return.\n\t\tif ( rnumnonpx.test( val ) ) {\n\t\t\treturn val;\n\t\t}\n\n\t\t// Check for style in case a browser which returns unreliable values\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\tvalueIsBorderBox = isBorderBox &&\n\t\t\t( support.boxSizingReliable() || val === elem.style[ name ] );\n\n\t\t// Normalize \"\", auto, and prepare for extra\n\t\tval = parseFloat( val ) || 0;\n\t}\n\n\t// Use the active box-sizing model to add/subtract irrelevant styles\n\treturn ( val +\n\t\taugmentWidthOrHeight(\n\t\t\telem,\n\t\t\tname,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles\n\t\t)\n\t) + \"px\";\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem, hidden,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalues[ index ] = dataPriv.get( elem, \"olddisplay\" );\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Reset the inline display of this element to learn if it is\n\t\t\t// being hidden by cascaded rules or not\n\t\t\tif ( !values[ index ] && display === \"none\" ) {\n\t\t\t\telem.style.display = \"\";\n\t\t\t}\n\n\t\t\t// Set elements which have been overridden with display: none\n\t\t\t// in a stylesheet to whatever the default browser style is\n\t\t\t// for such an element\n\t\t\tif ( elem.style.display === \"\" && isHidden( elem ) ) {\n\t\t\t\tvalues[ index ] = dataPriv.access(\n\t\t\t\t\telem,\n\t\t\t\t\t\"olddisplay\",\n\t\t\t\t\tdefaultDisplay( elem.nodeName )\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\thidden = isHidden( elem );\n\n\t\t\tif ( display !== \"none\" || !hidden ) {\n\t\t\t\tdataPriv.set(\n\t\t\t\t\telem,\n\t\t\t\t\t\"olddisplay\",\n\t\t\t\t\thidden ? display : jQuery.css( elem, \"display\" )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of most of the elements in a second loop\n\t// to avoid the constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\n\t\t\telem.style.display = show ? values[ index ] || \"\" : \"none\";\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {\n\t\t\"float\": \"cssFloat\"\n\t},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = jQuery.camelCase( name ),\n\t\t\tstyle = elem.style;\n\n\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\tif ( type === \"number\" ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tstyle[ name ] = value;\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = jQuery.camelCase( name );\n\n\t\t// Make sure that we're working with the right name\n\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( i, name ) {\n\tjQuery.cssHooks[ name ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\t\t\t\t\telem.offsetWidth === 0 ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = extra && getStyles( elem ),\n\t\t\t\tsubtract = extra && augmentWidthOrHeight(\n\t\t\t\t\telem,\n\t\t\t\t\tname,\n\t\t\t\t\textra,\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\tstyles\n\t\t\t\t);\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ name ] = value;\n\t\t\t\tvalue = jQuery.css( elem, name );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// Support: Android 2.3\njQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn swap( elem, { \"display\": \"inline-block\" },\n\t\t\t\tcurCSS, [ elem, \"marginRight\" ] );\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( !rmargin.test( prefix ) ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( jQuery.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t},\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHidden( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 &&\n\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE9\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back Compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, timerId,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = jQuery.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4 ; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\t/* jshint validthis: true */\n\tvar prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHidden( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Handle queue: false promises\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Height/width overflow pass\n\tif ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\n\n\t\t// Make sure that nothing sneaks out\n\t\t// Record all 3 overflow attributes because IE9-10 do not\n\t\t// change the overflow attribute when overflowX and\n\t\t// overflowY are set to the same value\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Set display property to inline-block for height/width\n\t\t// animations on inline elements that are having width/height animated\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\n\t\t// Test default display if display is currently \"none\"\n\t\tcheckDisplay = display === \"none\" ?\n\t\t\tdataPriv.get( elem, \"olddisplay\" ) || defaultDisplay( elem.nodeName ) : display;\n\n\t\tif ( checkDisplay === \"inline\" && jQuery.css( elem, \"float\" ) === \"none\" ) {\n\t\t\tstyle.display = \"inline-block\";\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// show/hide pass\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.exec( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// If there is dataShow left over from a stopped hide or show\n\t\t\t\t// and we are going to proceed with show, we should pretend to be hidden\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\n\t\t// Any non-fx value stops us from restoring the original display value\n\t\t} else {\n\t\t\tdisplay = undefined;\n\t\t}\n\t}\n\n\tif ( !jQuery.isEmptyObject( orig ) ) {\n\t\tif ( dataShow ) {\n\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\thidden = dataShow.hidden;\n\t\t\t}\n\t\t} else {\n\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", {} );\n\t\t}\n\n\t\t// Store state if its toggle - enables .stop().toggle() to \"reverse\"\n\t\tif ( toggle ) {\n\t\t\tdataShow.hidden = !hidden;\n\t\t}\n\t\tif ( hidden ) {\n\t\t\tjQuery( elem ).show();\n\t\t} else {\n\t\t\tanim.done( function() {\n\t\t\t\tjQuery( elem ).hide();\n\t\t\t} );\n\t\t}\n\t\tanim.done( function() {\n\t\t\tvar prop;\n\n\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\tfor ( prop in orig ) {\n\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t}\n\t\t} );\n\t\tfor ( prop in orig ) {\n\t\t\ttween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\n\t\t\tif ( !( prop in dataShow ) ) {\n\t\t\t\tdataShow[ prop ] = tween.start;\n\t\t\t\tif ( hidden ) {\n\t\t\t\t\ttween.end = tween.start;\n\t\t\t\t\ttween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t// If this is a noop like .hide().hide(), restore an overwritten display value\n\t} else if ( ( display === \"none\" ? defaultDisplay( elem.nodeName ) : display ) === \"inline\" ) {\n\t\tstyle.display = display;\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = jQuery.camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( jQuery.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t} else {\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length ; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( jQuery.isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tjQuery.proxy( result.stop, result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\t// attach callbacks from options\n\treturn animation.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnotwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length ; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tjQuery.isFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t};\n\n\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ?\n\t\topt.duration : opt.duration in jQuery.fx.speeds ?\n\t\t\tjQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = jQuery.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Checks the timer has not already been removed\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tif ( timer() ) {\n\t\tjQuery.fx.start();\n\t} else {\n\t\tjQuery.timers.pop();\n\t}\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( !timerId ) {\n\t\ttimerId = window.setInterval( jQuery.fx.tick, jQuery.fx.interval );\n\t}\n};\n\njQuery.fx.stop = function() {\n\twindow.clearInterval( timerId );\n\n\ttimerId = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: iOS<=5.1, Android<=4.2+\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE<=11+\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: Android<=2.3\n\t// Options inside disabled selects are incorrectly marked as disabled\n\tselect.disabled = true;\n\tsupport.optDisabled = !opt.disabled;\n\n\t// Support: IE<=11+\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// All attributes are lowercase\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\tname = name.toLowerCase();\n\t\t\thooks = jQuery.attrHooks[ name ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tjQuery.nodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name, propName,\n\t\t\ti = 0,\n\t\t\tattrNames = value && value.match( rnotwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\tpropName = jQuery.propFix[ name ] || name;\n\n\t\t\t\t// Boolean attributes get special treatment (#10870)\n\t\t\t\tif ( jQuery.expr.match.bool.test( name ) ) {\n\n\t\t\t\t\t// Set corresponding property to false\n\t\t\t\t\telem[ propName ] = false;\n\t\t\t\t}\n\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle;\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ name ];\n\t\t\tattrHandle[ name ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tname.toLowerCase() :\n\t\t\t\tnull;\n\t\t\tattrHandle[ name ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\treturn tabindex ?\n\t\t\t\t\tparseInt( tabindex, 10 ) :\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\t\trclickable.test( elem.nodeName ) && elem.href ?\n\t\t\t\t\t\t\t0 :\n\t\t\t\t\t\t\t-1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\nvar rclass = /[\\t\\r\\n\\f]/g;\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( typeof value === \"string\" && value ) {\n\t\t\tclasses = value.match( rnotwhite ) || [];\n\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 &&\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tif ( typeof value === \"string\" && value ) {\n\t\t\tclasses = value.match( rnotwhite ) || [];\n\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 &&\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value;\n\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( type === \"string\" ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = value.match( rnotwhite ) || [];\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + getClass( elem ) + \" \" ).replace( rclass, \" \" )\n\t\t\t\t\t.indexOf( className ) > -1\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g,\n\trspaces = /[\\x20\\t\\r\\n\\f]+/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, isFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\treturn typeof ret === \"string\" ?\n\n\t\t\t\t\t// Handle most common string cases\n\t\t\t\t\tret.replace( rreturn, \"\" ) :\n\n\t\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\t\tret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tisFunction = jQuery.isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE10-11+\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tjQuery.trim( jQuery.text( elem ) ).replace( rspaces, \" \" );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\" || index < 0,\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length,\n\t\t\t\t\ti = index < 0 ?\n\t\t\t\t\t\tmax :\n\t\t\t\t\t\tone ? index : 0;\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t( support.optDisabled ?\n\t\t\t\t\t\t\t\t!option.disabled : option.getAttribute( \"disabled\" ) === null ) &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\telem[ type ]();\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\njQuery.each( ( \"blur focus focusin focusout load resize scroll unload click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup error contextmenu\" ).split( \" \" ),\n\tfunction( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n} );\n\njQuery.fn.extend( {\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\n\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\n// Support: Firefox\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome, Safari\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = jQuery.now();\n\nvar rquery = ( /\\?/ );\n\n\n\n// Support: Android 2.3\n// Workaround failure to string-cast null input\njQuery.parseJSON = function( data ) {\n\treturn JSON.parse( data + \"\" );\n};\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE9\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trhash = /#.*$/,\n\trts = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];\n\n\t\tif ( jQuery.isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": jQuery.parseJSON,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// The jqXHR state\n\t\t\tstate = 0,\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( state === 2 ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tvar lname = name.toLowerCase();\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\t\t\tfor ( code in map ) {\n\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\n\t\tjqXHR.success = jqXHR.done;\n\t\tjqXHR.error = jqXHR.fail;\n\n\t\t// Remove hash character (#7531: and string promotion)\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" ).replace( rhash, \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( rnotwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE8-11+\n\t\t\t// IE throws exception if url is malformed, e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE8-11+\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( state === 2 ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\tcacheURL = s.url;\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// If data is available, append data to url\n\t\t\tif ( s.data ) {\n\t\t\t\tcacheURL = ( s.url += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add anti-cache in url if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\ts.url = rts.test( cacheURL ) ?\n\n\t\t\t\t\t// If there is already a '_' parameter, set its value\n\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + nonce++ ) :\n\n\t\t\t\t\t// Otherwise add one to the end\n\t\t\t\t\tcacheURL + ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + nonce++;\n\t\t\t}\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\n\t\t\tjqXHR[ i ]( s[ i ] );\n\t\t}\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tstate = 1;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Propagate exception as error if not done\n\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\tdone( -1, e );\n\n\t\t\t\t// Simply rethrow otherwise\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Called once\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// State is \"done\" now\n\t\t\tstate = 2;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapAll( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( this[ 0 ] ) {\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar isFunction = jQuery.isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function() {\n\t\treturn this.parent().each( function() {\n\t\t\tif ( !jQuery.nodeName( this, \"body\" ) ) {\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t\t}\n\t\t} ).end();\n\t}\n} );\n\n\njQuery.expr.filters.hidden = function( elem ) {\n\treturn !jQuery.expr.filters.visible( elem );\n};\njQuery.expr.filters.visible = function( elem ) {\n\n\t// Support: Opera <= 12.12\n\t// Opera reports offsetWidths and offsetHeights less than zero on some elements\n\t// Use OR instead of AND as the element is not visible if either is true\n\t// See tickets #10406 and #13132\n\treturn elem.offsetWidth > 0 || elem.offsetHeight > 0 || elem.getClientRects().length > 0;\n};\n\n\n\n\nvar r20 = /%20/g,\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( jQuery.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, value ) {\n\n\t\t\t// If value is a function, invoke it and return its value\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\n\t\t};\n\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\n\tif ( traditional === undefined ) {\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\treturn val == null ?\n\t\t\t\tnull :\n\t\t\t\tjQuery.isArray( val ) ?\n\t\t\t\t\tjQuery.map( val, function( val ) {\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t\t} ) :\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE9\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE9\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = callback( \"error\" );\n\n\t\t\t\t// Support: IE9\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t} ).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\tcontext = context || document;\n\n\tvar parsed = rsingleTag.exec( data ),\n\t\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n// Keep a copy of the old load method\nvar _load = jQuery.fn.load;\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tif ( typeof url !== \"string\" && _load ) {\n\t\treturn _load.apply( this, arguments );\n\t}\n\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = jQuery.trim( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.expr.filters.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\n/**\n * Gets a window from an element\n */\nfunction getWindow( elem ) {\n\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\n}\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( jQuery.isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\toffset: function( options ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar docElem, win,\n\t\t\telem = this[ 0 ],\n\t\t\tbox = { top: 0, left: 0 },\n\t\t\tdoc = elem && elem.ownerDocument;\n\n\t\tif ( !doc ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdocElem = doc.documentElement;\n\n\t\t// Make sure it's not a disconnected DOM node\n\t\tif ( !jQuery.contains( docElem, elem ) ) {\n\t\t\treturn box;\n\t\t}\n\n\t\tbox = elem.getBoundingClientRect();\n\t\twin = getWindow( doc );\n\t\treturn {\n\t\t\ttop: box.top + win.pageYOffset - docElem.clientTop,\n\t\t\tleft: box.left + win.pageXOffset - docElem.clientLeft\n\t\t};\n\t},\n\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n\t\t// because it is its only offset parent\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume getBoundingClientRect is there when computed position is fixed\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\n\t\t\t// Get *real* offsetParent\n\t\t\toffsetParent = this.offsetParent();\n\n\t\t\t// Get correct offsets\n\t\t\toffset = this.offset();\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t}\n\n\t\t\t// Add offsetParent borders\n\t\t\tparentOffset.top += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true );\n\t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true );\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\t\t\tvar win = getWindow( elem );\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari<7-8+, Chrome<37-44+\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\n\t\t};\n\t} );\n} );\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t},\n\tsize: function() {\n\t\treturn this.length;\n\t}\n} );\n\njQuery.fn.andSelf = jQuery.fn.addBack;\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( true ) {\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\treturn jQuery;\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( !noGlobal ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\nreturn jQuery;\n}));\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (true) {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n      return _;\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n}.call(this));\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\r\n\r\n\t/**\r\n\t* Generate a random id for the object\r\n\t*/\r\n\tuniqueId: function() {\r\n\t\tvar unum = Math.floor((1 + Math.random()) * 0x10000);\r\n\t\tvar unumstr = unum.toString(16);\r\n\t\t//console.log(unumstr);\r\n\t\treturn unumstr;\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Check inputs from editing properties\r\n\t *\r\n\t */\r\n\tcheckInput: function(val) {\r\n\t\tif (isNaN(val)) {\r\n\t\t\treturn val;\r\n\t\t} else {\r\n\t\t\tvar num = parseFloat(val);\r\n\t\t\tif ((num % 1) == 0.0) {\r\n\t\t\t\treturn parseInt(val);\r\n\t\t\t} else {\r\n\t\t\t\treturn num;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.4';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, customDefaultsAssignIn);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (true) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n      return _;\n    }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8), __webpack_require__(21)(module)))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;;(function(root, factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.sortable = factory();\n  }\n}(this, function() {\n/*\n * HTML5 Sortable library\n * https://github.com/lukasoppermann/html5sortable\n *\n * Original code copyright 2012 Ali Farhadi.\n * This version is mantained by Lukas Oppermann <lukas@vea.re>\n * Previously also mantained by Alexandru Badiu <andu@ctrlz.ro>\n * jQuery-independent implementation by Nazar Mokrynskyi <nazar@mokrynskyi.com>\n *\n * Released under the MIT license.\n */\n'use strict'\n/*\n * variables global to the plugin\n */\nvar dragging\nvar draggingHeight\nvar placeholders = []\nvar sortables = []\n/**\n * Get or set data on element\n * @param {Element} element\n * @param {string} key\n * @param {*} value\n * @return {*}\n */\nvar _data = function (element, key, value) {\n  if (value === undefined) {\n    return element && element.h5s && element.h5s.data && element.h5s.data[key]\n  } else {\n    element.h5s = element.h5s || {}\n    element.h5s.data = element.h5s.data || {}\n    element.h5s.data[key] = value\n  }\n}\n/**\n * Remove data from element\n * @param {Element} element\n */\nvar _removeData = function (element) {\n  if (element.h5s) {\n    delete element.h5s.data\n  }\n}\n/**\n * Tests if an element matches a given selector. Comparable to jQuery's $(el).is('.my-class')\n * @param {el} DOM element\n * @param {selector} selector test against the element\n * @returns {boolean}\n */\n/* istanbul ignore next */\nvar _matches = function (el, selector) {\n  return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector)\n}\n/**\n * Filter only wanted nodes\n * @param {Array|NodeList} nodes\n * @param {Array/string} wanted\n * @returns {Array}\n */\nvar _filter = function (nodes, wanted) {\n  if (!wanted) {\n    return Array.prototype.slice.call(nodes)\n  }\n  var result = []\n  for (var i = 0; i < nodes.length; ++i) {\n    if (typeof wanted === 'string' && _matches(nodes[i], wanted)) {\n      result.push(nodes[i])\n    }\n    if (wanted.indexOf(nodes[i]) !== -1) {\n      result.push(nodes[i])\n    }\n  }\n  return result\n}\n/**\n * @param {Array|Element} element\n * @param {Array|string} event\n * @param {Function} callback\n */\nvar _on = function (element, event, callback) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      _on(element[i], event, callback)\n    }\n    return\n  }\n  element.addEventListener(event, callback)\n  element.h5s = element.h5s || {}\n  element.h5s.events = element.h5s.events || {}\n  element.h5s.events[event] = callback\n}\n/**\n * @param {Array|Element} element\n * @param {Array|string} event\n */\nvar _off = function (element, event) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      _off(element[i], event)\n    }\n    return\n  }\n  if (element.h5s && element.h5s.events && element.h5s.events[event]) {\n    element.removeEventListener(event, element.h5s.events[event])\n    delete element.h5s.events[event]\n  }\n}\n/**\n * @param {Array|Element} element\n * @param {string} attribute\n * @param {*} value\n */\nvar _attr = function (element, attribute, value) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      _attr(element[i], attribute, value)\n    }\n    return\n  }\n  element.setAttribute(attribute, value)\n}\n/**\n * @param {Array|Element} element\n * @param {string} attribute\n */\nvar _removeAttr = function (element, attribute) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      _removeAttr(element[i], attribute)\n    }\n    return\n  }\n  element.removeAttribute(attribute)\n}\n/**\n * @param {Element} element\n * @returns {{left: *, top: *}}\n */\nvar _offset = function (element) {\n  var rect = element.getClientRects()[0]\n  return {\n    left: rect.left + window.scrollX,\n    top: rect.top + window.scrollY\n  }\n}\n/*\n * remove event handlers from items\n * @param {Array|NodeList} items\n */\nvar _removeItemEvents = function (items) {\n  _off(items, 'dragstart')\n  _off(items, 'dragend')\n  _off(items, 'selectstart')\n  _off(items, 'dragover')\n  _off(items, 'dragenter')\n  _off(items, 'drop')\n}\n/*\n * Remove event handlers from sortable\n * @param {Element} sortable a single sortable\n */\nvar _removeSortableEvents = function (sortable) {\n  _off(sortable, 'dragover')\n  _off(sortable, 'dragenter')\n  _off(sortable, 'drop')\n}\n/*\n * Attach ghost to dataTransfer object\n * @param {Event} original event\n * @param {object} ghost-object with item, x and y coordinates\n */\nvar _attachGhost = function (event, ghost) {\n  // this needs to be set for HTML5 drag & drop to work\n  event.dataTransfer.effectAllowed = 'move'\n  // Firefox requires some arbitrary content in the data in order for\n  // the drag & drop functionality to work\n  event.dataTransfer.setData('text', 'arbitrary-content')\n\n  // check if setDragImage method is available\n  if (event.dataTransfer.setDragImage) {\n    event.dataTransfer.setDragImage(ghost.draggedItem, ghost.x, ghost.y)\n  }\n}\n/**\n * _addGhostPos clones the dragged item and adds it as a Ghost item\n * @param {Event} event - the event fired when dragstart is triggered\n * @param {object} ghost - .draggedItem = Element\n */\nvar _addGhostPos = function (event, ghost) {\n  if (!ghost.x) {\n    ghost.x = parseInt(event.pageX - _offset(ghost.draggedItem).left)\n  }\n  if (!ghost.y) {\n    ghost.y = parseInt(event.pageY - _offset(ghost.draggedItem).top)\n  }\n  return ghost\n}\n/**\n * _makeGhost decides which way to make a ghost and passes it to attachGhost\n * @param {Element} draggedItem - the item that the user drags\n */\nvar _makeGhost = function (draggedItem) {\n  return {\n    draggedItem: draggedItem\n  }\n}\n/**\n * _getGhost constructs ghost and attaches it to dataTransfer\n * @param {Event} event - the original drag event object\n * @param {Element} draggedItem - the item that the user drags\n */\n// TODO: could draggedItem be replaced by event.target in all instances\nvar _getGhost = function (event, draggedItem) {\n  // add ghost item & draggedItem to ghost object\n  var ghost = _makeGhost(draggedItem)\n  // attach ghost position\n  ghost = _addGhostPos(event, ghost)\n  // attach ghost to dataTransfer\n  _attachGhost(event, ghost)\n}\n/*\n * Remove data from sortable\n * @param {Element} sortable a single sortable\n */\nvar _removeSortableData = function (sortable) {\n  _removeData(sortable)\n  _removeAttr(sortable, 'aria-dropeffect')\n}\n/*\n * Remove data from items\n * @param {Array|Element} items\n */\nvar _removeItemData = function (items) {\n  _removeAttr(items, 'aria-grabbed')\n  _removeAttr(items, 'draggable')\n  _removeAttr(items, 'role')\n}\n/*\n * Check if two lists are connected\n * @param {Element} curList\n * @param {Element} destList\n */\nvar _listsConnected = function (curList, destList) {\n  if (curList === destList) {\n    return true\n  }\n  if (_data(curList, 'connectWith') !== undefined) {\n    return _data(curList, 'connectWith') === _data(destList, 'connectWith')\n  }\n  return false\n}\n/*\n * get handle or return item\n * @param {Array} items\n * @param {selector} handle\n */\nvar _getHandles = function (items, handle) {\n  var result = []\n  var handles\n  if (!handle) {\n    return items\n  }\n  for (var i = 0; i < items.length; ++i) {\n    handles = items[i].querySelectorAll(handle)\n    result = result.concat(Array.prototype.slice.call(handles))\n  }\n  return result\n}\n/*\n * Destroy the sortable\n * @param {Element} sortableElement a single sortable\n */\nvar _destroySortable = function (sortableElement) {\n  var opts = _data(sortableElement, 'opts') || {}\n  var items = _filter(_getChildren(sortableElement), opts.items)\n  var handles = _getHandles(items, opts.handle)\n  // remove event handlers & data from sortable\n  _removeSortableEvents(sortableElement)\n  _removeSortableData(sortableElement)\n  // remove event handlers & data from items\n  _off(handles, 'mousedown')\n  _removeItemEvents(items)\n  _removeItemData(items)\n}\n/*\n * Enable the sortable\n * @param {Element} sortableElement a single sortable\n */\nvar _enableSortable = function (sortableElement) {\n  var opts = _data(sortableElement, 'opts')\n  var items = _filter(_getChildren(sortableElement), opts.items)\n  var handles = _getHandles(items, opts.handle)\n  _attr(sortableElement, 'aria-dropeffect', 'move')\n  _data(sortableElement, '_disabled', 'false')\n  _attr(handles, 'draggable', 'true')\n  // IE FIX for ghost\n  // can be disabled as it has the side effect that other events\n  // (e.g. click) will be ignored\n  var spanEl = (document || window.document).createElement('span')\n  if (typeof spanEl.dragDrop === 'function' && !opts.disableIEFix) {\n    _on(handles, 'mousedown', function () {\n      if (items.indexOf(this) !== -1) {\n        this.dragDrop()\n      } else {\n        var parent = this.parentElement\n        while (items.indexOf(parent) === -1) {\n          parent = parent.parentElement\n        }\n        parent.dragDrop()\n      }\n    })\n  }\n}\n/*\n * Disable the sortable\n * @param {Element} sortableElement a single sortable\n */\nvar _disableSortable = function (sortableElement) {\n  var opts = _data(sortableElement, 'opts')\n  var items = _filter(_getChildren(sortableElement), opts.items)\n  var handles = _getHandles(items, opts.handle)\n  _attr(sortableElement, 'aria-dropeffect', 'none')\n  _data(sortableElement, '_disabled', 'true')\n  _attr(handles, 'draggable', 'false')\n  _off(handles, 'mousedown')\n}\n/*\n * Reload the sortable\n * @param {Element} sortableElement a single sortable\n * @description events need to be removed to not be double bound\n */\nvar _reloadSortable = function (sortableElement) {\n  var opts = _data(sortableElement, 'opts')\n  var items = _filter(_getChildren(sortableElement), opts.items)\n  var handles = _getHandles(items, opts.handle)\n  _data(sortableElement, '_disabled', 'false')\n  // remove event handlers from items\n  _removeItemEvents(items)\n  _off(handles, 'mousedown')\n  // remove event handlers from sortable\n  _removeSortableEvents(sortableElement)\n}\n/**\n * Get position of the element relatively to its sibling elements\n * @param {Element} element\n * @returns {number}\n */\nvar _index = function (element) {\n  if (!element.parentElement) {\n    return 0\n  }\n  return Array.prototype.indexOf.call(element.parentElement.children, element)\n}\n/**\n * Whether element is in DOM\n * @param {Element} element\n * @returns {boolean}\n */\nvar _attached = function (element) {\n  // document.body.contains(element)\n  return !!element.parentNode\n}\n/**\n * Convert HTML string into DOM element.\n * @param {Element|string} html\n * @param {string} tagname\n * @returns {Element}\n */\nvar _html2element = function (html, tagName) {\n  if (typeof html !== 'string') {\n    return html\n  }\n  var parentElement = document.createElement(tagName)\n  parentElement.innerHTML = html\n  return parentElement.firstChild\n}\n/**\n * Insert before target\n * @param {Element} target\n * @param {Element} element\n */\nvar _before = function (target, element) {\n  target.parentElement.insertBefore(\n    element,\n    target\n  )\n}\n/**\n * Insert after target\n * @param {Element} target\n * @param {Element} element\n */\nvar _after = function (target, element) {\n  target.parentElement.insertBefore(\n    element,\n    target.nextElementSibling\n  )\n}\n/**\n * Detach element from DOM\n * @param {Element} element\n */\nvar _detach = function (element) {\n  if (element.parentNode) {\n    element.parentNode.removeChild(element)\n  }\n}\n/**\n * Make native event that can be dispatched afterwards\n * @param {string} name\n * @param {object} detail\n * @returns {CustomEvent}\n */\nvar _makeEvent = function (name, detail) {\n  var e = document.createEvent('Event')\n  if (detail) {\n    e.detail = detail\n  }\n  e.initEvent(name, false, true)\n  return e\n}\n/**\n * @param {Element} sortableElement\n * @param {CustomEvent} event\n */\nvar _dispatchEventOnConnected = function (sortableElement, event) {\n  sortables.forEach(function (target) {\n    if (_listsConnected(sortableElement, target)) {\n      target.dispatchEvent(event)\n    }\n  })\n}\n\n/**\n * Creates and returns a new debounced version of the passed function which will postpone its execution until after wait milliseconds have elapsed\n * @param {fn} Function to debounce\n * @param {delay} time to wait before calling function with latest arguments, 0 - no debounce\n * @param {context} time to wait before calling function with latest arguments, 0 - no debounce\n * @returns {function} - debounced function\n */\nfunction _debounce (fn, delay, context) {\n  var timer = null\n\n  if (delay === 0) {\n    return fn\n  }\n  return function () {\n    var eContext = context || this\n    var args = arguments\n    clearTimeout(timer)\n    timer = setTimeout(function () {\n      fn.apply(eContext, args)\n    }, delay)\n  }\n}\n\nvar _getChildren = function (element) {\n  return element.children\n}\n\nvar _serialize = function (list) {\n  var children = _filter(_getChildren(list), _data(list, 'items'))\n  return children\n}\n\n/*\n * Public sortable object\n * @param {Array|NodeList} sortableElements\n * @param {object|string} options|method\n */\nvar sortable = function (sortableElements, options) {\n  var method = String(options)\n\n  options = (function (options) {\n    var result = {\n      connectWith: false,\n      placeholder: null,\n      disableIEFix: false,\n      placeholderClass: 'sortable-placeholder',\n      draggingClass: 'sortable-dragging',\n      hoverClass: false,\n      debounce: 0,\n      maxItems: 0\n    }\n    for (var option in options) {\n      result[option] = options[option]\n    }\n    return result\n  })(options)\n\n  if (options && typeof options.getChildren === 'function') {\n    _getChildren = options.getChildren\n  }\n\n  if (typeof sortableElements === 'string') {\n    sortableElements = document.querySelectorAll(sortableElements)\n  }\n\n  if (sortableElements instanceof window.Element) {\n    sortableElements = [sortableElements]\n  }\n\n  sortableElements = Array.prototype.slice.call(sortableElements)\n\n  if (/serialize/.test(method)) {\n    var serialized = []\n    sortableElements.forEach(function (sortableElement) {\n      serialized.push({\n        list: sortableElement,\n        children: _serialize(sortableElement)\n      })\n    })\n    return serialized\n  }\n\n  /* TODO: maxstatements should be 25, fix and remove line below */\n  /* jshint maxstatements:false */\n  sortableElements.forEach(function (sortableElement) {\n    if (/enable|disable|destroy/.test(method)) {\n      return sortable[method](sortableElement)\n    }\n\n    // get options & set options on sortable\n    options = _data(sortableElement, 'opts') || options\n    _data(sortableElement, 'opts', options)\n    // reset sortable\n    _reloadSortable(sortableElement)\n    // initialize\n    var items = _filter(_getChildren(sortableElement), options.items)\n    var index\n    var startParent\n    var startList\n    var placeholder = options.placeholder\n    var maxItems\n    if (!placeholder) {\n      placeholder = document.createElement(\n        /^ul|ol$/i.test(sortableElement.tagName) ? 'li' : 'div'\n      )\n    }\n    placeholder = _html2element(placeholder, sortableElement.tagName)\n    placeholder.classList.add.apply(\n      placeholder.classList,\n      options.placeholderClass.split(' ')\n    )\n\n    // setup sortable ids\n    if (!sortableElement.getAttribute('data-sortable-id')) {\n      var id = sortables.length\n      sortables[id] = sortableElement\n      _attr(sortableElement, 'data-sortable-id', id)\n      _attr(items, 'data-item-sortable-id', id)\n    }\n\n    _data(sortableElement, 'items', options.items)\n    placeholders.push(placeholder)\n    if (options.connectWith) {\n      _data(sortableElement, 'connectWith', options.connectWith)\n    }\n\n    _enableSortable(sortableElement)\n    _attr(items, 'role', 'option')\n    _attr(items, 'aria-grabbed', 'false')\n\n    // Mouse over class\n    if (options.hoverClass) {\n      var hoverClass = 'sortable-over'\n      if (typeof options.hoverClass === 'string') {\n        hoverClass = options.hoverClass\n      }\n\n      _on(items, 'mouseenter', function () {\n        this.classList.add(hoverClass)\n      })\n      _on(items, 'mouseleave', function () {\n        this.classList.remove(hoverClass)\n      })\n    }\n\n    // max items\n    if (options.maxItems && typeof options.maxItems === 'number') {\n      maxItems = options.maxItems\n    }\n\n    // Handle drag events on draggable items\n    _on(items, 'dragstart', function (e) {\n      e.stopImmediatePropagation()\n      if ((options.handle && !_matches(e.target, options.handle)) || this.getAttribute('draggable') === 'false') {\n        return\n      }\n\n      // add transparent clone or other ghost to cursor\n      _getGhost(e, this)\n      // cache selsection & add attr for dragging\n      this.classList.add(options.draggingClass)\n      dragging = this\n      _attr(dragging, 'aria-grabbed', 'true')\n      // grab values\n      index = _index(dragging)\n      draggingHeight = parseInt(window.getComputedStyle(dragging).height)\n      startParent = this.parentElement\n      startList = _serialize(startParent)\n      // dispatch sortstart event on each element in group\n      _dispatchEventOnConnected(sortableElement, _makeEvent('sortstart', {\n        item: dragging,\n        placeholder: placeholder,\n        startparent: startParent\n      }))\n    })\n    // Handle drag events on draggable items\n    _on(items, 'dragend', function () {\n      var newParent\n      if (!dragging) {\n        return\n      }\n      // remove dragging attributes and show item\n      dragging.classList.remove(options.draggingClass)\n      _attr(dragging, 'aria-grabbed', 'false')\n      dragging.style.display = dragging.oldDisplay\n      delete dragging.oldDisplay\n\n      placeholders.forEach(_detach)\n      newParent = this.parentElement\n      _dispatchEventOnConnected(sortableElement, _makeEvent('sortstop', {\n        item: dragging,\n        startparent: startParent\n      }))\n      if (index !== _index(dragging) || startParent !== newParent) {\n        _dispatchEventOnConnected(sortableElement, _makeEvent('sortupdate', {\n          item: dragging,\n          index: _filter(_getChildren(newParent), _data(newParent, 'items'))\n              .indexOf(dragging),\n          oldindex: items.indexOf(dragging),\n          elementIndex: _index(dragging),\n          oldElementIndex: index,\n          startparent: startParent,\n          endparent: newParent,\n          newEndList: _serialize(newParent),\n          newStartList: _serialize(startParent),\n          oldStartList: startList\n        }))\n      }\n      dragging = null\n      draggingHeight = null\n    })\n    // Handle drop event on sortable & placeholder\n    // TODO: REMOVE placeholder?????\n    _on([sortableElement, placeholder], 'drop', function (e) {\n      var visiblePlaceholder\n      if (!_listsConnected(sortableElement, dragging.parentElement)) {\n        return\n      }\n\n      e.preventDefault()\n      e.stopPropagation()\n      visiblePlaceholder = placeholders.filter(_attached)[0]\n      _after(visiblePlaceholder, dragging)\n      dragging.dispatchEvent(_makeEvent('dragend'))\n    })\n\n    var debouncedDragOverEnter = _debounce(function (element, pageY) {\n      if (!dragging) {\n        return\n      }\n\n      if (items.indexOf(element) !== -1) {\n        var thisHeight = parseInt(window.getComputedStyle(element).height)\n        var placeholderIndex = _index(placeholder)\n        var thisIndex = _index(element)\n        if (options.forcePlaceholderSize) {\n          placeholder.style.height = draggingHeight + 'px'\n        }\n\n        // Check if `element` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n        if (thisHeight > draggingHeight) {\n          // Dead zone?\n          var deadZone = thisHeight - draggingHeight\n          var offsetTop = _offset(element).top\n          if (placeholderIndex < thisIndex &&\n              pageY < offsetTop + deadZone) {\n            return\n          }\n          if (placeholderIndex > thisIndex &&\n              pageY > offsetTop + thisHeight - deadZone) {\n            return\n          }\n        }\n\n        if (dragging.oldDisplay === undefined) {\n          dragging.oldDisplay = dragging.style.display\n        }\n\n        if (dragging.style.display !== 'none') {\n          dragging.style.display = 'none'\n        }\n\n        if (placeholderIndex < thisIndex) {\n          _after(element, placeholder)\n        } else {\n          _before(element, placeholder)\n        }\n        // Intentionally violated chaining, it is more complex otherwise\n        placeholders\n          .filter(function (element) { return element !== placeholder })\n          .forEach(_detach)\n      } else {\n        if (placeholders.indexOf(element) === -1 &&\n            !_filter(_getChildren(element), options.items).length) {\n          placeholders.forEach(_detach)\n          element.appendChild(placeholder)\n        }\n      }\n    }, options.debounce)\n\n    // Handle dragover and dragenter events on draggable items\n    var onDragOverEnter = function (e) {\n      if (!dragging || !_listsConnected(sortableElement, dragging.parentElement) || _data(sortableElement, '_disabled') === 'true') {\n        return\n      }\n      if (maxItems && _filter(_getChildren(sortableElement), _data(sortableElement, 'items')).length >= maxItems) {\n        return\n      }\n      e.preventDefault()\n      e.stopPropagation()\n      e.dataTransfer.dropEffect = 'move'\n      debouncedDragOverEnter(this, e.pageY)\n    }\n\n    _on(items.concat(sortableElement), 'dragover', onDragOverEnter)\n    _on(items.concat(sortableElement), 'dragenter', onDragOverEnter)\n  })\n\n  return sortableElements\n}\n\nsortable.destroy = function (sortableElement) {\n  _destroySortable(sortableElement)\n}\n\nsortable.enable = function (sortableElement) {\n  _enableSortable(sortableElement)\n}\n\nsortable.disable = function (sortableElement) {\n  _disableSortable(sortableElement)\n}\n\n\nreturn sortable;\n}));\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar $ = __webpack_require__(4),\r\n\tMn = __webpack_require__(1),\r\n\tRadio = __webpack_require__(0),\r\n\tconfig = __webpack_require__(3),\r\n\tComms = __webpack_require__(11),\r\n\tStore = __webpack_require__(12),\r\n\tPresentAppView = __webpack_require__(23);\r\n\r\n\r\n/**\r\n * Actions. Marionette Object classes whose purpose is to listen for events on the \"dispatch\" channel and deal with them accordingly.\r\n * This means there is a single place where an event is handled.\r\n * Each action responded to *may* trigger other events.\r\n *\r\n */\r\nvar Actions = [\r\n\t__webpack_require__(46),\r\n\t__webpack_require__(47),\r\n\t__webpack_require__(48),\r\n\t__webpack_require__(49),\r\n\t__webpack_require__(50),\r\n\t__webpack_require__(51),\r\n];\r\n\r\n\r\nvar PresentApp = Mn.Application.extend({\r\n\r\n\tregion: '[data-region=app]',\r\n\r\n\t_comms: null,\r\n\t_store: null,\r\n\t_dispatchChannel: null,\r\n\r\n\r\n\tinitialize: function() {\r\n\r\n\t\t// this._appChannel = Radio.channel(\"app\");\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\r\n\t\tif (config.use_io) {\r\n\t\t\tvar server_url = \"http://\" + window.location.hostname + \":\" + window.location.port;\r\n\t\t\tthis._comms = new Comms({ url: server_url });\r\n\t\t}\r\n\r\n\t\tthis._store = new Store();\r\n\r\n\t\tthis.registerActions();\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Loop through the included action classes and initialize them.\r\n\t * the initialize() function in each action will register the Radio channel replies.\r\n\t *\r\n\t */\r\n\tregisterActions: function() {\r\n\t\tvar self = this;\r\n\t\t_.forEach(Actions, function(actionHandler) {\r\n\t\t\tnew actionHandler();\r\n\t\t});\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Dispatch the start event and render the view when it starts\r\n\t *\r\n\t */\r\n\tonStart: function() {\r\n\t\tthis._dispatchChannel.request(\"app:start\");\r\n\t\tthis.showView(new PresentAppView({ store: this._store }));\r\n\t}\r\n\r\n\r\n});\r\n\r\n\r\n$(document).ready(function() {\r\n\tvar app = new PresentApp();\r\n\tapp.start();\r\n});\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar Mn = __webpack_require__(1),\r\n\tRadio = __webpack_require__(0);\r\n\r\n\r\nvar Comms = Mn.Object.extend({\r\n\r\n\t_socket: null,\r\n\t_dataChannel: null,\r\n\t_appChannel: null,\r\n\r\n\tinitialize: function(options) {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tthis._dataChannel = Radio.channel(\"data\");\r\n\t\tthis._appChannel = Radio.channel(\"app\");\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t\tthis._commsChannel = Radio.channel(\"comms\");\r\n\r\n\t\t// Init socket.io + listener\r\n\t\tthis._socket = io(options.url);\r\n\t\tthis._socket.on('designmsg', function(respdata) {\r\n\t\t\tself.ioUpdate(respdata);\r\n\t\t});\r\n\r\n\t\tthis._commsChannel.reply(\"txPEventsCheckDesign\", this.txPEventsCheckDesign, this);\r\n\t\tthis._commsChannel.reply(\"txPEventsGetPEInfo\", this.txPEventsGetPEInfo, this);\r\n\t\tthis._commsChannel.reply(\"txPEventsGetLayerInfo\", this.txPEventsGetLayerInfo, this);\r\n\t\tthis._commsChannel.reply(\"txPEventsArr\", this.txPEventsArr, this);\r\n\t\tthis._commsChannel.reply(\"castStartEvent\", this.castStartEvent, this);\r\n\t\tthis._commsChannel.reply(\"castPresentEvent\", this.castPresentEvent, this);\r\n\t\tthis._commsChannel.reply(\"txStartEvent\", this.txStartEvent, this);\r\n\t\tthis._commsChannel.reply(\"txPlayEvent\", this.txPlayEvent, this);\r\n\t},\r\n\r\n\tioUpdate: function(respdata) {\r\n\r\n\t\tvar self = this;\r\n\t\tvar viewcommand = JSON.parse(respdata);\r\n\t\tvar command = viewcommand.command;\r\n\r\n\t\tconsole.log(\"Comms | ioUpdate | Command: \" + command);\r\n\r\n\t\tswitch (command) {\r\n\r\n\t\t\tcase 'designready':\r\n\t\t\t\tthis._dispatchChannel.request(\"io:designready\", {\r\n\t\t\t\t\tproject: (viewcommand.project ? viewcommand.project : null),\r\n\t\t\t\t\tstatus: viewcommand.info\r\n\t\t\t\t});\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 'layerinfo':\r\n\t\t\t\tthis._dispatchChannel.request(\"io:layerinfo\", {\r\n\t\t\t\t\tlayers: viewcommand.info\r\n\t\t\t\t});\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 'peinfo':\r\n\t\t\t\tthis._dispatchChannel.request(\"io:peinfo\", {\r\n\t\t\t\t\tpeinfo: viewcommand.info\r\n\t\t\t\t});\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 'updateAllPEventActions':\r\n\t\t\t\tthis._dispatchChannel.request(\"io:update_actions\", {\r\n\t\t\t\t\tstatesarr: viewcommand.info\r\n\t\t\t\t});\r\n\t\t\tbreak;\r\n\t\t}\r\n\t},\r\n\r\n\ttxPEventsCheckDesign: function() {\r\n\t\tvar msg = JSON.stringify({\r\n\t\t\tcommand: 'checkDesignScreen',\r\n\t\t\tinfo: ''\r\n\t\t});\r\n\t\tthis._socket.emit('updateEvents', msg);\r\n\t},\r\n\r\n\ttxPEventsGetPEInfo: function() {\r\n\t\tvar msg = JSON.stringify({\r\n\t\t\tcommand: 'getPEinfo',\r\n\t\t\tinfo: ''\r\n\t\t});\r\n\t\tthis._socket.emit('updateEvents', msg);\r\n\t},\r\n\r\n\ttxPEventsGetLayerInfo: function() {\r\n\t\tvar msg = JSON.stringify({\r\n\t\t\tcommand: 'getLayerinfo',\r\n\t\t\tinfo: ''\r\n\t\t});\r\n\t\tthis._socket.emit('updateEvents', msg);\r\n\t},\r\n\r\n\ttxPEventsArr: function(data) {\r\n\t\tvar msg = JSON.stringify({\r\n\t\t\tcommand: 'updateEventArr',\r\n\t\t\tinfo: {\r\n\t\t\t\tpel: data.statearr,\r\n\t\t\t\tsev: data.seviews,\r\n\t\t\t\tgroups: data.grouparr\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis._socket.emit('updateEvents', msg);\r\n\t},\r\n\r\n\tcastStartEvent: function(data) {\r\n\r\n\t\tvar event = data.event,\r\n\t\t\tstartinfo = event.get(\"peviews\");\r\n\r\n\t\tvar msg = JSON.stringify({\r\n\t\t\tcommand: \"castStartinfo\",\r\n\t\t\tinfo: startinfo\r\n\t\t});\r\n\r\n\t\t// console.log(msg);\r\n\r\n\t\tthis._socket.emit(\"updateEvents\", msg);\r\n\t},\r\n\r\n\tcastPresentEvent: function(data) {\r\n\r\n\t\tvar event = data.event,\r\n\t\t\tcastind = event.collection.indexOf(event);\r\n\r\n\t\t// This command only sends the index of the event.\r\n\t\t// In terms of the data transferred...\r\n\t\t// our indexes are offset by 1 due to the presence of the startevent in the collection.\r\n\t\tif (castind > 0) {\r\n\t\t\tcastind = castind - 1;\r\n\t\t}\r\n\r\n\t\tvar msg = {\r\n\t\t\tcommand: 'castPEinfo',\r\n\t\t\tinfo: castind\r\n\t\t};\r\n\r\n\t\tconsole.log(msg);\r\n\r\n\t\tthis._socket.emit(\"updateEvents\", JSON.stringify(msg));\r\n\t},\r\n\r\n\ttxStartEvent: function(data) {\r\n\r\n\t\t// console.log(\"txStartEvent\");\r\n\t\t// console.log(data);\r\n\r\n\t\tvar self = this,\r\n\t\t\tevent = data.event,\r\n\t\t\tindex = event.collection.indexOf(event),\r\n\t\t\tpeviews = event.get(\"peviews\"),\r\n\t\t\tscreenName = null,\r\n\t\t\tlayerId = null,\r\n\t\t\tcmd = {};\r\n\r\n\t\tif (index > 0) {\r\n\t\t\tindex = index - 1;\r\n\t\t}\r\n\r\n\t\t// message to screen to go to startstate\r\n\t\t//\r\n\t\tvar msg = {\r\n\t\t\tcommand: 'startPE',\r\n\t\t\tinfo: index\r\n\t\t};\r\n\t\t// console.log(msg);\r\n\t\tthis._socket.emit('updateEvents', JSON.stringify(msg));\r\n\r\n\t\t_.each(peviews, function(peview) {\r\n\r\n\t\t\tscreenName = peview.viewstate.name;\r\n\t\t\tlayerId = peview.layerid;\r\n\r\n\t\t\tif (layerId != \"none\" && peview.actions.length > 0) {\r\n\t\t\t\tcmd = {\r\n\t\t\t\t\tview: screenName,\r\n\t\t\t\t\tscrtxmsg: {\r\n\t\t\t\t\t\tcommand: \"start\",\r\n\t\t\t\t\t\tinfo: \"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tconsole.log(cmd);\r\n\t\t\t\tself._socket.emit(\"screenmsg\", JSON.stringify(cmd));\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t},\r\n\r\n\ttxPlayEvent: function(data) {\r\n\r\n\t\t// console.log(\"txPlayEvent\");\r\n\t\t// console.log(data);\r\n\r\n\t\tvar self = this,\r\n\t\t\tevent = data.event,\r\n\t\t\tindex = event.collection.indexOf(event),\r\n\t\t\tpeviews = event.get(\"peviews\"),\r\n\t\t\tscreenName = null,\r\n\t\t\tlayerId = null,\r\n\t\t\tcmd = {};\r\n\r\n\t\tif (index > 0) {\r\n\t\t\tindex = index - 1;\r\n\t\t}\r\n\r\n\t\t// message to screen ??\r\n\t\tvar msg = {\r\n\t\t\tcommand: 'playPE',\r\n\t\t\tinfo: index\r\n\t\t};\r\n\t\t// console.log(msg);\r\n\t\tthis._socket.emit(\"updateEvents\", JSON.stringify(msg));\r\n\r\n\t\t_.each(peviews, function(peview) {\r\n\r\n\t\t\tscreenName = peview.viewstate.name;\r\n\t\t\tlayerId = peview.layerid;\r\n\r\n\t\t\tif (layerId != \"none\" && peview.actions.length > 0) {\r\n\r\n\t\t\t\tcmd = {\r\n\t\t\t\t\tview: screenName,\r\n\t\t\t\t\tscrtxmsg: {\r\n\t\t\t\t\t\tcommand: \"play\",\r\n\t\t\t\t\t\tinfo: \"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(cmd);\r\n\r\n\t\t\t\tself._socket.emit(\"screenmsg\", JSON.stringify(cmd));\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = Comms;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar Mn = __webpack_require__(1),\r\n\tRadio = __webpack_require__(0),\r\n\tCommon = __webpack_require__(6),\r\n\tconfig = __webpack_require__(3),\r\n\tGroupCollection = __webpack_require__(13),\r\n\tLayerCollection = __webpack_require__(15),\r\n\tViewCollection = __webpack_require__(17),\r\n\tEventCollection = __webpack_require__(19),\r\n\tProjectModel = __webpack_require__(22);\r\n\r\n\r\nvar Store = Mn.Object.extend({\r\n\r\n\t_appChannel: null,\r\n\t_dataChannel: null,\r\n\t_storeChannel: null,\r\n\r\n\tgroupCollection: null,\r\n\tviewCollection: null,\r\n\teventCollection: null,\r\n\tlayerCollection: null,\r\n\r\n\t//list of {layerid:id,layername:name} in designscreen\r\n\tlayers: [],\r\n\r\n\t//list of viewobjects with state attributes linked to physical screens/browserpages\r\n\tviews: [],\r\n\r\n\t//array of present event objects\r\n\tpresentevents: [],\r\n\r\n\tplayMode: false,\r\n\r\n\tinitialize: function() {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tthis._dataChannel = Radio.channel(\"data\");\r\n\t\tthis._appChannel = Radio.channel(\"app\");\r\n\t\tthis._storeChannel = Radio.channel(\"store\");\r\n\r\n\t\tthis.groupCollection = new GroupCollection();\r\n\t\tthis.viewCollection = new ViewCollection();\r\n\t\tthis.eventCollection = new EventCollection();\r\n\t\tthis.layerCollection = new LayerCollection();\r\n\t\tthis.projectModel = new ProjectModel();\r\n\r\n\t\tthis._storeChannel.reply(\"groupCollection\", function() {\r\n\t\t\treturn self.groupCollection;\r\n\t\t});\r\n\r\n\t\tthis._storeChannel.reply(\"viewCollection\", function() {\r\n\t\t\treturn self.viewCollection;\r\n\t\t});\r\n\r\n\t\tthis._storeChannel.reply(\"eventCollection\", function() {\r\n\t\t\treturn self.eventCollection;\r\n\t\t});\r\n\r\n\t\tthis._storeChannel.reply(\"layerCollection\", function() {\r\n\t\t\treturn self.layerCollection;\r\n\t\t});\r\n\r\n\t\tthis._storeChannel.reply(\"projectModel\", function() {\r\n\t\t\treturn self.projectModel;\r\n\t\t});\r\n\r\n\t\tthis._storeChannel.reply(\"store\", function() {\r\n\t\t\treturn self;\r\n\t\t});\r\n\r\n\t},\r\n\r\n\tsetPlayMode: function(playMode) {\r\n\t\tconsole.log(\"Store | setPlayMode | \" + playMode);\r\n\t\tthis.playMode = playMode;\r\n\t},\r\n\r\n\tgetPlayMode: function() {\r\n\t\treturn this.playMode\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = Store;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar Bb = __webpack_require__(2),\r\n\tRadio = __webpack_require__(0),\r\n\tconfig = __webpack_require__(3),\r\n\tGroupModel = __webpack_require__(14);\r\n\r\n\r\nvar GroupCollection = Bb.Collection.extend({\r\n\r\n\tmodel: GroupModel,\r\n\tcomparator: \"index\",\r\n\r\n\t_dispatchChannel: null,\r\n\r\n\r\n\tinitialize: function() {\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t\tthis.on(\"change:name\", this.handleChangeName);\r\n\t\t// this.on(\"add remove\", this.handleAddRemove);\r\n\t},\r\n\r\n\r\n\r\n\t/**\r\n\t * When a group model name changes, we need to raise the event on the dispatch channel.\r\n\t * The intention of the action for this event is to update all the event models to change the \"group\" attribute.\r\n\t *\r\n\t */\r\n\thandleChangeName: function(groupModel) {\r\n\r\n\t\tvar oldName = groupModel.previous(\"name\"),\r\n\t\t\tnewName = groupModel.get(\"name\");\r\n\r\n\t\tthis._dispatchChannel.request(\"group:rename\", {\r\n\t\t\toldName: oldName,\r\n\t\t\tnewName: newName,\r\n\t\t\tgroupModel: groupModel\r\n\t\t});\r\n\r\n\t},\r\n\r\n\r\n\tupdateIndexes: function() {\r\n\t\tthis.each(function(groupModel, index) {\r\n\t\t\tgroupModel.set({ \"index\": index }, { silent: true });\r\n\t\t});\r\n\r\n\t\tthis.trigger(\"update:indexes\");\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Determine if a new group can be added, based on current number of groups and maximum groups permitted.\r\n\t *\r\n\t */\r\n\tcanAddGroup: function() {\r\n\t\treturn (this.models.length < config.max_groups);\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Add a new group.\r\n\t *\r\n\t * If a new group can be made, create one with a suitable name, add it to the collection, and return it.\r\n\t *\r\n\t */\r\n\tcreateNew: function() {\r\n\r\n\t\tif ( ! this.canAddGroup()) {\r\n\t\t\tconsole.error(\"Maximum number of groups reached.\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar newGroup = new GroupModel({ name: \"group\" });\r\n\t\tvar index = 0;\r\n\r\n\t\twhile (index <= config.max_groups) {\r\n\t\t\tvar tryName = newGroup.get(\"name\") + index;\r\n\t\t\tif (this.findWhere({ \"name\": tryName })) {\r\n\t\t\t\tindex++;\r\n\t\t\t} else {\r\n\t\t\t\tnewGroup.set(\"name\", tryName);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar maxIndex = this.max(function(groupModel) {\r\n\t\t\treturn groupModel.get(\"index\");\r\n\t\t});\r\n\r\n\t\t// console.log(\"maxIndex\");\r\n\t\t// console.log(maxIndex);\r\n\r\n\t\t//newGroup.set(\"index\", parseInt(maxIndex.get(\"index\"), 10) + 1);\r\n\r\n\t\tthis.add(newGroup, { at: this.length });\r\n\t\treturn newGroup;\r\n\t}\r\n\r\n\r\n});\r\n\r\n\r\nmodule.exports = GroupCollection;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar Bb = __webpack_require__(2);\r\n\r\n\r\nvar GroupModel = Bb.Model.extend({\r\n\r\n\tidAttribute: \"name\",\r\n\r\n\tdefaults: {\r\n\t\tname: \"default\",\r\n\t\tindex: 0\r\n\t},\r\n\r\n\tvalidate: function(attributes, options) {\r\n\r\n\t\t// Ensure the new group name is unique.\r\n\t\t// Search our collection for other groups with the new desired name.\r\n\r\n\t\tvar existing = false,\r\n\t\t\tmyId = this.cid,\r\n\t\t\tmyName = attributes.name;\r\n\r\n\t\tvar existing = this.collection.find(function(groupModel) {\r\n\t\t\treturn groupModel.get(\"name\") == myName && myId != groupModel.cid;\r\n\t\t});\r\n\r\n\t\tif (existing !== undefined) {\r\n\t\t\treturn \"There is another group already using the name \" + existing.get(\"name\");\r\n\t\t}\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = GroupModel;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar Bb = __webpack_require__(2),\r\n\tRadio = __webpack_require__(0),\r\n\tLayerModel = __webpack_require__(16);\r\n\r\n\r\nvar LayerCollection = Bb.Collection.extend({\r\n\tmodel: LayerModel\r\n});\r\n\r\n\r\nmodule.exports = LayerCollection;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar Bb = __webpack_require__(2);\r\n\r\n\r\nvar LayerModel = Bb.Model.extend({\r\n\r\n\tidAttribute: \"layerid\",\r\n\r\n\tdefaults: {\r\n\t\tlayerid: null,\r\n\t\tlayername: null\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = LayerModel;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar Bb = __webpack_require__(2),\r\n\tRadio = __webpack_require__(0),\r\n\tconfig = __webpack_require__(3),\r\n\tViewModel = __webpack_require__(18);\r\n\r\n\r\nvar ViewCollection = Bb.Collection.extend({\r\n\r\n\tmodel: ViewModel,\r\n\r\n\t_dispatchChannel: null,\r\n\r\n\r\n\tinitialize: function() {\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t\tthis.on(\"change:name\", this.handleChangeName);\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * When a view model name changes, we need to raise the event on the dispatch channel.\r\n\t * The intention of the action for this event is to update all the `peviews` info in the event models.\r\n\t *\r\n\t */\r\n\thandleChangeName: function(viewModel) {\r\n\r\n\t\tvar oldName = viewModel.previous(\"name\"),\r\n\t\t\tnewName = viewModel.get(\"name\");\r\n\r\n\t\tthis._dispatchChannel.request(\"view:rename\", {\r\n\t\t\toldName: oldName,\r\n\t\t\tnewName: newName,\r\n\t\t\tviewModel: viewModel\r\n\t\t});\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Determine if a new view can be added, based on current number of views and maximum views supported.\r\n\t *\r\n\t */\r\n\tcanAddView: function() {\r\n\t\treturn (this.models.length < config.max_views);\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Add a new view.\r\n\t *\r\n\t * If a new view can be made, create one with a suitable name, add it to the collection, and return it.\r\n\t *\r\n\t */\r\n\tcreateNew: function() {\r\n\r\n\t\tif ( ! this.canAddView()) {\r\n\t\t\tconsole.error(\"Maximum number of views reached.\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar newView = new ViewModel();\r\n\t\tvar index = 0;\r\n\r\n\t\twhile (index <= config.max_views) {\r\n\t\t\tvar tryName = newView.get(\"name\") + index;\r\n\t\t\tif (this.findWhere({ \"name\": tryName })) {\r\n\t\t\t\tindex++;\r\n\t\t\t} else {\r\n\t\t\t\tnewView.set(\"name\", tryName);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.add(newView);\r\n\t\treturn newView;\r\n\t}\r\n\r\n\r\n});\r\n\r\n\r\nmodule.exports = ViewCollection;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar Bb = __webpack_require__(2);\r\n\r\n\r\nvar ViewModel = Bb.Model.extend({\r\n\r\n\tidAttribute: \"name\",\r\n\r\n\tdefaults: {\r\n\t\tname: \"view\"\r\n\t},\r\n\r\n\tvalidate: function(attributes, options) {\r\n\r\n\t\t// Ensure the new view name is unique.\r\n\t\t// Search our collection for other views with the new desired name.\r\n\r\n\t\tvar existing = false,\r\n\t\t\tmyId = this.cid,\r\n\t\t\tmyName = attributes.name;\r\n\r\n\t\tvar existing = this.collection.find(function(viewModel) {\r\n\t\t\treturn viewModel.get(\"name\") == myName && myId != viewModel.cid;\r\n\t\t});\r\n\r\n\t\tif (existing !== undefined) {\r\n\t\t\treturn \"There is another view already using the name \" + existing.get(\"name\");\r\n\t\t}\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = ViewModel;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar Bb = __webpack_require__(2),\r\n\tRadio = __webpack_require__(0),\r\n\tCommon = __webpack_require__(6),\r\n\tEventModel = __webpack_require__(20);\r\n\r\n\r\nvar EventCollection = Bb.Collection.extend({\r\n\r\n\tmodel: EventModel,\r\n\r\n\t_dispatchChannel: null,\r\n\tselectedEvent: null,\r\n\r\n\tinitialize: function() {\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Update the \"index\" property of each event based on their position in the collection.\r\n\t *\r\n\t */\r\n\tupdateIndexes: function() {\r\n\r\n\t\tconsole.log(\"EventCollection | updateIndexes\");\r\n\r\n\t\tthis.each(function(eventModel, index) {\r\n\t\t\t// silent, to ensure the \"change\" handler doesn't fire a million times.\r\n\t\t\teventModel.set({ \"index\": index }, { silent: true });\r\n\t\t});\r\n\r\n\t\tthis.trigger(\"update:indexes\");\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Handle the selection of an event.\r\n\t *\r\n\t */\r\n\tselectEvent: function(eventModel) {\r\n\r\n\t\t// Keep copy of currently selected event\r\n\t\tthis.selectedEvent = eventModel;\r\n\r\n\t\t// Loop through the models, and if the model is the parameter (selected model) then trigger the select event.\r\n\t\t// For now, only the views are interested in this - to indicate the selected state.\r\n\t\tthis.each(function(model) {\r\n\t\t\tif (model == eventModel) {\r\n\t\t\t\tmodel.trigger(\"select\");\r\n\t\t\t} else {\r\n\t\t\t\tmodel.trigger(\"deselect\");\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Get an array that represents the \"startevent\"\r\n\t *\r\n\t */\r\n\tgetStartEvent: function(peviews, groupName) {\r\n\r\n\t\tvar pestate = {\r\n\t\t\tname: \"startevent\",\r\n\t\t\tindex: 0,\r\n\t\t\tid: Common.uniqueId(),\r\n\t\t\tactiontype: \"Eventlist\",\r\n\t\t\tpeviews: peviews,\r\n\t\t\tgroup: groupName\r\n\t\t};\r\n\r\n\t\tif (peviews == null) {\r\n\t\t\t// CR@CDS: It seems that peviews is never null.\r\n\t\t\tconsole.warn(\"createStartEvent: peviews is null!\");\r\n\t\t}\r\n\r\n\t\treturn pestate;\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Add a new viewModel to each event model in this collection.\r\n\t *\r\n\t */\r\n\taddView: function(viewModel) {\r\n\r\n\t\tconsole.log(\"EventCollection | addView | Adding \" + viewModel.get(\"name\") + \" to events...\");\r\n\r\n\t\tthis.each(function(eventModel) {\r\n\t\t\teventModel.addView(viewModel);\r\n\t\t});\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Handle the renaming of a view.\r\n\t * In each event, find the view that has the name of `oldName` and change to `newName`.\r\n\t *\r\n\t */\r\n\trenameView: function(oldName, newName) {\r\n\r\n\t\tif (oldName == newName) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconsole.log(\"EventCollection | renameView | Renaming view \" + oldName + \" -> \" + newName + \" on all events...\");\r\n\r\n\t\tthis.each(function(eventModel) {\r\n\t\t\teventModel.renameView(oldName, newName);\r\n\t\t});\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Handle the renaming of a group.\r\n\t * In each event model, if the `group` attr matches `oldName`, set to `newName`.\r\n\t *\r\n\t */\r\n\trenameGroup: function(oldName, newName) {\r\n\r\n\t\tif (oldName == newName) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconsole.log(\"EventCollection | renameGroup | Renaming group \" + oldName + \" -> \" + newName + \" on all events...\");\r\n\r\n\t\tthis.each(function(eventModel) {\r\n\t\t\teventModel.renameGroup(oldName, newName);\r\n\t\t});\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Handle the deletion of a view.\r\n\t * In each event model in this collection, remove the view object from \"peviews\" where the viewstate name matches the viewModel's name.\r\n\t *\r\n\t */\r\n\tdeleteView: function(viewModel) {\r\n\r\n\t\tconsole.log(\"EventCollection | deleteView | Removing \" + viewModel.get(\"name\") + \" from events...\");\r\n\r\n\t\tthis.each(function(eventModel) {\r\n\t\t\teventModel.deleteView(viewModel.get(\"name\"));\r\n\t\t});\r\n\t},\r\n\r\n\r\n\tcreateNew: function(attrs) {\r\n\r\n\t\tvar addOptions = {},\r\n\t\t\tstoreChannel = Radio.channel(\"store\"),\r\n\t\t\tviewCollection = storeChannel.request(\"viewCollection\");\r\n\r\n\t\tattrs = attrs || {};\r\n\t\tattrs.id = Common.uniqueId();\r\n\r\n\t\tvar peviews = [];\r\n\r\n\t\t// Get views\r\n\t\tviewCollection.each(function(viewModel) {\r\n\t\t\tpeviews.push({\r\n\t\t\t\tid: Common.uniqueId(),\r\n\t\t\t\tparentid: attrs.id,\r\n\t\t\t\tviewstate: viewModel.attributes,\r\n\t\t\t\tlayerid: \"none\",\r\n\t\t\t\tlayername: \"none\",\r\n\t\t\t\tactions: []\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tattrs.peviews = peviews;\r\n\r\n\t\tif (this.selectedEvent) {\r\n\t\t\taddOptions.at = this.indexOf(this.selectedEvent) + 1;\r\n\t\t}\r\n\r\n\t\tvar newEvent = new EventModel(attrs);\r\n\t\tnewEvent.set(\"name\", newEvent.get(\"name\") + newEvent.get(\"id\"));\r\n\r\n\t\tthis.add(newEvent, addOptions);\r\n\t\treturn newEvent;\r\n\t}\r\n\r\n\r\n});\r\n\r\n\r\nmodule.exports = EventCollection;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar _ = __webpack_require__(7),\r\n\tBb = __webpack_require__(2),\r\n\tCommon = __webpack_require__(6);\r\n\r\n\r\nvar EventModel = Bb.Model.extend({\r\n\r\n\tidAttribute: \"id\",\r\n\r\n\tdefaults: {\r\n\t\tactiontype: \"Eventlist\",\r\n\t\tid: null,\r\n\t\tindex: 0,\r\n\t\tname: \"event\",\r\n\t\tpeviews: [],\r\n\t\tgroup: \"default\"\r\n\t},\r\n\r\n\tvalidate: function(attributes, options) {\r\n\t\tif (attributes.name === \"startevent\") {\r\n\t\t\treturn \"It is not possible to use the name 'startevent' in other events.\";\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Get the \"peviews\" data - layer, view, and actions - for a given view name.\r\n\t * If nothing found, _.head will return `undefined`.\r\n\t *\r\n\t */\r\n\tgetViewData: function(viewName) {\r\n\t\tvar screens = _.filter(this.get(\"peviews\"), function(viewObj) {\r\n\t\t\treturn (viewObj.viewstate.name == viewName);\r\n\t\t});\r\n\t\treturn _.head(screens);\r\n\t},\r\n\r\n\taddView: function(viewModel) {\r\n\r\n\t\tvar peviews = this.get(\"peviews\"),\r\n\t\t\tview = {};\r\n\r\n\t\tif (this.get(\"name\") == \"startevent\") {\r\n\t\t\tview = {\r\n\t\t\t\tviewstate: viewModel.attributes,\r\n\t\t\t\tlayerid: \"none\",\r\n\t\t\t\tlayername: \"none\"\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tview = {\r\n\t\t\t\tid: Common.uniqueId(),\r\n\t\t\t\tviewstate: viewModel.attributes,\r\n\t\t\t\tlayerid: \"none\",\r\n\t\t\t\tlayername: \"none\",\r\n\t\t\t\tactions: []\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tpeviews.push(view);\r\n\t\tthis.set(\"peviews\", peviews);\r\n\t},\r\n\r\n\trenameView: function(oldName, newName) {\r\n\r\n\t\tvar peviews = this.get(\"peviews\");\r\n\r\n\t\t_.each(peviews, function(item, idx) {\r\n\t\t\tif (peviews[idx].viewstate.name == oldName) {\r\n\t\t\t\tpeviews[idx].viewstate.name = newName;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.set(\"peviews\", peviews);\r\n\t},\r\n\r\n\trenameGroup: function(oldName, newName) {\r\n\t\tif (this.get(\"group\") == oldName) {\r\n\t\t\tthis.set(\"group\", newName);\r\n\t\t}\r\n\t},\r\n\r\n\tdeleteView: function(viewName) {\r\n\r\n\t\t// Get copy of our peviews\r\n\t\tvar peviews = this.get(\"peviews\"),\r\n\t\t\tmatchingIdx = null;\r\n\r\n\t\t_.each(peviews, function(item, idx) {\r\n\t\t\tif (item.viewstate.name == viewName) {\r\n\t\t\t\tmatchingIdx = idx;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (matchingIdx !== null) {\r\n\t\t\t// console.log(\"Removing array index \" + matchingIdx + \" for \" + viewName);\r\n\t\t\t// Remove the view data at the found index\r\n\t\t\tpeviews.splice(matchingIdx, 1);\r\n\t\t\tthis.set(\"peviews\", peviews);\r\n\t\t} else {\r\n\t\t\t// Can't find the view in this model's data matching the viewName\r\n\t\t\t// console.log(\"matchingIdx is still null\");\r\n\t\t}\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = EventModel;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar Bb = __webpack_require__(2);\r\n\r\n\r\nvar ProjectModel = Bb.Model.extend({\r\n\r\n\tdefaults: {\r\n\t\tcreatedate: null,\r\n\t\tcreator: null,\r\n\t\tid: null,\r\n\t\tlastdate: null,\r\n\t\tname: null,\r\n\t\tscreenheight: null,\r\n\t\tscreenwidth: null,\r\n\t\ttype: \"Project\",\r\n\t\tstatus: null\r\n\t},\r\n\r\n\tgetName: function() {\r\n\r\n\t\tvar out = \"\";\r\n\r\n\t\tswitch (this.get(\"status\")) {\r\n\t\t\tcase \"newready\":\r\n\t\t\t\tout = \"(New) \" + this.get(\"name\");\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"openready\":\r\n\t\t\t\tout = this.get(\"name\");\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tout = \"(Not ready)\";\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = ProjectModel;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar _ = __webpack_require__(7),\r\n\t$ = __webpack_require__(4),\r\n\tMn = __webpack_require__(1),\r\n\tRadio = __webpack_require__(0),\r\n\tvex = __webpack_require__(24),\r\n\tsortable = __webpack_require__(9),\r\n\tconfig = __webpack_require__(3),\r\n\tScreensView = __webpack_require__(25),\r\n\tGroupListView = __webpack_require__(26),\r\n\tViewEditView = __webpack_require__(35),\r\n\tGroupEditView = __webpack_require__(37),\r\n\tEventEditView = __webpack_require__(39),\r\n\tPresentView = __webpack_require__(42),\r\n\tmainTmpl = __webpack_require__(44);\r\n\r\nvex.registerPlugin(__webpack_require__(45));\r\nvex.defaultOptions.className = 'vex-theme-livinglab';\r\n\r\n\r\nvar PresentAppView = Mn.View.extend({\r\n\r\n\ttagName: \"div\",\r\n\tclassName: \"wrapper pure-g\",\r\n\ttemplate: mainTmpl,\r\n\r\n\t_appChannel: null,\r\n\t_dataChannel: null,\r\n\t_storeChannel: null,\r\n\r\n\tregions: {\r\n\t\t\"screens\": \"[data-region=screens]\",\r\n\t\t\"groups\": \"[data-region=groups]\",\r\n\t\t\"props\": \"[data-region=props]\",\r\n\t\t\"present\": \"[data-region=present]\"\r\n\t},\r\n\r\n\tui: {\r\n\t\t\"project_name\": \"[data-ui=project_name]\",\r\n\t\t\"btn_groups_toggle\": \"[data-ui=btn_groups_toggle]\",\r\n\t\t\"btn_add_group\": \"[data-ui=btn_add_group]\"\r\n\t},\r\n\r\n\tevents: {\r\n\t\t\"click @ui.btn_groups_toggle\": \"handleGroupsToggle\",\r\n\t\t\"click @ui.btn_add_group\": \"handleAddGroup\"\r\n\t},\r\n\r\n\tinitialize: function() {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tthis._appChannel = Radio.channel(\"app\");\r\n\t\tthis._dataChannel = Radio.channel(\"data\");\r\n\t\tthis._storeChannel = Radio.channel(\"store\");\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\r\n\t\t// Get reference to project model so we can update the title.\r\n\t\tthis.projectModel = this._storeChannel.request(\"projectModel\");\r\n\t\tthis.listenTo(this.projectModel, \"change\", function(projectModel) {\r\n\t\t\tself.ui.project_name.text(projectModel.getName());\r\n\t\t});\r\n\r\n\t\t// Show error dialogs when they occur\r\n\t\tthis._appChannel.reply(\"ui:error\", function(data) {\r\n\t\t\tvar buttons = _.extend({}, vex.dialog.buttons);\r\n\t\t\tbuttons.YES.text = \"OK\";\r\n\t\t\tvex.dialog.alert({\r\n\t\t\t\tbuttons: [ buttons.YES ],\r\n\t\t\t\tcontentClassName: \"vex-type-error\",\r\n\t\t\t\tmessage: \"Error: \" + data.message\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.listenTo(this._appChannel, \"view:edit\", function(data) {\r\n\t\t\tself.showChildView(\"props\", new ViewEditView({\r\n\t\t\t\tmodel: data.view\r\n\t\t\t}));\r\n\t\t});\r\n\r\n\t\tthis.listenTo(this._appChannel, \"group:edit\", function(data) {\r\n\t\t\tself.showChildView(\"props\", new GroupEditView({\r\n\t\t\t\tmodel: data.group\r\n\t\t\t}));\r\n\t\t});\r\n\r\n\t\tthis.listenTo(this._appChannel, \"event:edit\", function(data) {\r\n\t\t\tself.showChildView(\"props\", new EventEditView({\r\n\t\t\t\tmodel: data.event\r\n\t\t\t}));\r\n\t\t});\r\n\r\n\t\tthis.listenTo(this._appChannel, \"group:confirm_delete\", this.confirmDeleteGroup);\r\n\t\tthis.listenTo(this._appChannel, \"event:confirm_delete\", this.confirmDeleteEvent);\r\n\r\n\t\tvar debounceSortables = _.debounce(this.reloadSortables, 100, { trailing: true });\r\n\t\tthis.listenTo(this._appChannel, \"ui:reload_sortables\", debounceSortables);\r\n\r\n\t\t$(document).on(\"keydown\", function(e) {\r\n\t\t\tif ($(e.target).is(\"input, textarea, select\")) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tswitch (e.which) {\r\n\t\t\t\tcase config.DOM_VK_J:\r\n\t\t\t\t\tself._dispatchChannel.request(\"event:next\");\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase config.DOM_VK_K:\r\n\t\t\t\t\tself._dispatchChannel.request(\"event:prev\");\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tonRender: function() {\r\n\r\n\t\tthis.showChildView(\"present\", new PresentView());\r\n\r\n\t\tthis.showChildView(\"screens\", new ScreensView({\r\n\t\t\tcollection: this._storeChannel.request(\"viewCollection\")\r\n\t\t}));\r\n\r\n\t\tthis.showChildView(\"groups\", new GroupListView({\r\n\t\t\tcollection: this._storeChannel.request(\"groupCollection\")\r\n\t\t}));\r\n\r\n\t\tthis.reloadSortables();\r\n\t},\r\n\r\n\treloadSortables: function() {\r\n\r\n\t\t// console.log(\"present_app_view | reloadSortables\");\r\n\r\n\t\tsortable(\".event-group-list\", \"destroy\");\r\n\t\tvar groupList = sortable(\".event-group-list\", {\r\n\t\t\titems: \".event-group-item\",\r\n\t\t\tplaceholderClass: \"event-group-item sortable-ghost\",\r\n\t\t\tconnectWith: \"groups\",\r\n\t\t});\r\n\r\n\t\tsortable(\".js-event-list\", \"destroy\");\r\n\t\tvar eventList = sortable(\".js-event-list\", {\r\n\t\t\titems: \".event-item\",\r\n\t\t\tconnectWith: \"events\",\r\n\t\t\tplaceholderClass: \"event-item sortable-ghost\"\r\n\t\t});\r\n\r\n\t},\r\n\r\n\thandleGroupsToggle: function(event) {\r\n\t\tvar $el = $(event.target),\r\n\t\t\taction = $el.data(\"action\");\r\n\r\n\t\tthis._appChannel.trigger(\"group:active\", {\r\n\t\t\taction: action\r\n\t\t});\r\n\t},\r\n\r\n\thandleAddGroup: function() {\r\n\t\tthis._dispatchChannel.request(\"group:add\");\r\n\t},\r\n\r\n\tconfirmDeleteGroup: function(data) {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tvar buttons = _.extend({}, vex.dialog.buttons);\r\n\t\tbuttons.YES.text = \"Yes, delete\";\r\n\t\tbuttons.NO.text = \"Cancel\";\r\n\r\n\t\tvex.dialog.confirm({\r\n\t\t\tmessage: 'Are you sure you want to delete this event group? All events inside it will also be deleted!',\r\n\t\t\tbuttons: [ buttons.YES, buttons.NO ],\r\n\t\t\tcallback: function (value) {\r\n\t\t\t\tif (value) {\r\n\t\t\t\t\tself._dispatchChannel.request(\"group:delete\", {\r\n\t\t\t\t\t\tgroup: data.group\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// alert(\"DELETE\");\r\n\t\t\t\t\t// data.group.trigger('destroy', data.group);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\r\n\tconfirmDeleteEvent: function(data) {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tvar buttons = _.extend({}, vex.dialog.buttons);\r\n\t\tbuttons.YES.text = \"Yes, delete\";\r\n\t\tbuttons.NO.text = \"Cancel\";\r\n\r\n\t\tvex.dialog.confirm({\r\n\t\t\tmessage: 'Are you sure you want to delete this event?',\r\n\t\t\tbuttons: [ buttons.YES, buttons.NO ],\r\n\t\t\tcallback: function (value) {\r\n\t\t\t\tif (value) {\r\n\t\t\t\t\tself._dispatchChannel.request(\"event:delete\", {\r\n\t\t\t\t\t\tevent: data.event\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = PresentAppView;\r\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar require;var require;(function(f){if(true){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.vex = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/*\n * classList.js: Cross-browser full element.classList implementation.\n * 2014-07-23\n *\n * By Eli Grey, http://eligrey.com\n * Public Domain.\n * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n */\n\n/*global self, document, DOMException */\n\n/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js*/\n\n/* Copied from MDN:\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/classList\n */\n\nif (\"document\" in window.self) {\n\n  // Full polyfill for browsers with no classList support\n  // Including IE < Edge missing SVGElement.classList\n  if (!(\"classList\" in document.createElement(\"_\"))\n    || document.createElementNS && !(\"classList\" in document.createElementNS(\"http://www.w3.org/2000/svg\",\"g\"))) {\n\n  (function (view) {\n\n    \"use strict\";\n\n    if (!('Element' in view)) return;\n\n    var\n        classListProp = \"classList\"\n      , protoProp = \"prototype\"\n      , elemCtrProto = view.Element[protoProp]\n      , objCtr = Object\n      , strTrim = String[protoProp].trim || function () {\n        return this.replace(/^\\s+|\\s+$/g, \"\");\n      }\n      , arrIndexOf = Array[protoProp].indexOf || function (item) {\n        var\n            i = 0\n          , len = this.length\n        ;\n        for (; i < len; i++) {\n          if (i in this && this[i] === item) {\n            return i;\n          }\n        }\n        return -1;\n      }\n      // Vendors: please allow content code to instantiate DOMExceptions\n      , DOMEx = function (type, message) {\n        this.name = type;\n        this.code = DOMException[type];\n        this.message = message;\n      }\n      , checkTokenAndGetIndex = function (classList, token) {\n        if (token === \"\") {\n          throw new DOMEx(\n              \"SYNTAX_ERR\"\n            , \"An invalid or illegal string was specified\"\n          );\n        }\n        if (/\\s/.test(token)) {\n          throw new DOMEx(\n              \"INVALID_CHARACTER_ERR\"\n            , \"String contains an invalid character\"\n          );\n        }\n        return arrIndexOf.call(classList, token);\n      }\n      , ClassList = function (elem) {\n        var\n            trimmedClasses = strTrim.call(elem.getAttribute(\"class\") || \"\")\n          , classes = trimmedClasses ? trimmedClasses.split(/\\s+/) : []\n          , i = 0\n          , len = classes.length\n        ;\n        for (; i < len; i++) {\n          this.push(classes[i]);\n        }\n        this._updateClassName = function () {\n          elem.setAttribute(\"class\", this.toString());\n        };\n      }\n      , classListProto = ClassList[protoProp] = []\n      , classListGetter = function () {\n        return new ClassList(this);\n      }\n    ;\n    // Most DOMException implementations don't allow calling DOMException's toString()\n    // on non-DOMExceptions. Error's toString() is sufficient here.\n    DOMEx[protoProp] = Error[protoProp];\n    classListProto.item = function (i) {\n      return this[i] || null;\n    };\n    classListProto.contains = function (token) {\n      token += \"\";\n      return checkTokenAndGetIndex(this, token) !== -1;\n    };\n    classListProto.add = function () {\n      var\n          tokens = arguments\n        , i = 0\n        , l = tokens.length\n        , token\n        , updated = false\n      ;\n      do {\n        token = tokens[i] + \"\";\n        if (checkTokenAndGetIndex(this, token) === -1) {\n          this.push(token);\n          updated = true;\n        }\n      }\n      while (++i < l);\n\n      if (updated) {\n        this._updateClassName();\n      }\n    };\n    classListProto.remove = function () {\n      var\n          tokens = arguments\n        , i = 0\n        , l = tokens.length\n        , token\n        , updated = false\n        , index\n      ;\n      do {\n        token = tokens[i] + \"\";\n        index = checkTokenAndGetIndex(this, token);\n        while (index !== -1) {\n          this.splice(index, 1);\n          updated = true;\n          index = checkTokenAndGetIndex(this, token);\n        }\n      }\n      while (++i < l);\n\n      if (updated) {\n        this._updateClassName();\n      }\n    };\n    classListProto.toggle = function (token, force) {\n      token += \"\";\n\n      var\n          result = this.contains(token)\n        , method = result ?\n          force !== true && \"remove\"\n        :\n          force !== false && \"add\"\n      ;\n\n      if (method) {\n        this[method](token);\n      }\n\n      if (force === true || force === false) {\n        return force;\n      } else {\n        return !result;\n      }\n    };\n    classListProto.toString = function () {\n      return this.join(\" \");\n    };\n\n    if (objCtr.defineProperty) {\n      var classListPropDesc = {\n          get: classListGetter\n        , enumerable: true\n        , configurable: true\n      };\n      try {\n        objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n      } catch (ex) { // IE 8 doesn't support enumerable:true\n        if (ex.number === -0x7FF5EC54) {\n          classListPropDesc.enumerable = false;\n          objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n        }\n      }\n    } else if (objCtr[protoProp].__defineGetter__) {\n      elemCtrProto.__defineGetter__(classListProp, classListGetter);\n    }\n\n    }(window.self));\n\n    } else {\n    // There is full or partial native classList support, so just check if we need\n    // to normalize the add/remove and toggle APIs.\n\n    (function () {\n      \"use strict\";\n\n      var testElement = document.createElement(\"_\");\n\n      testElement.classList.add(\"c1\", \"c2\");\n\n      // Polyfill for IE 10/11 and Firefox <26, where classList.add and\n      // classList.remove exist but support only one argument at a time.\n      if (!testElement.classList.contains(\"c2\")) {\n        var createMethod = function(method) {\n          var original = DOMTokenList.prototype[method];\n\n          DOMTokenList.prototype[method] = function(token) {\n            var i, len = arguments.length;\n\n            for (i = 0; i < len; i++) {\n              token = arguments[i];\n              original.call(this, token);\n            }\n          };\n        };\n        createMethod('add');\n        createMethod('remove');\n      }\n\n      testElement.classList.toggle(\"c3\", false);\n\n      // Polyfill for IE 10 and Firefox <24, where classList.toggle does not\n      // support the second argument.\n      if (testElement.classList.contains(\"c3\")) {\n        var _toggle = DOMTokenList.prototype.toggle;\n\n        DOMTokenList.prototype.toggle = function(token, force) {\n          if (1 in arguments && !this.contains(token) === !force) {\n            return force;\n          } else {\n            return _toggle.call(this, token);\n          }\n        };\n\n      }\n\n      testElement = null;\n    }());\n  }\n}\n\n},{}],2:[function(require,module,exports){\n\n/**\n * Expose `parse`.\n */\n\nmodule.exports = parse;\n\n/**\n * Tests for browser support.\n */\n\nvar innerHTMLBug = false;\nvar bugTestDiv;\nif (typeof document !== 'undefined') {\n  bugTestDiv = document.createElement('div');\n  // Setup\n  bugTestDiv.innerHTML = '  <link/><table></table><a href=\"/a\">a</a><input type=\"checkbox\"/>';\n  // Make sure that link elements get serialized correctly by innerHTML\n  // This requires a wrapper element in IE\n  innerHTMLBug = !bugTestDiv.getElementsByTagName('link').length;\n  bugTestDiv = undefined;\n}\n\n/**\n * Wrap map from jquery.\n */\n\nvar map = {\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  // for script/link/style tags to work in IE6-8, you have to wrap\n  // in a div with a non-whitespace character in front, ha!\n  _default: innerHTMLBug ? [1, 'X<div>', '</div>'] : [0, '', '']\n};\n\nmap.td =\nmap.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option =\nmap.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead =\nmap.tbody =\nmap.colgroup =\nmap.caption =\nmap.tfoot = [1, '<table>', '</table>'];\n\nmap.polyline =\nmap.ellipse =\nmap.polygon =\nmap.circle =\nmap.text =\nmap.line =\nmap.path =\nmap.rect =\nmap.g = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">','</svg>'];\n\n/**\n * Parse `html` and return a DOM Node instance, which could be a TextNode,\n * HTML DOM Node of some kind (<div> for example), or a DocumentFragment\n * instance, depending on the contents of the `html` string.\n *\n * @param {String} html - HTML string to \"domify\"\n * @param {Document} doc - The `document` instance to create the Node for\n * @return {DOMNode} the TextNode, DOM Node, or DocumentFragment instance\n * @api private\n */\n\nfunction parse(html, doc) {\n  if ('string' != typeof html) throw new TypeError('String expected');\n\n  // default to the global `document` object\n  if (!doc) doc = document;\n\n  // tag name\n  var m = /<([\\w:]+)/.exec(html);\n  if (!m) return doc.createTextNode(html);\n\n  html = html.replace(/^\\s+|\\s+$/g, ''); // Remove leading/trailing whitespace\n\n  var tag = m[1];\n\n  // body support\n  if (tag == 'body') {\n    var el = doc.createElement('html');\n    el.innerHTML = html;\n    return el.removeChild(el.lastChild);\n  }\n\n  // wrap map\n  var wrap = map[tag] || map._default;\n  var depth = wrap[0];\n  var prefix = wrap[1];\n  var suffix = wrap[2];\n  var el = doc.createElement('div');\n  el.innerHTML = prefix + html + suffix;\n  while (depth--) el = el.lastChild;\n\n  // one element\n  if (el.firstChild == el.lastChild) {\n    return el.removeChild(el.firstChild);\n  }\n\n  // several elements\n  var fragment = doc.createDocumentFragment();\n  while (el.firstChild) {\n    fragment.appendChild(el.removeChild(el.firstChild));\n  }\n\n  return fragment;\n}\n\n},{}],3:[function(require,module,exports){\n/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n\n},{}],4:[function(require,module,exports){\n// classList polyfill for old browsers\nrequire('classlist-polyfill')\n// Object.assign polyfill\nrequire('es6-object-assign').polyfill()\n\n// String to DOM function\nvar domify = require('domify')\n\n// Use the DOM's HTML parsing to escape any dangerous strings\nvar escapeHtml = function escapeHtml (str) {\n  if (typeof str !== 'undefined') {\n    var div = document.createElement('div')\n    div.appendChild(document.createTextNode(str))\n    return div.innerHTML\n  } else {\n    return ''\n  }\n}\n\n// Utility function to add space-delimited class strings to a DOM element's classList\nvar addClasses = function addClasses (el, classStr) {\n  if (typeof classStr !== 'string' || classStr.length === 0) {\n    return\n  }\n  var classes = classStr.split(' ')\n  for (var i = 0; i < classes.length; i++) {\n    var className = classes[i]\n    if (className.length) {\n      el.classList.add(className)\n    }\n  }\n}\n\n// Detect CSS Animation End Support\n// https://github.com/limonte/sweetalert2/blob/99bd539f85e15ac170f69d35001d12e092ef0054/src/utils/dom.js#L194\nvar animationEndEvent = (function detectAnimationEndEvent () {\n  var el = document.createElement('div')\n  var eventNames = {\n    'WebkitAnimation': 'webkitAnimationEnd',\n    'MozAnimation': 'animationend',\n    'OAnimation': 'oanimationend',\n    'msAnimation': 'MSAnimationEnd',\n    'animation': 'animationend'\n  }\n  for (var i in eventNames) {\n    if (el.style[i] !== undefined) {\n      return eventNames[i]\n    }\n  }\n  return false\n})()\n\n// vex base CSS classes\nvar baseClassNames = {\n  vex: 'vex',\n  content: 'vex-content',\n  overlay: 'vex-overlay',\n  close: 'vex-close',\n  closing: 'vex-closing',\n  open: 'vex-open'\n}\n\n// Private lookup table of all open vex objects, keyed by id\nvar vexes = {}\nvar globalId = 1\n\n// Private boolean to assist the escapeButtonCloses option\nvar isEscapeActive = false\n\n// vex itself is an object that exposes a simple API to open and close vex objects in various ways\nvar vex = {\n  open: function open (opts) {\n    // Check for usage of deprecated options, and log a warning\n    var warnDeprecated = function warnDeprecated (prop) {\n      console.warn('The \"' + prop + '\" property is deprecated in vex 3. Use CSS classes and the appropriate \"ClassName\" options, instead.')\n      console.warn('See http://github.hubspot.com/vex/api/advanced/#options')\n    }\n    if (opts.css) {\n      warnDeprecated('css')\n    }\n    if (opts.overlayCSS) {\n      warnDeprecated('overlayCSS')\n    }\n    if (opts.contentCSS) {\n      warnDeprecated('contentCSS')\n    }\n    if (opts.closeCSS) {\n      warnDeprecated('closeCSS')\n    }\n\n    // The dialog instance\n    var vexInstance = {}\n\n    // Set id\n    vexInstance.id = globalId++\n\n    // Store internally\n    vexes[vexInstance.id] = vexInstance\n\n    // Set state\n    vexInstance.isOpen = true\n\n    // Close function on the vex instance\n    // This is how all API functions should close individual vexes\n    vexInstance.close = function instanceClose () {\n      // Check state\n      if (!this.isOpen) {\n        return true\n      }\n\n      var options = this.options\n\n      // escapeButtonCloses is checked first\n      if (isEscapeActive && !options.escapeButtonCloses) {\n        return false\n      }\n\n      // Allow the user to validate any info or abort the close with the beforeClose callback\n      var shouldClose = (function shouldClose () {\n        // Call before close callback\n        if (options.beforeClose) {\n          return options.beforeClose.call(this)\n        }\n        // Otherwise indicate that it's ok to continue with close\n        return true\n      }.bind(this)())\n\n      // If beforeClose() fails, abort the close\n      if (shouldClose === false) {\n        return false\n      }\n\n      // Update state\n      this.isOpen = false\n\n      // Detect if the content el has any CSS animations defined\n      var style = window.getComputedStyle(this.contentEl)\n      function hasAnimationPre (prefix) {\n        return style.getPropertyValue(prefix + 'animation-name') !== 'none' && style.getPropertyValue(prefix + 'animation-duration') !== '0s'\n      }\n      var hasAnimation = hasAnimationPre('') || hasAnimationPre('-webkit-') || hasAnimationPre('-moz-') || hasAnimationPre('-o-')\n\n      // Define the function that will actually close the instance\n      var close = function close () {\n        if (!this.rootEl.parentNode) {\n          return\n        }\n        // Run once\n        this.rootEl.removeEventListener(animationEndEvent, close)\n        this.overlayEl.removeEventListener(animationEndEvent, close)\n        // Remove from lookup table (prevent memory leaks)\n        delete vexes[this.id]\n        // Remove the dialog from the DOM\n        this.rootEl.parentNode.removeChild(this.rootEl)\n        // Remove the overlay from the DOM\n        this.bodyEl.removeChild(this.overlayEl);\n        // Call after close callback\n        if (options.afterClose) {\n          options.afterClose.call(this)\n        }\n        // Remove styling from the body, if no more vexes are open\n        if (Object.keys(vexes).length === 0) {\n          document.body.classList.remove(baseClassNames.open)\n        }\n      }.bind(this)\n\n      // Close the vex\n      if (animationEndEvent && hasAnimation) {\n        // Setup the end event listener, to remove the el from the DOM\n        this.rootEl.addEventListener(animationEndEvent, close)\n        this.overlayEl.addEventListener(animationEndEvent, close)\n        // Add the closing class to the dialog, showing the close animation\n        this.rootEl.classList.add(baseClassNames.closing)\n        this.overlayEl.classList.add(baseClassNames.closing)\n      } else {\n        close()\n      }\n\n      return true\n    }\n\n    // Allow strings as content\n    if (typeof opts === 'string') {\n      opts = {\n        content: opts\n      }\n    }\n\n    // `content` is unsafe internally, so translate\n    // safe default: HTML-escape the content before passing it through\n    if (opts.unsafeContent && !opts.content) {\n      opts.content = opts.unsafeContent\n    } else if (opts.content) {\n      opts.content = escapeHtml(opts.content)\n    }\n\n    // Store options on instance for future reference\n    var options = vexInstance.options = Object.assign({}, vex.defaultOptions, opts)\n\n    // Get Body Element\n    var bodyEl = vexInstance.bodyEl = document.getElementsByTagName('body')[0];\n\n    // vex root\n    var rootEl = vexInstance.rootEl = document.createElement('div')\n    rootEl.classList.add(baseClassNames.vex)\n    addClasses(rootEl, options.className)\n\n    // Overlay\n    var overlayEl = vexInstance.overlayEl = document.createElement('div')\n    overlayEl.classList.add(baseClassNames.overlay)\n    addClasses(overlayEl, options.overlayClassName)\n    if (options.overlayClosesOnClick) {\n      rootEl.addEventListener('click', function overlayClickListener (e) {\n        if (e.target === rootEl) {\n          vexInstance.close()\n        }\n      })\n    }\n    bodyEl.appendChild(overlayEl)\n\n    // Content\n    var contentEl = vexInstance.contentEl = document.createElement('div')\n    contentEl.classList.add(baseClassNames.content)\n    addClasses(contentEl, options.contentClassName)\n    contentEl.appendChild(options.content instanceof window.Node ? options.content : domify(options.content))\n    rootEl.appendChild(contentEl)\n\n    // Close button\n    if (options.showCloseButton) {\n      var closeEl = vexInstance.closeEl = document.createElement('div')\n      closeEl.classList.add(baseClassNames.close)\n      addClasses(closeEl, options.closeClassName)\n      closeEl.addEventListener('click', vexInstance.close.bind(vexInstance))\n      contentEl.appendChild(closeEl)\n    }\n\n    // Add to DOM\n    document.querySelector(options.appendLocation).appendChild(rootEl)\n\n    // Call after open callback\n    if (options.afterOpen) {\n      options.afterOpen.call(vexInstance)\n    }\n\n    // Apply styling to the body\n    document.body.classList.add(baseClassNames.open)\n\n    // Return the created vex instance\n    return vexInstance\n  },\n\n  // A top-level vex.close function to close dialogs by reference or id\n  close: function close (vexOrId) {\n    var id\n    if (vexOrId.id) {\n      id = vexOrId.id\n    } else if (typeof vexOrId === 'string') {\n      id = vexOrId\n    } else {\n      throw new TypeError('close requires a vex object or id string')\n    }\n    if (!vexes[id]) {\n      return false\n    }\n    return vexes[id].close()\n  },\n\n  // Close the most recently created/opened vex\n  closeTop: function closeTop () {\n    var ids = Object.keys(vexes)\n    if (!ids.length) {\n      return false\n    }\n    return vexes[ids[ids.length - 1]].close()\n  },\n\n  // Close every vex!\n  closeAll: function closeAll () {\n    for (var id in vexes) {\n      this.close(id)\n    }\n    return true\n  },\n\n  // A getter for the internal lookup table\n  getAll: function getAll () {\n    return vexes\n  },\n\n  // A getter for the internal lookup table\n  getById: function getById (id) {\n    return vexes[id]\n  }\n}\n\n// Close top vex on escape\nwindow.addEventListener('keyup', function vexKeyupListener (e) {\n  if (e.keyCode === 27) {\n    isEscapeActive = true\n    vex.closeTop()\n    isEscapeActive = false\n  }\n})\n\n// Close all vexes on history pop state (useful in single page apps)\nwindow.addEventListener('popstate', function () {\n  if (vex.defaultOptions.closeAllOnPopState) {\n    vex.closeAll()\n  }\n})\n\nvex.defaultOptions = {\n  content: '',\n  showCloseButton: true,\n  escapeButtonCloses: true,\n  overlayClosesOnClick: true,\n  appendLocation: 'body',\n  className: '',\n  overlayClassName: '',\n  contentClassName: '',\n  closeClassName: '',\n  closeAllOnPopState: true\n}\n\n// TODO Loading symbols?\n\n// Include escapeHtml function on the library object\nObject.defineProperty(vex, '_escapeHtml', {\n  configurable: false,\n  enumerable: false,\n  writable: false,\n  value: escapeHtml\n})\n\n// Plugin system!\nvex.registerPlugin = function registerPlugin (pluginFn, name) {\n  var plugin = pluginFn(vex)\n  var pluginName = name || plugin.name\n  if (vex[pluginName]) {\n    throw new Error('Plugin ' + name + ' is already registered.')\n  }\n  vex[pluginName] = plugin\n}\n\nmodule.exports = vex\n\n},{\"classlist-polyfill\":1,\"domify\":2,\"es6-object-assign\":3}]},{},[4])(4)\n});\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar Mn = __webpack_require__(1),\r\n\tRadio = __webpack_require__(0);\r\n\r\n\r\nvar ScreenButton = Mn.View.extend({\r\n\ttagName: \"button\",\r\n\tclassName: \"pure-button button-hollow\",\r\n\ttemplate: _.template(\"<%= name %>\"),\r\n\ttriggers: {\r\n\t\t\"click\": \"view:edit\"\r\n\t},\r\n\tmodelEvents: {\r\n\t\t\"change\": \"render\"\r\n\t}\r\n});\r\n\r\n\r\nvar AddScreenButton = Mn.View.extend({\r\n\ttagName: \"button\",\r\n\tclassName: \"pure-button\",\r\n\ttemplate: _.template(\"<i class='fa fa-fw fa-desktop'></i> Add View\"),\r\n\ttriggers: {\r\n\t\t\"click\": \"view:add\"\r\n\t}\r\n});\r\n\r\n\r\nvar ScreensView = Mn.CollectionView.extend({\r\n\r\n\ttagName: \"div\",\r\n\tclassName: \"button-collection\",\r\n\tchildView: ScreenButton,\r\n\r\n\tchildViewEvents: {\r\n\t\t\"view:add\": \"addView\",\r\n\t\t\"view:edit\": \"editView\"\r\n\t},\r\n\r\n\t_dispatchChannel: null,\r\n\r\n\tinitialize: function() {\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t},\r\n\r\n\tonRender: function() {\r\n\t\t// Add the extra \"Add new screen\" button - doesn't need a model\r\n\t\tthis.addChildView((new AddScreenButton()), this.collection.length);\r\n\t},\r\n\r\n\taddView: function() {\r\n\t\tthis._dispatchChannel.request(\"view:add\");\r\n\t},\r\n\r\n\teditView: function(childView) {\r\n\t\tthis._dispatchChannel.request(\"view:edit\", {\r\n\t\t\tview: childView.model\r\n\t\t});\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = ScreensView;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar $ = __webpack_require__(4),\r\n\tMn = __webpack_require__(1),\r\n\tRadio = __webpack_require__(0),\r\n\tGroupItemView = __webpack_require__(27);\r\n\r\n\r\nvar GroupListView = Mn.CollectionView.extend({\r\n\r\n\ttagName: \"ul\",\r\n\tclassName: \"event-group-list\",\r\n\tchildView: GroupItemView,\r\n\ttemplate: _.noop,\r\n\r\n\tevents: {\r\n\t\t\"dom:refresh\": \"onDomRefresh\"\r\n\t},\r\n\r\n\tchildViewEvents: {\r\n\t\t\"group:toggle\": \"toggleGroup\",\r\n\t\t\"group:edit\": \"editGroup\",\r\n\t\t\"event:add\": \"addEvent\",\r\n\t\t\"attach\": \"onChildAttach\"\r\n\t},\r\n\r\n\t_appChannel: null,\r\n\t_dispatchChannel: null,\r\n\r\n\tinitialize: function(options) {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tthis._appChannel = Radio.channel(\"app\");\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t\tthis._viewCollection = options.views || null;\r\n\t\tthis.listenTo(this._appChannel, \"group:active\", this.handleActive);\r\n\r\n\t\tthis.$el.on(\"sortupdate\", function(e) {\r\n\t\t\tself._dispatchChannel.request(\"store:sort\", {\r\n\t\t\t\tlist: \"groups\",\r\n\t\t\t\tsortable: e.detail\r\n\t\t\t});\r\n\t\t});\r\n\t},\r\n\r\n\tonDomRefresh: function() {\r\n\t\tthis._appChannel.trigger(\"ui:reload_sortables\");\r\n\t},\r\n\r\n\tonChildAttach: function() {\r\n\t\tif (this.isAttached() && this.isRendered()) {\r\n\t\t\tthis._appChannel.trigger(\"ui:reload_sortables\");\r\n\t\t}\r\n\t},\r\n\r\n\ttoggleGroup: function(childView) {\r\n\t\tchildView.toggleActive();\r\n\t},\r\n\r\n\teditGroup: function(childView) {\r\n\t\tthis._dispatchChannel.request(\"group:edit\", { group: childView.model });\r\n\t},\r\n\r\n\taddEvent: function(childView) {\r\n\t\tthis._dispatchChannel.request(\"event:add\", { group: childView.model });\r\n\t},\r\n\r\n\thandleActive: function(data) {\r\n\r\n\t\tif (data && data.action && data.target === undefined) {\r\n\r\n\t\t\t// Loop through all children and set as active/inactive\r\n\t\t\tthis.children.each(function(child) {\r\n\t\t\t\tswitch (data.action) {\r\n\t\t\t\t\tcase \"expand\": child.setActive(); break;\r\n\t\t\t\t\tcase \"collapse\": child.setInactive(); break;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = GroupListView;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar Mn = __webpack_require__(1),\r\n\tRadio = __webpack_require__(0),\r\n\tconfig = __webpack_require__(3),\r\n\tEventListView = __webpack_require__(28),\r\n\tmainTmpl = __webpack_require__(33),\r\n\theaderTmpl = __webpack_require__(34);\r\n\r\n\r\n/**\r\n * ScreenView item\r\n *\r\n */\r\nvar EventHeaderScreenView = Mn.View.extend({\r\n\ttagName: \"div\",\r\n\ttemplate: _.template(\"<strong><%- name %></strong>\"),\r\n\tclassName: function() {\r\n\t\treturn \"pure-u-1 pure-u-md-1-\" + config.max_views;\r\n\t},\r\n\tmodelEvents: {\r\n\t\t\"change\": \"render\"\r\n\t}\r\n});\r\n\r\n\r\n/**\r\n * View area in the EventHeaderView that manages the list of screens\r\n *\r\n */\r\nvar EventHeaderScreensView = Mn.CollectionView.extend({\r\n\ttagName: \"div\",\r\n\tclassName: \"pure-g\",\r\n\tchildView: EventHeaderScreenView,\r\n\ttemplate: _.noop()\r\n});\r\n\r\n\r\n/**\r\n * Header row for the events list.\r\n * Adds the view info\r\n *\r\n */\r\nvar EventHeaderView = Mn.View.extend({\r\n\r\n\ttagName: \"li\",\r\n\tclassName: \"event-header\",\r\n\ttemplate: headerTmpl,\r\n\r\n\tregions: {\r\n\t\t\"views\": \"[data-region=views]\"\r\n\t},\r\n\r\n\tinitialize: function() {\r\n\t\tvar self = this;\r\n\t\tthis._storeChannel = Radio.channel(\"store\");\r\n\t},\r\n\r\n\tonRender: function() {\r\n\t\tthis.showChildView(\"views\", new EventHeaderScreensView({\r\n\t\t\tcollection: this._storeChannel.request(\"viewCollection\")\r\n\t\t}));\r\n\t}\r\n\r\n});\r\n\r\n\r\nvar GroupItemView = Mn.View.extend({\r\n\r\n\ttagName: \"li\",\r\n\tclassName: \"event-group-item\",\r\n\ttemplate: mainTmpl,\r\n\r\n\tregions: {\r\n\t\t\"header\": \"[data-region=header]\",\r\n\t\t\"events\": \"[data-region=events]\"\r\n\t},\r\n\r\n\tui: {\r\n\t\t\"event_count\": \"[data-ui=event_count]\",\r\n\t\t\"group_name\": \"[data-ui=group_name]\",\r\n\t\t\"btn_edit\": \"[data-ui=btn_edit]\",\r\n\t\t\"btn_add_event\": \"[data-ui=btn_add_event]\"\r\n\t},\r\n\r\n\ttriggers: {\r\n\t\t\"click .event-group-item-header\": \"group:toggle\",\r\n\t\t\"click @ui.btn_edit\": \"group:edit\",\r\n\t\t\"click @ui.btn_add_event\": \"event:add\"\r\n\t},\r\n\r\n\tmodelEvents: {\r\n\t\t\"change\": \"updateUi\"\r\n\t},\r\n\r\n\tinitialize: function() {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tthis._storeChannel = Radio.channel(\"store\");\r\n\r\n\t\tthis.eventListView = new EventListView({\r\n\t\t\t// pass in the whole event collection\r\n\t\t\tcollection: this._storeChannel.request(\"eventCollection\"),\r\n\t\t\t// pass this group model into the list so it knows how to filter the global event colleciton\r\n\t\t\tgroup: this.model\r\n\t\t});\r\n\r\n\t\tvar debounceUpdateUi = _.debounce(this.updateUi, 100, { trailing: true });\r\n\t\tthis.listenTo(this.eventListView, \"add:child remove:child\", debounceUpdateUi);\r\n\r\n\t\tthis.listenTo(this.eventListView.collection, \"update:indexes\", function() {\r\n\t\t\tself.eventListView.reorder();\r\n\t\t\tself.updateUi();\r\n\t\t});\r\n\t},\r\n\r\n\tonRender: function() {\r\n\t\t// console.log(\"GroupItemView | render\");\r\n\t\tthis.$el.attr(\"data-group-model-cid\", this.model.cid);\r\n\t\tthis.showChildView(\"header\", new EventHeaderView());\r\n\t\tthis.showChildView(\"events\", this.eventListView);\r\n\t\tthis.updateUi();\r\n\t},\r\n\r\n\tupdateUi: function() {\r\n\t\t// console.log(\"GroupItemView | updateUi\");\r\n\t\tthis.ui.group_name.text(_.escape(this.model.get(\"name\")));\r\n\t\tthis.ui.event_count.text(this.eventListView.children.length);\r\n\t},\r\n\r\n\tsetActive: function() {\r\n\t\tthis.$el.addClass(\"is-active\");\r\n\t},\r\n\r\n\tsetInactive: function() {\r\n\t\tthis.$el.removeClass(\"is-active\");\r\n\t},\r\n\r\n\ttoggleActive: function() {\r\n\t\tthis.$el.toggleClass(\"is-active\");\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = GroupItemView;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar Mn = __webpack_require__(1),\r\n\t$ = __webpack_require__(4),\r\n\tRadio = __webpack_require__(0),\r\n\tSortable = __webpack_require__(29),\r\n\tEventItemView = __webpack_require__(30);\r\n\r\n\r\nvar EmptyItemView = Mn.View.extend({\r\n\ttagName: \"li\",\r\n\tclassName: \"event-item event-item-empty\",\r\n\ttemplate: _.template(\"<p class='text-centre'>No events yet! Drag events here from other groups or click Add Event button above.</p>\"),\r\n});\r\n\r\n\r\n/**\r\n * Main list view for all events.\r\n * Parent view of this should be group item view.\r\n *\r\n */\r\nvar EventListView = Mn.CollectionView.extend({\r\n\r\n\ttagName: \"ul\",\r\n\tclassName: \"event-list js-event-list\",\r\n\tchildView: EventItemView,\r\n\ttemplate: _.noop,\r\n\r\n\tchildViewEvents: {\r\n\t\t\"event:play\": \"playEvent\",\r\n\t\t\"event:start\": \"startEvent\",\r\n\t\t\"event:select\": \"selectEvent\",\r\n\t\t\"attach\": \"onChildAttach\"\r\n\t},\r\n\r\n\t_appChannel: null,\r\n\t_dispatchChannel: null,\r\n\t// _storeChannel: null,\r\n\r\n\tinitialize: function(options) {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tthis._appChannel = Radio.channel(\"app\");\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\r\n\t\tthis.group = options.group;\r\n\t\tthis.listenTo(this.group, \"change\", function(groupModel) {\r\n\t\t\t// console.log(\"EventListView | group change\");\r\n\t\t\tself.$el.attr(\"data-group-model-cid\", groupModel.cid);\r\n\t\t});\r\n\r\n\t\tthis.$el.on(\"sortupdate\", function(e) {\r\n\t\t\tvar groupCid = $(e.detail.endparent).data(\"group-model-cid\"),\r\n\t\t\t\tthisGroupCid = self.group.cid;\r\n\r\n\t\t\tif (groupCid == thisGroupCid) {\r\n\t\t\t\tself._dispatchChannel.request(\"store:sort\", {\r\n\t\t\t\t\tlist: \"events\",\r\n\t\t\t\t\tsortable: e.detail\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tonDomRefresh: function() {\r\n\t\t// console.log(\"EventListView | onDomRefresh\");\r\n\t\tthis._appChannel.trigger(\"ui:reload_sortables\");\r\n\t},\r\n\r\n\tonChildAttach: function() {\r\n\t\t// console.log(\"EventListView | onChildAttach\");\r\n\t\tif (this.isAttached() && this.isRendered()) {\r\n\t\t\tthis._appChannel.trigger(\"ui:reload_sortables\");\r\n\t\t}\r\n\t},\r\n\r\n\tonRender: function() {\r\n\t\t// console.log(\"EventListView onRender\");\r\n\t\tthis.$el.attr(\"data-group-model-cid\", this.group.cid);\r\n\t},\r\n\r\n\t/**\r\n\t * Ensure that only the events for the group that this list is part of is rendered\r\n\t *\r\n\t */\r\n\tfilter: function(model, index, collection) {\r\n\t\treturn (model.get(\"group\") == this.group.get(\"name\"));\r\n\t},\r\n\r\n\t/**\r\n\t * Return the number of children that match the filter.\r\n\t * Minus 1 for the \"header\" child view\r\n\t *\r\n\t */\r\n\tgetChildViewCount: function() {\r\n\t\treturn this.children.length;\r\n\t},\r\n\r\n\tstartEvent: function(childView) {\r\n\t\tthis._dispatchChannel.request(\"event:start\", { event: childView.model });\r\n\t},\r\n\r\n\tplayEvent: function(childView) {\r\n\t\tthis._dispatchChannel.request(\"event:play\", { event: childView.model });\r\n\t},\r\n\r\n\tselectEvent: function(childView) {\r\n\t\tthis._dispatchChannel.request(\"event:select\", { event: childView.model });\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = EventListView;\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**!\n * Sortable\n * @author\tRubaXa   <trash@rubaxa.org>\n * @license MIT\n */\n\n(function sortableModule(factory) {\n\t\"use strict\";\n\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\n\telse if (typeof module != \"undefined\" && typeof module.exports != \"undefined\") {\n\t\tmodule.exports = factory();\n\t}\n\telse {\n\t\t/* jshint sub:true */\n\t\twindow[\"Sortable\"] = factory();\n\t}\n})(function sortableFactory() {\n\t\"use strict\";\n\n\tif (typeof window == \"undefined\" || !window.document) {\n\t\treturn function sortableError() {\n\t\t\tthrow new Error(\"Sortable.js requires a window with a document\");\n\t\t};\n\t}\n\n\tvar dragEl,\n\t\tparentEl,\n\t\tghostEl,\n\t\tcloneEl,\n\t\trootEl,\n\t\tnextEl,\n\t\tlastDownEl,\n\n\t\tscrollEl,\n\t\tscrollParentEl,\n\t\tscrollCustomFn,\n\n\t\tlastEl,\n\t\tlastCSS,\n\t\tlastParentCSS,\n\n\t\toldIndex,\n\t\tnewIndex,\n\n\t\tactiveGroup,\n\t\tputSortable,\n\n\t\tautoScroll = {},\n\n\t\ttapEvt,\n\t\ttouchEvt,\n\n\t\tmoved,\n\n\t\t/** @const */\n\t\tR_SPACE = /\\s+/g,\n\t\tR_FLOAT = /left|right|inline/,\n\n\t\texpando = 'Sortable' + (new Date).getTime(),\n\n\t\twin = window,\n\t\tdocument = win.document,\n\t\tparseInt = win.parseInt,\n\n\t\t$ = win.jQuery || win.Zepto,\n\t\tPolymer = win.Polymer,\n\n\t\tcaptureMode = false,\n\n\t\tsupportDraggable = !!('draggable' in document.createElement('div')),\n\t\tsupportCssPointerEvents = (function (el) {\n\t\t\t// false when IE11\n\t\t\tif (!!navigator.userAgent.match(/Trident.*rv[ :]?11\\./)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tel = document.createElement('x');\n\t\t\tel.style.cssText = 'pointer-events:auto';\n\t\t\treturn el.style.pointerEvents === 'auto';\n\t\t})(),\n\n\t\t_silent = false,\n\n\t\tabs = Math.abs,\n\t\tmin = Math.min,\n\n\t\tsavedInputChecked = [],\n\t\ttouchDragOverListeners = [],\n\n\t\t_autoScroll = _throttle(function (/**Event*/evt, /**Object*/options, /**HTMLElement*/rootEl) {\n\t\t\t// Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n\t\t\tif (rootEl && options.scroll) {\n\t\t\t\tvar _this = rootEl[expando],\n\t\t\t\t\tel,\n\t\t\t\t\trect,\n\t\t\t\t\tsens = options.scrollSensitivity,\n\t\t\t\t\tspeed = options.scrollSpeed,\n\n\t\t\t\t\tx = evt.clientX,\n\t\t\t\t\ty = evt.clientY,\n\n\t\t\t\t\twinWidth = window.innerWidth,\n\t\t\t\t\twinHeight = window.innerHeight,\n\n\t\t\t\t\tvx,\n\t\t\t\t\tvy,\n\n\t\t\t\t\tscrollOffsetX,\n\t\t\t\t\tscrollOffsetY\n\t\t\t\t;\n\n\t\t\t\t// Delect scrollEl\n\t\t\t\tif (scrollParentEl !== rootEl) {\n\t\t\t\t\tscrollEl = options.scroll;\n\t\t\t\t\tscrollParentEl = rootEl;\n\t\t\t\t\tscrollCustomFn = options.scrollFn;\n\n\t\t\t\t\tif (scrollEl === true) {\n\t\t\t\t\t\tscrollEl = rootEl;\n\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tif ((scrollEl.offsetWidth < scrollEl.scrollWidth) ||\n\t\t\t\t\t\t\t\t(scrollEl.offsetHeight < scrollEl.scrollHeight)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\t\t} while (scrollEl = scrollEl.parentNode);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (scrollEl) {\n\t\t\t\t\tel = scrollEl;\n\t\t\t\t\trect = scrollEl.getBoundingClientRect();\n\t\t\t\t\tvx = (abs(rect.right - x) <= sens) - (abs(rect.left - x) <= sens);\n\t\t\t\t\tvy = (abs(rect.bottom - y) <= sens) - (abs(rect.top - y) <= sens);\n\t\t\t\t}\n\n\n\t\t\t\tif (!(vx || vy)) {\n\t\t\t\t\tvx = (winWidth - x <= sens) - (x <= sens);\n\t\t\t\t\tvy = (winHeight - y <= sens) - (y <= sens);\n\n\t\t\t\t\t/* jshint expr:true */\n\t\t\t\t\t(vx || vy) && (el = win);\n\t\t\t\t}\n\n\n\t\t\t\tif (autoScroll.vx !== vx || autoScroll.vy !== vy || autoScroll.el !== el) {\n\t\t\t\t\tautoScroll.el = el;\n\t\t\t\t\tautoScroll.vx = vx;\n\t\t\t\t\tautoScroll.vy = vy;\n\n\t\t\t\t\tclearInterval(autoScroll.pid);\n\n\t\t\t\t\tif (el) {\n\t\t\t\t\t\tautoScroll.pid = setInterval(function () {\n\t\t\t\t\t\t\tscrollOffsetY = vy ? vy * speed : 0;\n\t\t\t\t\t\t\tscrollOffsetX = vx ? vx * speed : 0;\n\n\t\t\t\t\t\t\tif ('function' === typeof(scrollCustomFn)) {\n\t\t\t\t\t\t\t\treturn scrollCustomFn.call(_this, scrollOffsetX, scrollOffsetY, evt);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (el === win) {\n\t\t\t\t\t\t\t\twin.scrollTo(win.pageXOffset + scrollOffsetX, win.pageYOffset + scrollOffsetY);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tel.scrollTop += scrollOffsetY;\n\t\t\t\t\t\t\t\tel.scrollLeft += scrollOffsetX;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 24);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, 30),\n\n\t\t_prepareGroup = function (options) {\n\t\t\tfunction toFn(value, pull) {\n\t\t\t\tif (value === void 0 || value === true) {\n\t\t\t\t\tvalue = group.name;\n\t\t\t\t}\n\n\t\t\t\tif (typeof value === 'function') {\n\t\t\t\t\treturn value;\n\t\t\t\t} else {\n\t\t\t\t\treturn function (to, from) {\n\t\t\t\t\t\tvar fromGroup = from.options.group.name;\n\n\t\t\t\t\t\treturn pull\n\t\t\t\t\t\t\t? value\n\t\t\t\t\t\t\t: value && (value.join\n\t\t\t\t\t\t\t\t? value.indexOf(fromGroup) > -1\n\t\t\t\t\t\t\t\t: (fromGroup == value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar group = {};\n\t\t\tvar originalGroup = options.group;\n\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\n\t\t\t\toriginalGroup = {name: originalGroup};\n\t\t\t}\n\n\t\t\tgroup.name = originalGroup.name;\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\n\t\t\tgroup.revertClone = originalGroup.revertClone;\n\n\t\t\toptions.group = group;\n\t\t}\n\t;\n\n\n\t/**\n\t * @class  Sortable\n\t * @param  {HTMLElement}  el\n\t * @param  {Object}       [options]\n\t */\n\tfunction Sortable(el, options) {\n\t\tif (!(el && el.nodeType && el.nodeType === 1)) {\n\t\t\tthrow 'Sortable: `el` must be HTMLElement, and not ' + {}.toString.call(el);\n\t\t}\n\n\t\tthis.el = el; // root element\n\t\tthis.options = options = _extend({}, options);\n\n\n\t\t// Export instance\n\t\tel[expando] = this;\n\n\t\t// Default options\n\t\tvar defaults = {\n\t\t\tgroup: Math.random(),\n\t\t\tsort: true,\n\t\t\tdisabled: false,\n\t\t\tstore: null,\n\t\t\thandle: null,\n\t\t\tscroll: true,\n\t\t\tscrollSensitivity: 30,\n\t\t\tscrollSpeed: 10,\n\t\t\tdraggable: /[uo]l/i.test(el.nodeName) ? 'li' : '>*',\n\t\t\tghostClass: 'sortable-ghost',\n\t\t\tchosenClass: 'sortable-chosen',\n\t\t\tdragClass: 'sortable-drag',\n\t\t\tignore: 'a, img',\n\t\t\tfilter: null,\n\t\t\tpreventOnFilter: true,\n\t\t\tanimation: 0,\n\t\t\tsetData: function (dataTransfer, dragEl) {\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\n\t\t\t},\n\t\t\tdropBubble: false,\n\t\t\tdragoverBubble: false,\n\t\t\tdataIdAttr: 'data-id',\n\t\t\tdelay: 0,\n\t\t\tforceFallback: false,\n\t\t\tfallbackClass: 'sortable-fallback',\n\t\t\tfallbackOnBody: false,\n\t\t\tfallbackTolerance: 0,\n\t\t\tfallbackOffset: {x: 0, y: 0}\n\t\t};\n\n\n\t\t// Set default options\n\t\tfor (var name in defaults) {\n\t\t\t!(name in options) && (options[name] = defaults[name]);\n\t\t}\n\n\t\t_prepareGroup(options);\n\n\t\t// Bind all private methods\n\t\tfor (var fn in this) {\n\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n\t\t\t\tthis[fn] = this[fn].bind(this);\n\t\t\t}\n\t\t}\n\n\t\t// Setup drag mode\n\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n\t\t// Bind events\n\t\t_on(el, 'mousedown', this._onTapStart);\n\t\t_on(el, 'touchstart', this._onTapStart);\n\t\t_on(el, 'pointerdown', this._onTapStart);\n\n\t\tif (this.nativeDraggable) {\n\t\t\t_on(el, 'dragover', this);\n\t\t\t_on(el, 'dragenter', this);\n\t\t}\n\n\t\ttouchDragOverListeners.push(this._onDragOver);\n\n\t\t// Restore sorting\n\t\toptions.store && this.sort(options.store.get(this));\n\t}\n\n\n\tSortable.prototype = /** @lends Sortable.prototype */ {\n\t\tconstructor: Sortable,\n\n\t\t_onTapStart: function (/** Event|TouchEvent */evt) {\n\t\t\tvar _this = this,\n\t\t\t\tel = this.el,\n\t\t\t\toptions = this.options,\n\t\t\t\tpreventOnFilter = options.preventOnFilter,\n\t\t\t\ttype = evt.type,\n\t\t\t\ttouch = evt.touches && evt.touches[0],\n\t\t\t\ttarget = (touch || evt).target,\n\t\t\t\toriginalTarget = evt.target.shadowRoot && (evt.path && evt.path[0]) || target,\n\t\t\t\tfilter = options.filter,\n\t\t\t\tstartIndex;\n\n\t\t\t_saveInputCheckedState(el);\n\n\n\t\t\t// Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\t\t\tif (dragEl) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n\t\t\t\treturn; // only left button or enabled\n\t\t\t}\n\n\n\t\t\ttarget = _closest(target, options.draggable, el);\n\n\t\t\tif (!target) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (lastDownEl === target) {\n\t\t\t\t// Ignoring duplicate `down`\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get the index of the dragged element within its parent\n\t\t\tstartIndex = _index(target, options.draggable);\n\n\t\t\t// Check filter\n\t\t\tif (typeof filter === 'function') {\n\t\t\t\tif (filter.call(this, evt, target, this)) {\n\t\t\t\t\t_dispatchEvent(_this, originalTarget, 'filter', target, el, startIndex);\n\t\t\t\t\tpreventOnFilter && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (filter) {\n\t\t\t\tfilter = filter.split(',').some(function (criteria) {\n\t\t\t\t\tcriteria = _closest(originalTarget, criteria.trim(), el);\n\n\t\t\t\t\tif (criteria) {\n\t\t\t\t\t\t_dispatchEvent(_this, criteria, 'filter', target, el, startIndex);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (filter) {\n\t\t\t\t\tpreventOnFilter && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.handle && !_closest(originalTarget, options.handle, el)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Prepare `dragstart`\n\t\t\tthis._prepareDragStart(evt, touch, target, startIndex);\n\t\t},\n\n\t\t_prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target, /** Number */startIndex) {\n\t\t\tvar _this = this,\n\t\t\t\tel = _this.el,\n\t\t\t\toptions = _this.options,\n\t\t\t\townerDocument = el.ownerDocument,\n\t\t\t\tdragStartFn;\n\n\t\t\tif (target && !dragEl && (target.parentNode === el)) {\n\t\t\t\ttapEvt = evt;\n\n\t\t\t\trootEl = el;\n\t\t\t\tdragEl = target;\n\t\t\t\tparentEl = dragEl.parentNode;\n\t\t\t\tnextEl = dragEl.nextSibling;\n\t\t\t\tlastDownEl = target;\n\t\t\t\tactiveGroup = options.group;\n\t\t\t\toldIndex = startIndex;\n\n\t\t\t\tthis._lastX = (touch || evt).clientX;\n\t\t\t\tthis._lastY = (touch || evt).clientY;\n\n\t\t\t\tdragEl.style['will-change'] = 'transform';\n\n\t\t\t\tdragStartFn = function () {\n\t\t\t\t\t// Delayed drag has been triggered\n\t\t\t\t\t// we can re-enable the events: touchmove/mousemove\n\t\t\t\t\t_this._disableDelayedDrag();\n\n\t\t\t\t\t// Make the element draggable\n\t\t\t\t\tdragEl.draggable = _this.nativeDraggable;\n\n\t\t\t\t\t// Chosen item\n\t\t\t\t\t_toggleClass(dragEl, options.chosenClass, true);\n\n\t\t\t\t\t// Bind the events: dragstart/dragend\n\t\t\t\t\t_this._triggerDragStart(evt, touch);\n\n\t\t\t\t\t// Drag start event\n\t\t\t\t\t_dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, oldIndex);\n\t\t\t\t};\n\n\t\t\t\t// Disable \"draggable\"\n\t\t\t\toptions.ignore.split(',').forEach(function (criteria) {\n\t\t\t\t\t_find(dragEl, criteria.trim(), _disableDraggable);\n\t\t\t\t});\n\n\t\t\t\t_on(ownerDocument, 'mouseup', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'touchend', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'touchcancel', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'pointercancel', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'selectstart', _this);\n\n\t\t\t\tif (options.delay) {\n\t\t\t\t\t// If the user moves the pointer or let go the click or touch\n\t\t\t\t\t// before the delay has been reached:\n\t\t\t\t\t// disable the delayed drag\n\t\t\t\t\t_on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'mousemove', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchmove', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'pointermove', _this._disableDelayedDrag);\n\n\t\t\t\t\t_this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n\t\t\t\t} else {\n\t\t\t\t\tdragStartFn();\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t},\n\n\t\t_disableDelayedDrag: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\tclearTimeout(this._dragStartTimer);\n\t\t\t_off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchend', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'mousemove', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchmove', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'pointermove', this._disableDelayedDrag);\n\t\t},\n\n\t\t_triggerDragStart: function (/** Event */evt, /** Touch */touch) {\n\t\t\ttouch = touch || (evt.pointerType == 'touch' ? evt : null);\n\n\t\t\tif (touch) {\n\t\t\t\t// Touch device support\n\t\t\t\ttapEvt = {\n\t\t\t\t\ttarget: dragEl,\n\t\t\t\t\tclientX: touch.clientX,\n\t\t\t\t\tclientY: touch.clientY\n\t\t\t\t};\n\n\t\t\t\tthis._onDragStart(tapEvt, 'touch');\n\t\t\t}\n\t\t\telse if (!this.nativeDraggable) {\n\t\t\t\tthis._onDragStart(tapEvt, true);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_on(dragEl, 'dragend', this);\n\t\t\t\t_on(rootEl, 'dragstart', this._onDragStart);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (document.selection) {\n\t\t\t\t\t// Timeout neccessary for IE9\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tdocument.selection.empty();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\twindow.getSelection().removeAllRanges();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t}\n\t\t},\n\n\t\t_dragStarted: function () {\n\t\t\tif (rootEl && dragEl) {\n\t\t\t\tvar options = this.options;\n\n\t\t\t\t// Apply effect\n\t\t\t\t_toggleClass(dragEl, options.ghostClass, true);\n\t\t\t\t_toggleClass(dragEl, options.dragClass, false);\n\n\t\t\t\tSortable.active = this;\n\n\t\t\t\t// Drag start event\n\t\t\t\t_dispatchEvent(this, rootEl, 'start', dragEl, rootEl, oldIndex);\n\t\t\t} else {\n\t\t\t\tthis._nulling();\n\t\t\t}\n\t\t},\n\n\t\t_emulateDragOver: function () {\n\t\t\tif (touchEvt) {\n\t\t\t\tif (this._lastX === touchEvt.clientX && this._lastY === touchEvt.clientY) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._lastX = touchEvt.clientX;\n\t\t\t\tthis._lastY = touchEvt.clientY;\n\n\t\t\t\tif (!supportCssPointerEvents) {\n\t\t\t\t\t_css(ghostEl, 'display', 'none');\n\t\t\t\t}\n\n\t\t\t\tvar target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY),\n\t\t\t\t\tparent = target,\n\t\t\t\t\ti = touchDragOverListeners.length;\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (parent[expando]) {\n\t\t\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\t\t\ttouchDragOverListeners[i]({\n\t\t\t\t\t\t\t\t\tclientX: touchEvt.clientX,\n\t\t\t\t\t\t\t\t\tclientY: touchEvt.clientY,\n\t\t\t\t\t\t\t\t\ttarget: target,\n\t\t\t\t\t\t\t\t\trootEl: parent\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttarget = parent; // store last element\n\t\t\t\t\t}\n\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\twhile (parent = parent.parentNode);\n\t\t\t\t}\n\n\t\t\t\tif (!supportCssPointerEvents) {\n\t\t\t\t\t_css(ghostEl, 'display', '');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t_onTouchMove: function (/**TouchEvent*/evt) {\n\t\t\tif (tapEvt) {\n\t\t\t\tvar\toptions = this.options,\n\t\t\t\t\tfallbackTolerance = options.fallbackTolerance,\n\t\t\t\t\tfallbackOffset = options.fallbackOffset,\n\t\t\t\t\ttouch = evt.touches ? evt.touches[0] : evt,\n\t\t\t\t\tdx = (touch.clientX - tapEvt.clientX) + fallbackOffset.x,\n\t\t\t\t\tdy = (touch.clientY - tapEvt.clientY) + fallbackOffset.y,\n\t\t\t\t\ttranslate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';\n\n\t\t\t\t// only set the status to dragging, when we are actually dragging\n\t\t\t\tif (!Sortable.active) {\n\t\t\t\t\tif (fallbackTolerance &&\n\t\t\t\t\t\tmin(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY)) < fallbackTolerance\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._dragStarted();\n\t\t\t\t}\n\n\t\t\t\t// as well as creating the ghost element on the document body\n\t\t\t\tthis._appendGhost();\n\n\t\t\t\tmoved = true;\n\t\t\t\ttouchEvt = touch;\n\n\t\t\t\t_css(ghostEl, 'webkitTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'mozTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'msTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'transform', translate3d);\n\n\t\t\t\tevt.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\t_appendGhost: function () {\n\t\t\tif (!ghostEl) {\n\t\t\t\tvar rect = dragEl.getBoundingClientRect(),\n\t\t\t\t\tcss = _css(dragEl),\n\t\t\t\t\toptions = this.options,\n\t\t\t\t\tghostRect;\n\n\t\t\t\tghostEl = dragEl.cloneNode(true);\n\n\t\t\t\t_toggleClass(ghostEl, options.ghostClass, false);\n\t\t\t\t_toggleClass(ghostEl, options.fallbackClass, true);\n\t\t\t\t_toggleClass(ghostEl, options.dragClass, true);\n\n\t\t\t\t_css(ghostEl, 'top', rect.top - parseInt(css.marginTop, 10));\n\t\t\t\t_css(ghostEl, 'left', rect.left - parseInt(css.marginLeft, 10));\n\t\t\t\t_css(ghostEl, 'width', rect.width);\n\t\t\t\t_css(ghostEl, 'height', rect.height);\n\t\t\t\t_css(ghostEl, 'opacity', '0.8');\n\t\t\t\t_css(ghostEl, 'position', 'fixed');\n\t\t\t\t_css(ghostEl, 'zIndex', '100000');\n\t\t\t\t_css(ghostEl, 'pointerEvents', 'none');\n\n\t\t\t\toptions.fallbackOnBody && document.body.appendChild(ghostEl) || rootEl.appendChild(ghostEl);\n\n\t\t\t\t// Fixing dimensions.\n\t\t\t\tghostRect = ghostEl.getBoundingClientRect();\n\t\t\t\t_css(ghostEl, 'width', rect.width * 2 - ghostRect.width);\n\t\t\t\t_css(ghostEl, 'height', rect.height * 2 - ghostRect.height);\n\t\t\t}\n\t\t},\n\n\t\t_onDragStart: function (/**Event*/evt, /**boolean*/useFallback) {\n\t\t\tvar dataTransfer = evt.dataTransfer,\n\t\t\t\toptions = this.options;\n\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (activeGroup.checkPull(this, this, dragEl, evt)) {\n\t\t\t\tcloneEl = _clone(dragEl);\n\n\t\t\t\tcloneEl.draggable = false;\n\t\t\t\tcloneEl.style['will-change'] = '';\n\n\t\t\t\t_css(cloneEl, 'display', 'none');\n\t\t\t\t_toggleClass(cloneEl, this.options.chosenClass, false);\n\n\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t_dispatchEvent(this, rootEl, 'clone', dragEl);\n\t\t\t}\n\n\t\t\t_toggleClass(dragEl, options.dragClass, true);\n\n\t\t\tif (useFallback) {\n\t\t\t\tif (useFallback === 'touch') {\n\t\t\t\t\t// Bind touch events\n\t\t\t\t\t_on(document, 'touchmove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'touchend', this._onDrop);\n\t\t\t\t\t_on(document, 'touchcancel', this._onDrop);\n\t\t\t\t\t_on(document, 'pointermove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'pointerup', this._onDrop);\n\t\t\t\t} else {\n\t\t\t\t\t// Old brwoser\n\t\t\t\t\t_on(document, 'mousemove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'mouseup', this._onDrop);\n\t\t\t\t}\n\n\t\t\t\tthis._loopId = setInterval(this._emulateDragOver, 50);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (dataTransfer) {\n\t\t\t\t\tdataTransfer.effectAllowed = 'move';\n\t\t\t\t\toptions.setData && options.setData.call(this, dataTransfer, dragEl);\n\t\t\t\t}\n\n\t\t\t\t_on(document, 'drop', this);\n\t\t\t\tsetTimeout(this._dragStarted, 0);\n\t\t\t}\n\t\t},\n\n\t\t_onDragOver: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\ttarget,\n\t\t\t\tdragRect,\n\t\t\t\ttargetRect,\n\t\t\t\trevert,\n\t\t\t\toptions = this.options,\n\t\t\t\tgroup = options.group,\n\t\t\t\tactiveSortable = Sortable.active,\n\t\t\t\tisOwner = (activeGroup === group),\n\t\t\t\tisMovingBetweenSortable = false,\n\t\t\t\tcanSort = options.sort;\n\n\t\t\tif (evt.preventDefault !== void 0) {\n\t\t\t\tevt.preventDefault();\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation();\n\t\t\t}\n\n\t\t\tif (dragEl.animated) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmoved = true;\n\n\t\t\tif (activeSortable && !options.disabled &&\n\t\t\t\t(isOwner\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n\t\t\t\t\t: (\n\t\t\t\t\t\tputSortable === this ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t(activeSortable.lastPullMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&\n\t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t) &&\n\t\t\t\t(evt.rootEl === void 0 || evt.rootEl === this.el) // touch fallback\n\t\t\t) {\n\t\t\t\t// Smart auto-scrolling\n\t\t\t\t_autoScroll(evt, options, this.el);\n\n\t\t\t\tif (_silent) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttarget = _closest(evt.target, options.draggable, el);\n\t\t\t\tdragRect = dragEl.getBoundingClientRect();\n\n\t\t\t\tif (putSortable !== this) {\n\t\t\t\t\tputSortable = this;\n\t\t\t\t\tisMovingBetweenSortable = true;\n\t\t\t\t}\n\n\t\t\t\tif (revert) {\n\t\t\t\t\t_cloneHide(activeSortable, true);\n\t\t\t\t\tparentEl = rootEl; // actualization\n\n\t\t\t\t\tif (cloneEl || nextEl) {\n\t\t\t\t\t\trootEl.insertBefore(dragEl, cloneEl || nextEl);\n\t\t\t\t\t}\n\t\t\t\t\telse if (!canSort) {\n\t\t\t\t\t\trootEl.appendChild(dragEl);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\n\t\t\t\tif ((el.children.length === 0) || (el.children[0] === ghostEl) ||\n\t\t\t\t\t(el === evt.target) && (_ghostIsLast(el, evt))\n\t\t\t\t) {\n\t\t\t\t\t//assign target only if condition is true\n\t\t\t\t\tif (el.children.length !== 0 && el.children[0] !== ghostEl && el === evt.target) {\n\t\t\t\t\t\ttarget = el.lastElementChild;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\tif (target.animated) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetRect = target.getBoundingClientRect();\n\t\t\t\t\t}\n\n\t\t\t\t\t_cloneHide(activeSortable, isOwner);\n\n\t\t\t\t\tif (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt) !== false) {\n\t\t\t\t\t\tif (!dragEl.contains(el)) {\n\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t\tparentEl = el; // actualization\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._animate(dragRect, dragEl);\n\t\t\t\t\t\ttarget && this._animate(targetRect, target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (target && !target.animated && target !== dragEl && (target.parentNode[expando] !== void 0)) {\n\t\t\t\t\tif (lastEl !== target) {\n\t\t\t\t\t\tlastEl = target;\n\t\t\t\t\t\tlastCSS = _css(target);\n\t\t\t\t\t\tlastParentCSS = _css(target.parentNode);\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetRect = target.getBoundingClientRect();\n\n\t\t\t\t\tvar width = targetRect.right - targetRect.left,\n\t\t\t\t\t\theight = targetRect.bottom - targetRect.top,\n\t\t\t\t\t\tfloating = R_FLOAT.test(lastCSS.cssFloat + lastCSS.display)\n\t\t\t\t\t\t\t|| (lastParentCSS.display == 'flex' && lastParentCSS['flex-direction'].indexOf('row') === 0),\n\t\t\t\t\t\tisWide = (target.offsetWidth > dragEl.offsetWidth),\n\t\t\t\t\t\tisLong = (target.offsetHeight > dragEl.offsetHeight),\n\t\t\t\t\t\thalfway = (floating ? (evt.clientX - targetRect.left) / width : (evt.clientY - targetRect.top) / height) > 0.5,\n\t\t\t\t\t\tnextSibling = target.nextElementSibling,\n\t\t\t\t\t\tafter = false\n\t\t\t\t\t;\n\n\t\t\t\t\tif (floating) {\n\t\t\t\t\t\tvar elTop = dragEl.offsetTop,\n\t\t\t\t\t\t\ttgTop = target.offsetTop;\n\n\t\t\t\t\t\tif (elTop === tgTop) {\n\t\t\t\t\t\t\tafter = (target.previousElementSibling === dragEl) && !isWide || halfway && isWide;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (target.previousElementSibling === dragEl || dragEl.previousElementSibling === target) {\n\t\t\t\t\t\t\tafter = (evt.clientY - targetRect.top) / height > 0.5;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tafter = tgTop > elTop;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (!isMovingBetweenSortable) {\n\t\t\t\t\t\tafter = (nextSibling !== dragEl) && !isLong || halfway && isLong;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n\t\t\t\t\tif (moveVector !== false) {\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\n\t\t\t\t\t\t\tafter = (moveVector === 1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_silent = true;\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\n\n\t\t\t\t\t\t_cloneHide(activeSortable, isOwner);\n\n\t\t\t\t\t\tif (!dragEl.contains(el)) {\n\t\t\t\t\t\t\tif (after && !nextSibling) {\n\t\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tparentEl = dragEl.parentNode; // actualization\n\n\t\t\t\t\t\tthis._animate(dragRect, dragEl);\n\t\t\t\t\t\tthis._animate(targetRect, target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_animate: function (prevRect, target) {\n\t\t\tvar ms = this.options.animation;\n\n\t\t\tif (ms) {\n\t\t\t\tvar currentRect = target.getBoundingClientRect();\n\n\t\t\t\tif (prevRect.nodeType === 1) {\n\t\t\t\t\tprevRect = prevRect.getBoundingClientRect();\n\t\t\t\t}\n\n\t\t\t\t_css(target, 'transition', 'none');\n\t\t\t\t_css(target, 'transform', 'translate3d('\n\t\t\t\t\t+ (prevRect.left - currentRect.left) + 'px,'\n\t\t\t\t\t+ (prevRect.top - currentRect.top) + 'px,0)'\n\t\t\t\t);\n\n\t\t\t\ttarget.offsetWidth; // repaint\n\n\t\t\t\t_css(target, 'transition', 'all ' + ms + 'ms');\n\t\t\t\t_css(target, 'transform', 'translate3d(0,0,0)');\n\n\t\t\t\tclearTimeout(target.animated);\n\t\t\t\ttarget.animated = setTimeout(function () {\n\t\t\t\t\t_css(target, 'transition', '');\n\t\t\t\t\t_css(target, 'transform', '');\n\t\t\t\t\ttarget.animated = false;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t},\n\n\t\t_offUpEvents: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\t_off(document, 'touchmove', this._onTouchMove);\n\t\t\t_off(document, 'pointermove', this._onTouchMove);\n\t\t\t_off(ownerDocument, 'mouseup', this._onDrop);\n\t\t\t_off(ownerDocument, 'touchend', this._onDrop);\n\t\t\t_off(ownerDocument, 'pointerup', this._onDrop);\n\t\t\t_off(ownerDocument, 'touchcancel', this._onDrop);\n\t\t\t_off(ownerDocument, 'pointercancel', this._onDrop);\n\t\t\t_off(ownerDocument, 'selectstart', this);\n\t\t},\n\n\t\t_onDrop: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\toptions = this.options;\n\n\t\t\tclearInterval(this._loopId);\n\t\t\tclearInterval(autoScroll.pid);\n\t\t\tclearTimeout(this._dragStartTimer);\n\n\t\t\t// Unbind events\n\t\t\t_off(document, 'mousemove', this._onTouchMove);\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t_off(document, 'drop', this);\n\t\t\t\t_off(el, 'dragstart', this._onDragStart);\n\t\t\t}\n\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (evt) {\n\t\t\t\tif (moved) {\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\n\t\t\t\t}\n\n\t\t\t\tghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n\t\t\t\tif (rootEl === parentEl || Sortable.active.lastPullMode !== 'clone') {\n\t\t\t\t\t// Remove clone\n\t\t\t\t\tcloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n\t\t\t\t}\n\n\t\t\t\tif (dragEl) {\n\t\t\t\t\tif (this.nativeDraggable) {\n\t\t\t\t\t\t_off(dragEl, 'dragend', this);\n\t\t\t\t\t}\n\n\t\t\t\t\t_disableDraggable(dragEl);\n\t\t\t\t\tdragEl.style['will-change'] = '';\n\n\t\t\t\t\t// Remove class's\n\t\t\t\t\t_toggleClass(dragEl, this.options.ghostClass, false);\n\t\t\t\t\t_toggleClass(dragEl, this.options.chosenClass, false);\n\n\t\t\t\t\t// Drag stop event\n\t\t\t\t\t_dispatchEvent(this, rootEl, 'unchoose', dragEl, rootEl, oldIndex);\n\n\t\t\t\t\tif (rootEl !== parentEl) {\n\t\t\t\t\t\tnewIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t// Add event\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'add', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t\t// Remove event\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'remove', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t\t// drag from one list and drop into another\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\n\t\t\t\t\t\t\tnewIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t\t// drag & drop within the same list\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'update', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Sortable.active) {\n\t\t\t\t\t\t/* jshint eqnull:true */\n\t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\n\t\t\t\t\t\t\tnewIndex = oldIndex;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'end', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t// Save sorting\n\t\t\t\t\t\tthis.save();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._nulling();\n\t\t},\n\n\t\t_nulling: function() {\n\t\t\trootEl =\n\t\t\tdragEl =\n\t\t\tparentEl =\n\t\t\tghostEl =\n\t\t\tnextEl =\n\t\t\tcloneEl =\n\t\t\tlastDownEl =\n\n\t\t\tscrollEl =\n\t\t\tscrollParentEl =\n\n\t\t\ttapEvt =\n\t\t\ttouchEvt =\n\n\t\t\tmoved =\n\t\t\tnewIndex =\n\n\t\t\tlastEl =\n\t\t\tlastCSS =\n\n\t\t\tputSortable =\n\t\t\tactiveGroup =\n\t\t\tSortable.active = null;\n\n\t\t\tsavedInputChecked.forEach(function (el) {\n\t\t\t\tel.checked = true;\n\t\t\t});\n\t\t\tsavedInputChecked.length = 0;\n\t\t},\n\n\t\thandleEvent: function (/**Event*/evt) {\n\t\t\tswitch (evt.type) {\n\t\t\t\tcase 'drop':\n\t\t\t\tcase 'dragend':\n\t\t\t\t\tthis._onDrop(evt);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'dragover':\n\t\t\t\tcase 'dragenter':\n\t\t\t\t\tif (dragEl) {\n\t\t\t\t\t\tthis._onDragOver(evt);\n\t\t\t\t\t\t_globalDragOver(evt);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'selectstart':\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Serializes the item into an array of string.\n\t\t * @returns {String[]}\n\t\t */\n\t\ttoArray: function () {\n\t\t\tvar order = [],\n\t\t\t\tel,\n\t\t\t\tchildren = this.el.children,\n\t\t\t\ti = 0,\n\t\t\t\tn = children.length,\n\t\t\t\toptions = this.options;\n\n\t\t\tfor (; i < n; i++) {\n\t\t\t\tel = children[i];\n\t\t\t\tif (_closest(el, options.draggable, this.el)) {\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn order;\n\t\t},\n\n\n\t\t/**\n\t\t * Sorts the elements according to the array.\n\t\t * @param  {String[]}  order  order of the items\n\t\t */\n\t\tsort: function (order) {\n\t\t\tvar items = {}, rootEl = this.el;\n\n\t\t\tthis.toArray().forEach(function (id, i) {\n\t\t\t\tvar el = rootEl.children[i];\n\n\t\t\t\tif (_closest(el, this.options.draggable, rootEl)) {\n\t\t\t\t\titems[id] = el;\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\torder.forEach(function (id) {\n\t\t\t\tif (items[id]) {\n\t\t\t\t\trootEl.removeChild(items[id]);\n\t\t\t\t\trootEl.appendChild(items[id]);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * Save the current sorting\n\t\t */\n\t\tsave: function () {\n\t\t\tvar store = this.options.store;\n\t\t\tstore && store.set(this);\n\t\t},\n\n\n\t\t/**\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n\t\t * @param   {HTMLElement}  el\n\t\t * @param   {String}       [selector]  default: `options.draggable`\n\t\t * @returns {HTMLElement|null}\n\t\t */\n\t\tclosest: function (el, selector) {\n\t\t\treturn _closest(el, selector || this.options.draggable, this.el);\n\t\t},\n\n\n\t\t/**\n\t\t * Set/get option\n\t\t * @param   {string} name\n\t\t * @param   {*}      [value]\n\t\t * @returns {*}\n\t\t */\n\t\toption: function (name, value) {\n\t\t\tvar options = this.options;\n\n\t\t\tif (value === void 0) {\n\t\t\t\treturn options[name];\n\t\t\t} else {\n\t\t\t\toptions[name] = value;\n\n\t\t\t\tif (name === 'group') {\n\t\t\t\t\t_prepareGroup(options);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Destroy\n\t\t */\n\t\tdestroy: function () {\n\t\t\tvar el = this.el;\n\n\t\t\tel[expando] = null;\n\n\t\t\t_off(el, 'mousedown', this._onTapStart);\n\t\t\t_off(el, 'touchstart', this._onTapStart);\n\t\t\t_off(el, 'pointerdown', this._onTapStart);\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t_off(el, 'dragover', this);\n\t\t\t\t_off(el, 'dragenter', this);\n\t\t\t}\n\n\t\t\t// Remove draggable attributes\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n\t\t\t\tel.removeAttribute('draggable');\n\t\t\t});\n\n\t\t\ttouchDragOverListeners.splice(touchDragOverListeners.indexOf(this._onDragOver), 1);\n\n\t\t\tthis._onDrop();\n\n\t\t\tthis.el = el = null;\n\t\t}\n\t};\n\n\n\tfunction _cloneHide(sortable, state) {\n\t\tif (sortable.lastPullMode !== 'clone') {\n\t\t\tstate = true;\n\t\t}\n\n\t\tif (cloneEl && (cloneEl.state !== state)) {\n\t\t\t_css(cloneEl, 'display', state ? 'none' : '');\n\n\t\t\tif (!state) {\n\t\t\t\tif (cloneEl.state) {\n\t\t\t\t\tif (sortable.options.group.revertClone) {\n\t\t\t\t\t\trootEl.insertBefore(cloneEl, nextEl);\n\t\t\t\t\t\tsortable._animate(dragEl, cloneEl);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcloneEl.state = state;\n\t\t}\n\t}\n\n\n\tfunction _closest(/**HTMLElement*/el, /**String*/selector, /**HTMLElement*/ctx) {\n\t\tif (el) {\n\t\t\tctx = ctx || document;\n\n\t\t\tdo {\n\t\t\t\tif ((selector === '>*' && el.parentNode === ctx) || _matches(el, selector)) {\n\t\t\t\t\treturn el;\n\t\t\t\t}\n\t\t\t\t/* jshint boss:true */\n\t\t\t} while (el = _getParentOrHost(el));\n\t\t}\n\n\t\treturn null;\n\t}\n\n\n\tfunction _getParentOrHost(el) {\n\t\tvar parent = el.host;\n\n\t\treturn (parent && parent.nodeType) ? parent : el.parentNode;\n\t}\n\n\n\tfunction _globalDragOver(/**Event*/evt) {\n\t\tif (evt.dataTransfer) {\n\t\t\tevt.dataTransfer.dropEffect = 'move';\n\t\t}\n\t\tevt.preventDefault();\n\t}\n\n\n\tfunction _on(el, event, fn) {\n\t\tel.addEventListener(event, fn, captureMode);\n\t}\n\n\n\tfunction _off(el, event, fn) {\n\t\tel.removeEventListener(event, fn, captureMode);\n\t}\n\n\n\tfunction _toggleClass(el, name, state) {\n\t\tif (el) {\n\t\t\tif (el.classList) {\n\t\t\t\tel.classList[state ? 'add' : 'remove'](name);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n\t\t\t\tel.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n\t\t\t}\n\t\t}\n\t}\n\n\n\tfunction _css(el, prop, val) {\n\t\tvar style = el && el.style;\n\n\t\tif (style) {\n\t\t\tif (val === void 0) {\n\t\t\t\tif (document.defaultView && document.defaultView.getComputedStyle) {\n\t\t\t\t\tval = document.defaultView.getComputedStyle(el, '');\n\t\t\t\t}\n\t\t\t\telse if (el.currentStyle) {\n\t\t\t\t\tval = el.currentStyle;\n\t\t\t\t}\n\n\t\t\t\treturn prop === void 0 ? val : val[prop];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!(prop in style)) {\n\t\t\t\t\tprop = '-webkit-' + prop;\n\t\t\t\t}\n\n\t\t\t\tstyle[prop] = val + (typeof val === 'string' ? '' : 'px');\n\t\t\t}\n\t\t}\n\t}\n\n\n\tfunction _find(ctx, tagName, iterator) {\n\t\tif (ctx) {\n\t\t\tvar list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\n\n\t\t\tif (iterator) {\n\t\t\t\tfor (; i < n; i++) {\n\t\t\t\t\titerator(list[i], i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\treturn [];\n\t}\n\n\n\n\tfunction _dispatchEvent(sortable, rootEl, name, targetEl, fromEl, startIndex, newIndex) {\n\t\tsortable = (sortable || rootEl[expando]);\n\n\t\tvar evt = document.createEvent('Event'),\n\t\t\toptions = sortable.options,\n\t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);\n\n\t\tevt.initEvent(name, true, true);\n\n\t\tevt.to = rootEl;\n\t\tevt.from = fromEl || rootEl;\n\t\tevt.item = targetEl || rootEl;\n\t\tevt.clone = cloneEl;\n\n\t\tevt.oldIndex = startIndex;\n\t\tevt.newIndex = newIndex;\n\n\t\trootEl.dispatchEvent(evt);\n\n\t\tif (options[onName]) {\n\t\t\toptions[onName].call(sortable, evt);\n\t\t}\n\t}\n\n\n\tfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt, willInsertAfter) {\n\t\tvar evt,\n\t\t\tsortable = fromEl[expando],\n\t\t\tonMoveFn = sortable.options.onMove,\n\t\t\tretVal;\n\n\t\tevt = document.createEvent('Event');\n\t\tevt.initEvent('move', true, true);\n\n\t\tevt.to = toEl;\n\t\tevt.from = fromEl;\n\t\tevt.dragged = dragEl;\n\t\tevt.draggedRect = dragRect;\n\t\tevt.related = targetEl || toEl;\n\t\tevt.relatedRect = targetRect || toEl.getBoundingClientRect();\n\t\tevt.willInsertAfter = willInsertAfter;\n\n\t\tfromEl.dispatchEvent(evt);\n\n\t\tif (onMoveFn) {\n\t\t\tretVal = onMoveFn.call(sortable, evt, originalEvt);\n\t\t}\n\n\t\treturn retVal;\n\t}\n\n\n\tfunction _disableDraggable(el) {\n\t\tel.draggable = false;\n\t}\n\n\n\tfunction _unsilent() {\n\t\t_silent = false;\n\t}\n\n\n\t/** @returns {HTMLElement|false} */\n\tfunction _ghostIsLast(el, evt) {\n\t\tvar lastEl = el.lastElementChild,\n\t\t\trect = lastEl.getBoundingClientRect();\n\n\t\t// 5 — min delta\n\t\t// abs — нельзя добавлять, а то глюки при наведении сверху\n\t\treturn (evt.clientY - (rect.top + rect.height) > 5) ||\n\t\t\t(evt.clientX - (rect.left + rect.width) > 5);\n\t}\n\n\n\t/**\n\t * Generate id\n\t * @param   {HTMLElement} el\n\t * @returns {String}\n\t * @private\n\t */\n\tfunction _generateId(el) {\n\t\tvar str = el.tagName + el.className + el.src + el.href + el.textContent,\n\t\t\ti = str.length,\n\t\t\tsum = 0;\n\n\t\twhile (i--) {\n\t\t\tsum += str.charCodeAt(i);\n\t\t}\n\n\t\treturn sum.toString(36);\n\t}\n\n\t/**\n\t * Returns the index of an element within its parent for a selected set of\n\t * elements\n\t * @param  {HTMLElement} el\n\t * @param  {selector} selector\n\t * @return {number}\n\t */\n\tfunction _index(el, selector) {\n\t\tvar index = 0;\n\n\t\tif (!el || !el.parentNode) {\n\t\t\treturn -1;\n\t\t}\n\n\t\twhile (el && (el = el.previousElementSibling)) {\n\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && (selector === '>*' || _matches(el, selector))) {\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n\n\tfunction _matches(/**HTMLElement*/el, /**String*/selector) {\n\t\tif (el) {\n\t\t\tselector = selector.split('.');\n\n\t\t\tvar tag = selector.shift().toUpperCase(),\n\t\t\t\tre = new RegExp('\\\\s(' + selector.join('|') + ')(?=\\\\s)', 'g');\n\n\t\t\treturn (\n\t\t\t\t(tag === '' || el.nodeName.toUpperCase() == tag) &&\n\t\t\t\t(!selector.length || ((' ' + el.className + ' ').match(re) || []).length == selector.length)\n\t\t\t);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction _throttle(callback, ms) {\n\t\tvar args, _this;\n\n\t\treturn function () {\n\t\t\tif (args === void 0) {\n\t\t\t\targs = arguments;\n\t\t\t\t_this = this;\n\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (args.length === 1) {\n\t\t\t\t\t\tcallback.call(_this, args[0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback.apply(_this, args);\n\t\t\t\t\t}\n\n\t\t\t\t\targs = void 0;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction _extend(dst, src) {\n\t\tif (dst && src) {\n\t\t\tfor (var key in src) {\n\t\t\t\tif (src.hasOwnProperty(key)) {\n\t\t\t\t\tdst[key] = src[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn dst;\n\t}\n\n\tfunction _clone(el) {\n\t\treturn $\n\t\t\t? $(el).clone(true)[0]\n\t\t\t: (Polymer && Polymer.dom\n\t\t\t\t? Polymer.dom(el).cloneNode(true)\n\t\t\t\t: el.cloneNode(true)\n\t\t\t);\n\t}\n\n\tfunction _saveInputCheckedState(root) {\n\t\tvar inputs = root.getElementsByTagName('input');\n\t\tvar idx = inputs.length;\n\n\t\twhile (idx--) {\n\t\t\tvar el = inputs[idx];\n\t\t\tel.checked && savedInputChecked.push(el);\n\t\t}\n\t}\n\n\t// Fixed #973: \n\t_on(document, 'touchmove', function (evt) {\n\t\tif (Sortable.active) {\n\t\t\tevt.preventDefault();\n\t\t}\n\t});\n\n\ttry {\n\t\twindow.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n\t\t\tget: function () {\n\t\t\t\tcaptureMode = {\n\t\t\t\t\tcapture: false,\n\t\t\t\t\tpassive: false\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\t} catch (err) {}\n\n\t// Export utils\n\tSortable.utils = {\n\t\ton: _on,\n\t\toff: _off,\n\t\tcss: _css,\n\t\tfind: _find,\n\t\tis: function (el, selector) {\n\t\t\treturn !!_closest(el, selector, el);\n\t\t},\n\t\textend: _extend,\n\t\tthrottle: _throttle,\n\t\tclosest: _closest,\n\t\ttoggleClass: _toggleClass,\n\t\tclone: _clone,\n\t\tindex: _index\n\t};\n\n\n\t/**\n\t * Create sortable instance\n\t * @param {HTMLElement}  el\n\t * @param {Object}      [options]\n\t */\n\tSortable.create = function (el, options) {\n\t\treturn new Sortable(el, options);\n\t};\n\n\n\t// Export\n\tSortable.version = '1.6.1';\n\treturn Sortable;\n});\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar $ = __webpack_require__(4),\r\n\tMn = __webpack_require__(1),\r\n\tRadio = __webpack_require__(0),\r\n\tconfig = __webpack_require__(3),\r\n\tmainTmpl = __webpack_require__(31),\r\n\tscreenViewTmpl = __webpack_require__(32);\r\n\r\n\r\nvar EventItemScreenView = Mn.View.extend({\r\n\r\n\ttagName: \"div\",\r\n\ttemplate: screenViewTmpl,\r\n\r\n\tclassName: function() {\r\n\t\treturn \"pure-u-1 pure-u-md-1-\" + config.max_views;\r\n\t},\r\n\r\n\tmodelEvents: {\r\n\t\t\"change\": \"render\"\r\n\t},\r\n\r\n\tinitialize: function(options) {\r\n\t\tthis.event = options.event;\r\n\t\tthis.viewData = this.event.getViewData(this.model.get(\"name\"));\r\n\t},\r\n\r\n\tserializeData: function() {\r\n\r\n\t\tvar data = {\r\n\t\t\tevent: _.clone(this.event.attributes),\r\n\t\t\tview_data: _.clone(this.viewData)\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n});\r\n\r\n\r\nvar EventItemScreensView = Mn.CollectionView.extend({\r\n\r\n\ttagName: \"div\",\r\n\tclassName: \"pure-g\",\r\n\tchildView: EventItemScreenView,\r\n\ttemplate: _.noop(),\r\n\r\n\tchildViewOptions: function() {\r\n\t\treturn {\r\n\t\t\tevent: this.model\r\n\t\t}\r\n\t}\r\n\r\n});\r\n\r\n\r\nvar EventItemView = Mn.View.extend({\r\n\r\n\ttagName: \"li\",\r\n\tclassName: \"event-item\",\r\n\ttemplate: mainTmpl,\r\n\r\n\tregions: {\r\n\t\t\"views\": \"[data-region=views]\"\r\n\t},\r\n\r\n\tui: {\r\n\t\t\"btn_start\": \"[data-ui=btn_start]\",\r\n\t\t\"btn_play\": \"[data-ui=btn_play]\"\r\n\t},\r\n\r\n\ttriggers: {\r\n\t\t\"click @ui.btn_start\": \"event:start\",\r\n\t\t\"click @ui.btn_play\": \"event:play\",\r\n\t\t\"click\": \"event:select\",\r\n\t},\r\n\r\n\tmodelEvents: {\r\n\t\t\"change\": \"render\",\r\n\t\t\"select\": \"setActive\",\r\n\t\t\"deselect\": \"setInactive\"\r\n\t},\r\n\r\n\tinitialize: function() {\r\n\t\tvar self = this;\r\n\t\tthis._storeChannel = Radio.channel(\"store\");\r\n\t},\r\n\r\n\tonRender: function() {\r\n\t\tthis.$el.attr(\"data-event-model-cid\", this.model.cid);\r\n\t\tthis.showChildView(\"views\", new EventItemScreensView({\r\n\t\t\tcollection: this._storeChannel.request(\"viewCollection\"),\r\n\t\t\tmodel: this.model\r\n\t\t}));\r\n\t},\r\n\r\n\tsetActive: function() {\r\n\t\tthis.$el.addClass(\"is-active\");\r\n\t\tif ( ! this.isVisible()) {\r\n\t\t\tthis.scrollIntoView();\r\n\t\t}\r\n\t},\r\n\r\n\tsetInactive: function() {\r\n\t\tthis.$el.removeClass(\"is-active\");\r\n\t},\r\n\r\n\ttoggleActive: function() {\r\n\t\tthis.$el.toggleClass(\"is-active\");\r\n\t},\r\n\r\n\tisVisible: function() {\r\n\t\tvar rect = this.el.getBoundingClientRect();\r\n\t\tvar visible = (\r\n\t\t\trect.top >= 0 &&\r\n\t\t\trect.left >= 0 &&\r\n\t\t\trect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\r\n\t\t\trect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\r\n\t\t);\r\n\t\treturn visible;\r\n\t},\r\n\r\n\tscrollIntoView: function() {\r\n\t\tvar offset = this.$el.offset();\r\n\t\t$('html, body').animate({\r\n\t\t\tscrollTop: offset.top - 50,\r\n\t\t});\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = EventItemView;\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<div class=\"pure-g\">\\r\\n\t<div class=\"pure-u-1 pure-u-md-1-3\">\\r\\n\t\t<div class=\"pure-g\">\\r\\n\t\t\t<div class=\"pure-u-1 pure-u-lg-1-2\">\\r\\n\t\t\t\t'+\n((__t=( name ))==null?'':__t)+\n'\\r\\n\t\t\t</div>\\r\\n\t\t\t<div class=\"pure-u-1 pure-u-lg-1-2\">\\r\\n\t\t\t\t';\n if (name != \"startevent\") { \n__p+='\\r\\n\t\t\t\t<button class=\"pure-button button-min\" data-ui=\"btn_start\"><i class=\"fa fa-fw fa-eject fa-rotate-90\"></i> Start</button>\\r\\n\t\t\t\t<button class=\"pure-button button-min\" data-ui=\"btn_play\"><i class=\"fa fa-fw fa-play\"></i> Play</button>\\r\\n\t\t\t\t';\n } \n__p+='\\r\\n\t\t\t</div>\\r\\n\t\t</div>\\r\\n\t</div>\\r\\n\t<div class=\"pure-u-1 pure-u-md-2-3\" data-region=\"views\"></div>\\r\\n</div>\\r\\n';\n}\nreturn __p;\n};\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<div class=\"event-item-screen-actions\">\\r\\n\t';\n if (view_data && view_data.layername != \"none\") { \n__p+='\\r\\n\t\t<strong>'+\n((__t=( view_data.layername ))==null?'':_.escape(__t))+\n'</strong>\\r\\n\t';\n } \n__p+='\\r\\n\\r\\n\t';\n if (view_data && view_data.actions && view_data.actions.length > 0) { \n__p+='\\r\\n\t<ul>\\r\\n\t\t';\n _.each(view_data.actions, function(action) {\r\n\t\t\tprint(\"<li>\" + _.escape(action.name) + \"</li>\");\r\n\t\t}); \n__p+='\\r\\n\t</ul>\\r\\n\t';\n } \n__p+='\\r\\n\\r\\n</div>';\n}\nreturn __p;\n};\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='\\r\\n<div class=\"event-group-item-header\">\\r\\n\t<div class=\"pure-g\">\\r\\n\t\t<div class=\"pure-u-1-24\">\\r\\n\t\t\t<span class=\"when-default\"><i class=\"fa fa-fw fa-lg fa-plus-square-o\"></i></span>\\r\\n\t\t\t<span class=\"when-active\"><i class=\"fa fa-fw fa-lg fa-minus-square-o\"></i></span>\\r\\n\t\t</div>\\r\\n\t\t<div class=\"pure-u-20-24\">\\r\\n\t\t\t<h3 class=\"event-group-item-title\">\\r\\n\t\t\t\t<span data-ui=\"group_name\"></span>\\r\\n\t\t\t</h3>\\r\\n\t\t</div>\\r\\n\t\t<div class=\"pure-u-3-24 text-right\">\\r\\n\t\t\t<p class=\"text-meta remove-bottom\">Events: <span data-ui=\"event_count\"></span></p>\\r\\n\t\t</div>\\r\\n\t</div>\\r\\n</div>\\r\\n\\r\\n<div class=\"event-group-item-body\">\\r\\n\\r\\n\t<div class=\"event-group-item-actions\">\\r\\n\t\t<button class=\"pure-button\" data-ui=\"btn_edit\"><i class=\"fa fa-fw fa-pencil\"></i> Edit Group</button>\\r\\n\t\t<button class=\"pure-button\" data-ui=\"btn_add_event\"><i class=\"fa fa-fw fa-bolt\"></i> Add Event</button>\\r\\n\t</div>\\r\\n\\r\\n\t<ul class=\"event-list\" data-region=\"header\"></ul>\\r\\n\\r\\n\t<div data-region=\"events\"></div>\\r\\n\\r\\n</div>';\n}\nreturn __p;\n};\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<div class=\"pure-g\">\\r\\n\t<div class=\"pure-u-1 pure-u-md-1-3\">\\r\\n\t\t<div class=\"pure-g\">\\r\\n\t\t\t<div class=\"pure-u-1 pure-u-lg-1-2\"><strong>Event name</strong></div>\\r\\n\t\t\t<div class=\"pure-u-1 pure-u-lg-1-2\"><strong>Action</strong></div>\\r\\n\t\t</div>\\r\\n\t</div>\\r\\n\t<div class=\"pure-u-1 pure-u-md-2-3\" data-region=\"views\"></div>\\r\\n</div>';\n}\nreturn __p;\n};\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar Mn = __webpack_require__(1),\r\n\tRadio = __webpack_require__(0),\r\n\tmainTmpl = __webpack_require__(36);\r\n\r\n\r\nvar ViewEditView = Mn.View.extend({\r\n\r\n\ttagName: \"div\",\r\n\tclassName: \"panel\",\r\n\ttemplate: mainTmpl,\r\n\r\n\tui: {\r\n\t\t\"btn_save\": \"[data-ui=btn_save]\",\r\n\t\t\"btn_cancel\": \"[data-ui=btn_cancel]\",\r\n\t\t\"btn_delete\": \"[data-ui=btn_delete]\",\r\n\t\t\"input_name\": \"input[name=name]\"\r\n\t},\r\n\r\n\tevents: {\r\n\t\t\"click @ui.btn_cancel\": \"handleCancel\",\r\n\t\t\"click @ui.btn_save\": \"handleSave\",\r\n\t\t\"click @ui.btn_delete\": \"handleDelete\"\r\n\t},\r\n\r\n\tmodelEvents: {\r\n\t\t\"remove\": \"destroy\"\r\n\t},\r\n\r\n\t_dispatchChannel: null,\r\n\t_appChannel: null,\r\n\r\n\tinitialize: function() {\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t\tthis._appChannel = Radio.channel(\"app\");\r\n\t},\r\n\r\n\tonAttach: function() {\r\n\t\tthis.ui.input_name.focus();\r\n\t},\r\n\r\n\thandleCancel: function() {\r\n\t\tthis.destroy();\r\n\t},\r\n\r\n\thandleSave: function() {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\t// Listen once to a viewModel validation error, and just raise it to the UI.\r\n\t\tthis.model.once(\"invalid\", function(viewModel, error) {\r\n\t\t\tself._appChannel.request(\"ui:error\", {\r\n\t\t\t\tmessage: error\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// Update the model with the new name.\r\n\t\t// Because we pass {validate: true}, `update` will be false if the validation fails.\r\n\t\tvar update = this.model.set({ \"name\": this.ui.input_name.val() }, { validate: true });\r\n\r\n\t\tif (update) {\r\n\t\t\t// Only remove the view if the name change is successful.\r\n\t\t\tthis.destroy();\r\n\t\t}\r\n\t},\r\n\r\n\thandleDelete: function() {\r\n\t\tthis._dispatchChannel.request(\"view:delete\", { view: this.model });\r\n\t}\r\n\r\n\r\n});\r\n\r\n\r\nmodule.exports = ViewEditView;\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<h3><i class=\"fa fa-desktop\"></i> Edit Screen: '+\n((__t=( name ))==null?'':__t)+\n'</h3>\\r\\n\\r\\n<div class=\"pure-form pure-form-stacked\">\\r\\n\\r\\n\t<div class=\"pure-control-group\">\\r\\n\t\t<div class=\"pure-form-label\">\\r\\n\t\t\t<label for=\"name\">Name</label>\\r\\n\t\t</div>\\r\\n\t\t<div class=\"pure-form-input\">\\r\\n\t\t\t<input name=\"name\" type=\"text\" value=\"'+\n((__t=( name ))==null?'':_.escape(__t))+\n'\">\\r\\n\t\t</div>\\r\\n\t</div>\\r\\n\\r\\n\t<div class=\"button-collection\">\\r\\n\t\t<button class=\"pure-button\" type=\"button\" data-ui=\"btn_save\"><i class=\"fa fa-check\"></i> Save</button>\\r\\n\t\t<button class=\"pure-button button-secondary\" type=\"button\" data-ui=\"btn_cancel\">Cancel</button>\\r\\n\t\t<button class=\"pure-button button-negative\" type=\"button\" data-ui=\"btn_delete\"><i class=\"fa fa-times\"></i> Delete</button>\\r\\n\t</div>\\r\\n\\r\\n</div>\\r\\n';\n}\nreturn __p;\n};\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar Mn = __webpack_require__(1),\r\n\tRadio = __webpack_require__(0),\r\n\tconfig = __webpack_require__(3),\r\n\tmainTmpl = __webpack_require__(38);\r\n\r\n\r\nvar GroupEditView = Mn.View.extend({\r\n\r\n\ttagName: \"div\",\r\n\tclassName: \"panel\",\r\n\ttemplate: mainTmpl,\r\n\r\n\tui: {\r\n\t\t\"btn_save\": \"[data-ui=btn_save]\",\r\n\t\t\"btn_cancel\": \"[data-ui=btn_cancel]\",\r\n\t\t\"btn_delete\": \"[data-ui=btn_delete]\",\r\n\t\t\"input_name\": \"input[name=name]\"\r\n\t},\r\n\r\n\tevents: {\r\n\t\t\"click @ui.btn_cancel\": \"handleCancel\",\r\n\t\t\"click @ui.btn_save\": \"handleSave\",\r\n\t\t\"click @ui.btn_delete\": \"handleDelete\",\r\n\t\t\"keypress @ui.input_name\": \"handleEnter\"\r\n\t},\r\n\r\n\tmodelEvents: {\r\n\t\t\"remove\": \"destroy\"\r\n\t},\r\n\r\n\t_dispatchChannel: null,\r\n\t_appChannel: null,\r\n\r\n\tinitialize: function() {\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t\tthis._appChannel = Radio.channel(\"app\");\r\n\t},\r\n\r\n\tonAttach: function() {\r\n\t\tthis.ui.input_name.focus();\r\n\t},\r\n\r\n\thandleCancel: function() {\r\n\t\tthis.destroy();\r\n\t},\r\n\r\n\thandleSave: function() {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\t// Listen once to a groupModel validation error, and just raise it to the UI.\r\n\t\tthis.model.once(\"invalid\", function(groupModel, error) {\r\n\t\t\tself._appChannel.request(\"ui:error\", {\r\n\t\t\t\tmessage: error\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// Update the model with the new name.\r\n\t\t// Because we pass {validate: true}, `update` will be false if the validation fails.\r\n\t\tvar update = this.model.set({ \"name\": this.ui.input_name.val() }, { validate: true });\r\n\r\n\t\tif (update) {\r\n\t\t\t// Only remove the view if the name change is successful.\r\n\t\t\tthis.destroy();\r\n\t\t}\r\n\t},\r\n\r\n\thandleDelete: function() {\r\n\t\tthis._appChannel.trigger(\"group:confirm_delete\", { group: this.model });\r\n\t},\r\n\r\n\thandleEnter: function(e) {\r\n\t\tif (e.which == config.DOM_VK_RETURN) {\r\n\t\t\tthis.handleSave();\r\n\t\t}\r\n\t}\r\n\r\n\r\n});\r\n\r\n\r\nmodule.exports = GroupEditView;\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<h3><i class=\"fa fa-object-group\"></i> Edit Event Group: '+\n((__t=( name ))==null?'':__t)+\n'</h3>\\r\\n\\r\\n<div class=\"pure-form pure-form-stacked\">\\r\\n\\r\\n\t<div class=\"pure-control-group\">\\r\\n\t\t<div class=\"pure-form-label\">\\r\\n\t\t\t<label for=\"name\">Name</label>\\r\\n\t\t</div>\\r\\n\t\t<div class=\"pure-form-input\">\\r\\n\t\t\t<input name=\"name\" type=\"text\" value=\"'+\n((__t=( name ))==null?'':_.escape(__t))+\n'\">\\r\\n\t\t</div>\\r\\n\t</div>\\r\\n\\r\\n\t<div class=\"button-collection\">\\r\\n\t\t<button class=\"pure-button\" type=\"button\" data-ui=\"btn_save\"><i class=\"fa fa-check\"></i> Save</button>\\r\\n\t\t<button class=\"pure-button button-secondary\" type=\"button\" data-ui=\"btn_cancel\">Cancel</button>\\r\\n\t\t<button class=\"pure-button button-negative\" type=\"button\" data-ui=\"btn_delete\"><i class=\"fa fa-times\"></i> Delete</button>\\r\\n\t</div>\\r\\n\\r\\n</div>\\r\\n';\n}\nreturn __p;\n};\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar _ = __webpack_require__(7),\r\n\tBb = __webpack_require__(2),\r\n\tMn = __webpack_require__(1),\r\n\tRadio = __webpack_require__(0),\r\n\tconfig = __webpack_require__(3),\r\n\tmainTmpl = __webpack_require__(40),\r\n\tscreenLayerTmpl = __webpack_require__(41);\r\n\r\nvar SelectOptionView = Mn.View.extend({\r\n\ttagName: \"option\",\r\n\ttemplate: _.template(\"<%- layername %>\")\r\n});\r\n\r\n\r\nvar SelectView = Mn.CollectionView.extend({\r\n\r\n\ttagName: \"select\",\r\n\tchildView: SelectOptionView,\r\n\r\n\tchildViewOptions: function(model, index) {\r\n\r\n\t\tvar out = {\r\n\t\t\tattributes: {}\r\n\t\t};\r\n\r\n\t\tvar thisLayerId = this.layer.get(\"layerid\");\r\n\r\n\t\tif (model.get(\"layerid\") == thisLayerId) {\r\n\t\t\tout.attributes.selected = \"selected\";\r\n\t\t}\r\n\r\n\t\tout.attributes.value = model.get(\"layerid\");\r\n\r\n\t\treturn out;\r\n\t},\r\n\r\n\tinitialize: function(options) {\r\n\t\tthis.layer = options.layer;\r\n\t}\r\n\r\n});\r\n\r\n\r\nvar ScreenLayerItemView = Mn.View.extend({\r\n\r\n\ttemplate: screenLayerTmpl,\r\n\r\n\ttagName: \"div\",\r\n\tclassName: \"pure-control-group\",\r\n\r\n\tregions: {\r\n\t\t\"layer_list\": \"[data-region=layer_list]\"\r\n\t},\r\n\r\n\tinitialize: function(options) {\r\n\t\tthis.layers = options.layers;\r\n\t},\r\n\r\n\tonRender: function() {\r\n\t\tthis.showChildView(\"layer_list\", new SelectView({\r\n\t\t\tcollection: this.layers,\r\n\t\t\tlayer: this.layers.findWhere({ layerid: this.model.get(\"layerid\") }),\r\n\t\t\tattributes: {\r\n\t\t\t\t\"name\": this.model.get(\"viewstate\").name,\r\n\t\t\t}\r\n\t\t}));\r\n\t}\r\n\r\n});\r\n\r\n\r\n/**\r\n * List of screens + layers\r\n *\r\n * model: eventModel\r\n * collection: the `peviews` array for the eventModel\r\n *\r\n * Each ItemView is a <select> list of layers for a `peviews` entry of an event.\r\n *\r\n */\r\nvar ScreenLayerListView = Mn.CollectionView.extend({\r\n\r\n\ttemplate: _.noop(),\r\n\tchildView: ScreenLayerItemView,\r\n\r\n\t_storeChannel: null,\r\n\r\n\tinitialize: function() {\r\n\t\tthis._storeChannel = Radio.channel(\"store\");\r\n\t},\r\n\r\n\tchildViewOptions: function(model, index) {\r\n\t\treturn {\r\n\t\t\tmodel: model,\r\n\t\t\tevent: this.model,\r\n\t\t\t// views: this.collection,\r\n\t\t\tlayers: this._storeChannel.request(\"layerCollection\")\r\n\t\t}\r\n\t}\r\n\r\n\r\n});\r\n\r\n\r\nvar EventEditView = Mn.View.extend({\r\n\r\n\ttagName: \"div\",\r\n\tclassName: \"panel\",\r\n\ttemplate: mainTmpl,\r\n\r\n\tregions: {\r\n\t\t\"views\": \"[data-region=views]\"\r\n\t},\r\n\r\n\tui: {\r\n\t\t\"btn_save\": \"[data-ui=btn_save]\",\r\n\t\t\"btn_cancel\": \"[data-ui=btn_cancel]\",\r\n\t\t\"btn_delete\": \"[data-ui=btn_delete]\",\r\n\t\t\"input_name\": \"input[name=name]\"\r\n\t},\r\n\r\n\tevents: {\r\n\t\t\"click @ui.btn_cancel\": \"handleCancel\",\r\n\t\t\"click @ui.btn_save\": \"handleSave\",\r\n\t\t\"click @ui.btn_delete\": \"handleDelete\",\r\n\t\t\"keypress @ui.input_name\": \"handleEnter\"\r\n\t},\r\n\r\n\tmodelEvents: {\r\n\t\t\"remove\": \"destroy\"\r\n\t},\r\n\r\n\t_dispatchChannel: null,\r\n\t_appChannel: null,\r\n\r\n\tinitialize: function() {\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t\tthis._appChannel = Radio.channel(\"app\");\r\n\t\tthis._storeChannel = Radio.channel(\"store\");\r\n\t\tthis.layerCollection = this._storeChannel.request(\"layerCollection\");\r\n\t},\r\n\r\n\tonRender: function() {\r\n\t\tthis.showChildView(\"views\", new ScreenLayerListView({\r\n\t\t\t// Make a collection out of this event's `peviews` array\r\n\t\t\tcollection: new Bb.Collection(this.model.get(\"peviews\")),\r\n\t\t\t// model: the event\r\n\t\t\tmodel: this.model\r\n\t\t}));\r\n\t},\r\n\r\n\tonAttach: function() {\r\n\t\tthis.ui.input_name.focus();\r\n\t},\r\n\r\n\thandleCancel: function() {\r\n\t\tthis._dispatchChannel.request(\"event:select\", { event: null });\r\n\t\tthis.destroy();\r\n\t},\r\n\r\n\thandleSave: function() {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\t// Listen once to a eventModel validation error, and just raise it to the UI.\r\n\t\tthis.listenToOnce(this.model, \"invalid\", function(eventModel, error) {\r\n\t\t\tself._appChannel.request(\"ui:error\", {\r\n\t\t\t\tmessage: error\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.listenToOnce(this.model, \"change\", function(eventModel) {\r\n\t\t\tself._dispatchChannel.request(\"io:send_events\");\r\n\t\t});\r\n\r\n\t\t// Update the model with the new props\r\n\t\t// Because we pass {validate: true}, `update` will be false if the validation fails.\r\n\t\t// var update = this.model.set({ \"name\": this.ui.input_name.val() }, { validate: true });\r\n\r\n\t\tvar attrs = {},\r\n\t\t\tsetOptions = { silent: false };\r\n\r\n\t\tif (this.model.get(\"name\") !== \"startevent\") {\r\n\t\t\tattrs.name = this.ui.input_name.val();\r\n\t\t\tsetOptions.validate = true;\r\n\t\t}\r\n\r\n\t\tvar peviews = this.model.get(\"peviews\");\r\n\r\n\t\t_.each(peviews, function(viewdata, idx) {\r\n\r\n\t\t\tvar viewName = viewdata.viewstate.name,\r\n\t\t\t\t$input = self.$(\"select[name=\" + viewName + \"]\"),\r\n\t\t\t\tselectedLayerId = $input.find(\":selected\").val(),\r\n\t\t\t\tlayerModel = self.layerCollection.findWhere({ layerid: selectedLayerId });\r\n\r\n\t\t\t// console.log(\"peviews index \" + idx + \" and viewname \" + viewName + \" should be set to layername \" + layerModel.get(\"layername\"))\r\n\r\n\t\t\tpeviews[idx].layerid = layerModel.get(\"layerid\");\r\n\t\t\tpeviews[idx].layername = layerModel.get(\"layername\");\r\n\t\t});\r\n\r\n\t\t// We need to quietly unset the peviews.\r\n\t\t// Otherwise, just setting the array again doesn't trigger \"change\" event\r\n\t\tthis.model.unset(\"peviews\", { silent: true });\r\n\r\n\t\tattrs.peviews = peviews;\r\n\r\n\t\tvar update = this.model.set(attrs, setOptions);\r\n\r\n\t\tif (update) {\r\n\t\t\t// Only remove the view if the change is successful.\r\n\t\t\tthis.destroy();\r\n\t\t}\r\n\t},\r\n\r\n\thandleDelete: function() {\r\n\t\tthis._appChannel.trigger(\"event:confirm_delete\", { event: this.model });\r\n\t},\r\n\r\n\r\n\thandleEnter: function(e) {\r\n\t\tif (e.which == config.DOM_VK_RETURN) {\r\n\t\t\tthis.handleSave();\r\n\t\t}\r\n\t}\r\n\r\n\r\n});\r\n\r\n\r\nmodule.exports = EventEditView;\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<h3><i class=\"fa fa-bolt\"></i> Edit Event: '+\n((__t=( name ))==null?'':__t)+\n'</h3>\\r\\n\\r\\n<div class=\"pure-form pure-form-stacked\">\\r\\n\\r\\n\t';\n if (name !== \"startevent\") { \n__p+='\\r\\n\t<div class=\"pure-control-group\">\\r\\n\t\t<div class=\"pure-form-label\">\\r\\n\t\t\t<label for=\"name\">Name</label>\\r\\n\t\t</div>\\r\\n\t\t<div class=\"pure-form-input\">\\r\\n\t\t\t<input name=\"name\" type=\"text\" value=\"'+\n((__t=( name ))==null?'':_.escape(__t))+\n'\">\\r\\n\t\t</div>\\r\\n\t</div>\\r\\n\t';\n } \n__p+='\\r\\n\\r\\n\t<div data-region=\"views\"></div>\\r\\n\\r\\n\t<div class=\"button-collection\">\\r\\n\t\t<button class=\"pure-button\" type=\"button\" data-ui=\"btn_save\"><i class=\"fa fa-check\"></i> Save</button>\\r\\n\t\t<button class=\"pure-button button-secondary\" type=\"button\" data-ui=\"btn_cancel\">Cancel</button>\\r\\n\t\t';\n if (name !== \"startevent\") { \n__p+='\\r\\n\t\t<button class=\"pure-button button-negative\" type=\"button\" data-ui=\"btn_delete\"><i class=\"fa fa-times\"></i> Delete</button>\\r\\n\t\t';\n } \n__p+='\\r\\n\t</div>\\r\\n\\r\\n</div>\\r\\n';\n}\nreturn __p;\n};\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<div class=\"pure-form-label\">\\r\\n\t<label for=\"name\">'+\n((__t=( viewstate.name ))==null?'':_.escape(__t))+\n'</label>\\r\\n</div>\\r\\n<div class=\"pure-form-input\">\\r\\n\t<div data-region=\"layer_list\"></div>\\r\\n</div>';\n}\nreturn __p;\n};\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar Mn = __webpack_require__(1),\r\n\tRadio = __webpack_require__(0),\r\n\tmainTmpl = __webpack_require__(43);\r\n\r\n\r\nvar PresentView = Mn.View.extend({\r\n\r\n\ttagName: \"div\",\r\n\tclassName: \"panel panel-sm panel-alt add-bottom\",\r\n\ttemplate: mainTmpl,\r\n\r\n\tui: {\r\n\t\t\"play_mode\": \"[data-ui=play_mode]\",\r\n\t\t\"btn_next_event\": \"[data-ui=btn_next_event]\"\r\n\t},\r\n\r\n\tevents: {\r\n\t\t\"click @ui.play_mode\": \"setPlayMode\",\r\n\t\t\"click @ui.btn_next_event\": \"handleNextEvent\"\r\n\t},\r\n\r\n\t_dispatchChannel: null,\r\n\r\n\tinitialize: function() {\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t},\r\n\r\n\tsetPlayMode: function() {\r\n\t\tvar playMode = this.ui.play_mode.is(\":checked\");\r\n\t\tthis._dispatchChannel.request(\"store:play_mode\", { \"playMode\": playMode });\r\n\t},\r\n\r\n\thandleNextEvent: function() {\r\n\t\tthis._dispatchChannel.request(\"event:next\");\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = PresentView;\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<h3><i class=\"fa fa-fw fa-rocket\"></i> Present</h3>\\r\\n<div data-region=\"present\">\\r\\n\t<div class=\"pure-form\"><label><input type=\"checkbox\" data-ui=\"play_mode\"> Play mode</label></div>\\r\\n\t<br>\\r\\n\t<button class=\"pure-button size-sm\" data-ui=\"btn_next_event\">Next <i class=\"fa fa-fw fa-step-forward\"></i></button>\\r\\n</div>\\r\\n';\n}\nreturn __p;\n};\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<div class=\"sidebar pure-u-1 pure-u-sm-1-4 pure-u-xl-1-5\">\\r\\n\\r\\n\t<h2><span data-ui=\"project_name\"></span></h2>\\r\\n\t<div class=\"button-collection add-bottom\">\\r\\n\t\t<button class=\"pure-button size-sm\" data-ui=\"btn_groups_toggle\" data-action=\"expand\"><i class=\"fa fa-fw fa-expand\"></i> Expand all groups</button>\\r\\n\t\t<button class=\"pure-button size-sm\" data-ui=\"btn_groups_toggle\" data-action=\"collapse\"><i class=\"fa fa-fw fa-compress\"></i> Collapse all groups</button>\\r\\n\t</div>\\r\\n\\r\\n\t<div data-region=\"present\"></div>\\r\\n\\r\\n\t<h3><i class=\"fa fa-fw fa-desktop\"></i> Screens</h3>\\r\\n\t<div data-region=\"screens\"></div>\\r\\n\\r\\n\t<br><br>\\r\\n\\r\\n\t<div data-region=\"props\"></div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\"content pure-u-1 pure-u-sm-3-4 pure-u-xl-4-5\">\\r\\n\\r\\n\t<div class=\"add-bottom\">\\r\\n\t\t<h2><i class=\"fa fa-fw fa-bolt\"></i> Events</h2>\\r\\n\t\t<button class=\"pure-button\" data-ui=\"btn_add_group\"><i class=\"fa fa-fw fa-object-group\"></i> Add Group</button>\\r\\n\t</div>\\r\\n\\r\\n\t<div data-region=\"groups\"></div>\\r\\n\\r\\n</div>';\n}\nreturn __p;\n};\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar require;var require;(function(f){if(true){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.vexDialog = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\n/**\n * Expose `parse`.\n */\n\nmodule.exports = parse;\n\n/**\n * Tests for browser support.\n */\n\nvar innerHTMLBug = false;\nvar bugTestDiv;\nif (typeof document !== 'undefined') {\n  bugTestDiv = document.createElement('div');\n  // Setup\n  bugTestDiv.innerHTML = '  <link/><table></table><a href=\"/a\">a</a><input type=\"checkbox\"/>';\n  // Make sure that link elements get serialized correctly by innerHTML\n  // This requires a wrapper element in IE\n  innerHTMLBug = !bugTestDiv.getElementsByTagName('link').length;\n  bugTestDiv = undefined;\n}\n\n/**\n * Wrap map from jquery.\n */\n\nvar map = {\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  // for script/link/style tags to work in IE6-8, you have to wrap\n  // in a div with a non-whitespace character in front, ha!\n  _default: innerHTMLBug ? [1, 'X<div>', '</div>'] : [0, '', '']\n};\n\nmap.td =\nmap.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option =\nmap.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead =\nmap.tbody =\nmap.colgroup =\nmap.caption =\nmap.tfoot = [1, '<table>', '</table>'];\n\nmap.polyline =\nmap.ellipse =\nmap.polygon =\nmap.circle =\nmap.text =\nmap.line =\nmap.path =\nmap.rect =\nmap.g = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">','</svg>'];\n\n/**\n * Parse `html` and return a DOM Node instance, which could be a TextNode,\n * HTML DOM Node of some kind (<div> for example), or a DocumentFragment\n * instance, depending on the contents of the `html` string.\n *\n * @param {String} html - HTML string to \"domify\"\n * @param {Document} doc - The `document` instance to create the Node for\n * @return {DOMNode} the TextNode, DOM Node, or DocumentFragment instance\n * @api private\n */\n\nfunction parse(html, doc) {\n  if ('string' != typeof html) throw new TypeError('String expected');\n\n  // default to the global `document` object\n  if (!doc) doc = document;\n\n  // tag name\n  var m = /<([\\w:]+)/.exec(html);\n  if (!m) return doc.createTextNode(html);\n\n  html = html.replace(/^\\s+|\\s+$/g, ''); // Remove leading/trailing whitespace\n\n  var tag = m[1];\n\n  // body support\n  if (tag == 'body') {\n    var el = doc.createElement('html');\n    el.innerHTML = html;\n    return el.removeChild(el.lastChild);\n  }\n\n  // wrap map\n  var wrap = map[tag] || map._default;\n  var depth = wrap[0];\n  var prefix = wrap[1];\n  var suffix = wrap[2];\n  var el = doc.createElement('div');\n  el.innerHTML = prefix + html + suffix;\n  while (depth--) el = el.lastChild;\n\n  // one element\n  if (el.firstChild == el.lastChild) {\n    return el.removeChild(el.firstChild);\n  }\n\n  // several elements\n  var fragment = doc.createDocumentFragment();\n  while (el.firstChild) {\n    fragment.appendChild(el.removeChild(el.firstChild));\n  }\n\n  return fragment;\n}\n\n},{}],2:[function(require,module,exports){\n// get successful control from form and assemble into object\n// http://www.w3.org/TR/html401/interact/forms.html#h-17.13.2\n\n// types which indicate a submit action and are not successful controls\n// these will be ignored\nvar k_r_submitter = /^(?:submit|button|image|reset|file)$/i;\n\n// node names which could be successful controls\nvar k_r_success_contrls = /^(?:input|select|textarea|keygen)/i;\n\n// Matches bracket notation.\nvar brackets = /(\\[[^\\[\\]]*\\])/g;\n\n// serializes form fields\n// @param form MUST be an HTMLForm element\n// @param options is an optional argument to configure the serialization. Default output\n// with no options specified is a url encoded string\n//    - hash: [true | false] Configure the output type. If true, the output will\n//    be a js object.\n//    - serializer: [function] Optional serializer function to override the default one.\n//    The function takes 3 arguments (result, key, value) and should return new result\n//    hash and url encoded str serializers are provided with this module\n//    - disabled: [true | false]. If true serialize disabled fields.\n//    - empty: [true | false]. If true serialize empty fields\nfunction serialize(form, options) {\n    if (typeof options != 'object') {\n        options = { hash: !!options };\n    }\n    else if (options.hash === undefined) {\n        options.hash = true;\n    }\n\n    var result = (options.hash) ? {} : '';\n    var serializer = options.serializer || ((options.hash) ? hash_serializer : str_serialize);\n\n    var elements = form && form.elements ? form.elements : [];\n\n    //Object store each radio and set if it's empty or not\n    var radio_store = Object.create(null);\n\n    for (var i=0 ; i<elements.length ; ++i) {\n        var element = elements[i];\n\n        // ingore disabled fields\n        if ((!options.disabled && element.disabled) || !element.name) {\n            continue;\n        }\n        // ignore anyhting that is not considered a success field\n        if (!k_r_success_contrls.test(element.nodeName) ||\n            k_r_submitter.test(element.type)) {\n            continue;\n        }\n\n        var key = element.name;\n        var val = element.value;\n\n        // we can't just use element.value for checkboxes cause some browsers lie to us\n        // they say \"on\" for value when the box isn't checked\n        if ((element.type === 'checkbox' || element.type === 'radio') && !element.checked) {\n            val = undefined;\n        }\n\n        // If we want empty elements\n        if (options.empty) {\n            // for checkbox\n            if (element.type === 'checkbox' && !element.checked) {\n                val = '';\n            }\n\n            // for radio\n            if (element.type === 'radio') {\n                if (!radio_store[element.name] && !element.checked) {\n                    radio_store[element.name] = false;\n                }\n                else if (element.checked) {\n                    radio_store[element.name] = true;\n                }\n            }\n\n            // if options empty is true, continue only if its radio\n            if (!val && element.type == 'radio') {\n                continue;\n            }\n        }\n        else {\n            // value-less fields are ignored unless options.empty is true\n            if (!val) {\n                continue;\n            }\n        }\n\n        // multi select boxes\n        if (element.type === 'select-multiple') {\n            val = [];\n\n            var selectOptions = element.options;\n            var isSelectedOptions = false;\n            for (var j=0 ; j<selectOptions.length ; ++j) {\n                var option = selectOptions[j];\n                var allowedEmpty = options.empty && !option.value;\n                var hasValue = (option.value || allowedEmpty);\n                if (option.selected && hasValue) {\n                    isSelectedOptions = true;\n\n                    // If using a hash serializer be sure to add the\n                    // correct notation for an array in the multi-select\n                    // context. Here the name attribute on the select element\n                    // might be missing the trailing bracket pair. Both names\n                    // \"foo\" and \"foo[]\" should be arrays.\n                    if (options.hash && key.slice(key.length - 2) !== '[]') {\n                        result = serializer(result, key + '[]', option.value);\n                    }\n                    else {\n                        result = serializer(result, key, option.value);\n                    }\n                }\n            }\n\n            // Serialize if no selected options and options.empty is true\n            if (!isSelectedOptions && options.empty) {\n                result = serializer(result, key, '');\n            }\n\n            continue;\n        }\n\n        result = serializer(result, key, val);\n    }\n\n    // Check for all empty radio buttons and serialize them with key=\"\"\n    if (options.empty) {\n        for (var key in radio_store) {\n            if (!radio_store[key]) {\n                result = serializer(result, key, '');\n            }\n        }\n    }\n\n    return result;\n}\n\nfunction parse_keys(string) {\n    var keys = [];\n    var prefix = /^([^\\[\\]]*)/;\n    var children = new RegExp(brackets);\n    var match = prefix.exec(string);\n\n    if (match[1]) {\n        keys.push(match[1]);\n    }\n\n    while ((match = children.exec(string)) !== null) {\n        keys.push(match[1]);\n    }\n\n    return keys;\n}\n\nfunction hash_assign(result, keys, value) {\n    if (keys.length === 0) {\n        result = value;\n        return result;\n    }\n\n    var key = keys.shift();\n    var between = key.match(/^\\[(.+?)\\]$/);\n\n    if (key === '[]') {\n        result = result || [];\n\n        if (Array.isArray(result)) {\n            result.push(hash_assign(null, keys, value));\n        }\n        else {\n            // This might be the result of bad name attributes like \"[][foo]\",\n            // in this case the original `result` object will already be\n            // assigned to an object literal. Rather than coerce the object to\n            // an array, or cause an exception the attribute \"_values\" is\n            // assigned as an array.\n            result._values = result._values || [];\n            result._values.push(hash_assign(null, keys, value));\n        }\n\n        return result;\n    }\n\n    // Key is an attribute name and can be assigned directly.\n    if (!between) {\n        result[key] = hash_assign(result[key], keys, value);\n    }\n    else {\n        var string = between[1];\n        // +var converts the variable into a number\n        // better than parseInt because it doesn't truncate away trailing\n        // letters and actually fails if whole thing is not a number\n        var index = +string;\n\n        // If the characters between the brackets is not a number it is an\n        // attribute name and can be assigned directly.\n        if (isNaN(index)) {\n            result = result || {};\n            result[string] = hash_assign(result[string], keys, value);\n        }\n        else {\n            result = result || [];\n            result[index] = hash_assign(result[index], keys, value);\n        }\n    }\n\n    return result;\n}\n\n// Object/hash encoding serializer.\nfunction hash_serializer(result, key, value) {\n    var matches = key.match(brackets);\n\n    // Has brackets? Use the recursive assignment function to walk the keys,\n    // construct any missing objects in the result tree and make the assignment\n    // at the end of the chain.\n    if (matches) {\n        var keys = parse_keys(key);\n        hash_assign(result, keys, value);\n    }\n    else {\n        // Non bracket notation can make assignments directly.\n        var existing = result[key];\n\n        // If the value has been assigned already (for instance when a radio and\n        // a checkbox have the same name attribute) convert the previous value\n        // into an array before pushing into it.\n        //\n        // NOTE: If this requirement were removed all hash creation and\n        // assignment could go through `hash_assign`.\n        if (existing) {\n            if (!Array.isArray(existing)) {\n                result[key] = [ existing ];\n            }\n\n            result[key].push(value);\n        }\n        else {\n            result[key] = value;\n        }\n    }\n\n    return result;\n}\n\n// urlform encoding serializer\nfunction str_serialize(result, key, value) {\n    // encode newlines as \\r\\n cause the html spec says so\n    value = value.replace(/(\\r)?\\n/g, '\\r\\n');\n    value = encodeURIComponent(value);\n\n    // spaces should be '+' rather than '%20'.\n    value = value.replace(/%20/g, '+');\n    return result + (result ? '&' : '') + encodeURIComponent(key) + '=' + value;\n}\n\nmodule.exports = serialize;\n\n},{}],3:[function(require,module,exports){\nvar domify = require('domify')\r\nvar serialize = require('form-serialize')\r\n\r\n// Build DOM elements for the structure of the dialog\r\nvar buildDialogForm = function buildDialogForm (options) {\r\n  var form = document.createElement('form')\r\n  form.classList.add('vex-dialog-form')\r\n\r\n  var message = document.createElement('div')\r\n  message.classList.add('vex-dialog-message')\r\n  message.appendChild(options.message instanceof window.Node ? options.message : domify(options.message))\r\n\r\n  var input = document.createElement('div')\r\n  input.classList.add('vex-dialog-input')\r\n  input.appendChild(options.input instanceof window.Node ? options.input : domify(options.input))\r\n\r\n  form.appendChild(message)\r\n  form.appendChild(input)\r\n\r\n  return form\r\n}\r\n\r\n// Take an array of buttons (see the default buttons below) and turn them into DOM elements\r\nvar buttonsToDOM = function buttonsToDOM (buttons) {\r\n  var domButtons = document.createElement('div')\r\n  domButtons.classList.add('vex-dialog-buttons')\r\n\r\n  for (var i = 0; i < buttons.length; i++) {\r\n    var button = buttons[i]\r\n    var domButton = document.createElement('button')\r\n    domButton.type = button.type\r\n    domButton.textContent = button.text\r\n    domButton.className = button.className\r\n    domButton.classList.add('vex-dialog-button')\r\n    if (i === 0) {\r\n      domButton.classList.add('vex-first')\r\n    } else if (i === buttons.length - 1) {\r\n      domButton.classList.add('vex-last')\r\n    }\r\n    // Attach click listener to button with closure\r\n    (function (button) {\r\n      domButton.addEventListener('click', function (e) {\r\n        if (button.click) {\r\n          button.click.call(this, e)\r\n        }\r\n      }.bind(this))\r\n    }.bind(this)(button))\r\n\r\n    domButtons.appendChild(domButton)\r\n  }\r\n\r\n  return domButtons\r\n}\r\n\r\nvar plugin = function plugin (vex) {\r\n  // Define the API first\r\n  var dialog = {\r\n    // Plugin name\r\n    name: 'dialog',\r\n\r\n    // Open\r\n    open: function open (opts) {\r\n      var options = Object.assign({}, this.defaultOptions, opts)\r\n\r\n      // `message` is unsafe internally, so translate\r\n      // safe default: HTML-escape the message before passing it through\r\n      if (options.unsafeMessage && !options.message) {\r\n        options.message = options.unsafeMessage\r\n      } else if (options.message) {\r\n        options.message = vex._escapeHtml(options.message)\r\n      }\r\n\r\n      // Build the form from the options\r\n      var form = options.unsafeContent = buildDialogForm(options)\r\n\r\n      // Open the dialog\r\n      var dialogInstance = vex.open(options)\r\n\r\n      // Quick comment - these options and appending buttons and everything\r\n      // would preferably be done _before_ opening the dialog. However, since\r\n      // they rely on the context of the vex instance, we have to do them\r\n      // after. A potential future fix would be to differentiate between\r\n      // a \"created\" vex instance and an \"opened\" vex instance, so any actions\r\n      // that rely on the specific context of the instance can do their stuff\r\n      // before opening the dialog on the page.\r\n\r\n      // Override the before close callback to also pass the value of the form\r\n      var beforeClose = options.beforeClose && options.beforeClose.bind(dialogInstance)\r\n      dialogInstance.options.beforeClose = function dialogBeforeClose () {\r\n        // Only call the callback once - when the validation in beforeClose, if present, is true\r\n        var shouldClose = beforeClose ? beforeClose() : true\r\n        if (shouldClose) {\r\n          options.callback(this.value || false)\r\n        }\r\n        // Return the result of beforeClose() to vex\r\n        return shouldClose\r\n      }.bind(dialogInstance)\r\n\r\n      // Append buttons to form with correct context\r\n      form.appendChild(buttonsToDOM.call(dialogInstance, options.buttons))\r\n\r\n      // Attach form to instance\r\n      dialogInstance.form = form\r\n\r\n      // Add submit listener to form\r\n      form.addEventListener('submit', options.onSubmit.bind(dialogInstance))\r\n\r\n      // Optionally focus the first input in the form\r\n      if (options.focusFirstInput) {\r\n        var el = dialogInstance.contentEl.querySelector('button, input, select, textarea')\r\n        if (el) {\r\n          el.focus()\r\n        }\r\n      }\r\n\r\n      // For chaining\r\n      return dialogInstance\r\n    },\r\n\r\n    // Alert\r\n    alert: function (options) {\r\n      // Allow string as message\r\n      if (typeof options === 'string') {\r\n        options = {\r\n          message: options\r\n        }\r\n      }\r\n      options = Object.assign({}, this.defaultOptions, this.defaultAlertOptions, options)\r\n      return this.open(options)\r\n    },\r\n\r\n    // Confirm\r\n    confirm: function (options) {\r\n      if (typeof options !== 'object' || typeof options.callback !== 'function') {\r\n        throw new Error('dialog.confirm(options) requires options.callback.')\r\n      }\r\n      options = Object.assign({}, this.defaultOptions, this.defaultConfirmOptions, options)\r\n      return this.open(options)\r\n    },\r\n\r\n    // Prompt\r\n    prompt: function (options) {\r\n      if (typeof options !== 'object' || typeof options.callback !== 'function') {\r\n        throw new Error('dialog.prompt(options) requires options.callback.')\r\n      }\r\n      var defaults = Object.assign({}, this.defaultOptions, this.defaultPromptOptions)\r\n      var dynamicDefaults = {\r\n        unsafeMessage: '<label for=\"vex\">' + vex._escapeHtml(options.label || defaults.label) + '</label>',\r\n        input: '<input name=\"vex\" type=\"text\" class=\"vex-dialog-prompt-input\" placeholder=\"' + vex._escapeHtml(options.placeholder || defaults.placeholder) + '\" value=\"' + vex._escapeHtml(options.value || defaults.value) + '\" />'\r\n      }\r\n      options = Object.assign(defaults, dynamicDefaults, options)\r\n      // Pluck the value of the \"vex\" input field as the return value for prompt's callback\r\n      // More closely mimics \"window.prompt\" in that a single string is returned\r\n      var callback = options.callback\r\n      options.callback = function promptCallback (value) {\r\n        if (typeof value === 'object') {\r\n          var keys = Object.keys(value)\r\n          value = keys.length ? value[keys[0]] : ''\r\n        }\r\n        callback(value)\r\n      }\r\n      return this.open(options)\r\n    }\r\n  }\r\n\r\n  // Now define any additional data that's not the direct dialog API\r\n  dialog.buttons = {\r\n    YES: {\r\n      text: 'OK',\r\n      type: 'submit',\r\n      className: 'vex-dialog-button-primary',\r\n      click: function yesClick () {\r\n        this.value = true\r\n      }\r\n    },\r\n\r\n    NO: {\r\n      text: 'Cancel',\r\n      type: 'button',\r\n      className: 'vex-dialog-button-secondary',\r\n      click: function noClick () {\r\n        this.value = false\r\n        this.close()\r\n      }\r\n    }\r\n  }\r\n\r\n  dialog.defaultOptions = {\r\n    callback: function () {},\r\n    afterOpen: function () {},\r\n    message: '',\r\n    input: '',\r\n    buttons: [\r\n      dialog.buttons.YES,\r\n      dialog.buttons.NO\r\n    ],\r\n    showCloseButton: false,\r\n    onSubmit: function onDialogSubmit (e) {\r\n      e.preventDefault()\r\n      if (this.options.input) {\r\n        this.value = serialize(this.form, { hash: true })\r\n      }\r\n      return this.close()\r\n    },\r\n    focusFirstInput: true\r\n  }\r\n\r\n  dialog.defaultAlertOptions = {\r\n    buttons: [\r\n      dialog.buttons.YES\r\n    ]\r\n  }\r\n\r\n  dialog.defaultPromptOptions = {\r\n    label: 'Prompt:',\r\n    placeholder: '',\r\n    value: ''\r\n  }\r\n\r\n  dialog.defaultConfirmOptions = {}\r\n\r\n  return dialog\r\n}\r\n\r\nmodule.exports = plugin\r\n\n},{\"domify\":1,\"form-serialize\":2}]},{},[3])(3)\n});\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar Mn = __webpack_require__(1),\r\n\tRadio = __webpack_require__(0);\r\n\r\nmodule.exports = Mn.Object.extend({\r\n\r\n\tinitialize: function(options) {\r\n\t\tconsole.log(\"Action | app_start | initialize\");\r\n\t\tthis._commsChannel = Radio.channel(\"comms\");\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t\tthis._dispatchChannel.reply(\"app:start\", this.handleAppStart, this);\r\n\t},\r\n\r\n\thandleAppStart: function(data) {\r\n\t\tconsole.log(\"Action | app_start | handleAppStart()\");\r\n\t\tthis._commsChannel.request(\"txPEventsCheckDesign\");\r\n\t}\r\n\r\n});\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar Mn = __webpack_require__(1),\r\n\tRadio = __webpack_require__(0);\r\n\r\nmodule.exports = Mn.Object.extend({\r\n\r\n\r\n\tinitialize: function(options) {\r\n\r\n\t\tconsole.log(\"Action | io | initialize\");\r\n\r\n\t\tthis._storeChannel = Radio.channel(\"store\");\r\n\t\tthis._commsChannel = Radio.channel(\"comms\");\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\r\n\t\tthis._dispatchChannel.reply(\"io:designready\", this.handleDesignReady, this);\r\n\t\tthis._dispatchChannel.reply(\"io:layerinfo\", this.handleLayerInfo, this);\r\n\t\tthis._dispatchChannel.reply(\"io:peinfo\", this.handlePeInfo, this);\r\n\t\tthis._dispatchChannel.reply(\"io:send_events\", this.handleSendEvents, this);\r\n\t\tthis._dispatchChannel.reply(\"io:update_actions\", this.handleUpdateActions, this);\r\n\t\tthis._dispatchChannel.reply(\"io:cast_event\", this.handleCastEvent, this);\r\n\t\tthis._dispatchChannel.reply(\"io:send_event_start\", this.handleSendEventStart, this);\r\n\t\tthis._dispatchChannel.reply(\"io:send_event_play\", this.handleSendEventPlay, this);\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Handle the Socket IO \"designready\" command.\r\n\t * Will receive the project info here.\r\n\t * Actions will be to update the projectModel and dispatch other actions to get further info.\r\n\t *\r\n\t * @param object data\t\tKeys will be `project` and `status`\r\n\t *\r\n\t */\r\n\thandleDesignReady: function(data) {\r\n\r\n\t\tconsole.log(\"Action | io | handleDesignReady()\");\r\n\r\n\t\tvar project = _.extend({ status: data.status }, data.project);\r\n\t\tvar projectModel = this._storeChannel.request(\"projectModel\");\r\n\r\n\t\tswitch (data.status) {\r\n\r\n\t\t\tcase \"openready\":\r\n\t\t\t\tprojectModel.set(project);\r\n\t\t\t\tthis._commsChannel.request(\"txPEventsGetPEInfo\");\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"newready\":\r\n\t\t\t\tprojectModel.set(project);\r\n\t\t\t\tthis._commsChannel.request(\"txPEventsGetLayerInfo\");\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tprojectModel.clear();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Handle the Socket IO \"layerinfo\" command.\r\n\t *\r\n\t * @param object data\t\tObject with a `layers` key, which will be array of layers\r\n\t *\r\n\t */\r\n\thandleLayerInfo: function(data) {\r\n\r\n\t\tconsole.log(\"Action | io | handleLayerInfo()\");\r\n\r\n\t\t// Get reference to store\r\n\t\tvar store = this._storeChannel.request(\"store\");\r\n\r\n\t\t// Reset layers to be this default list\r\n\t\tstore.layers = [{\r\n\t\t\tlayerid: \"none\",\r\n\t\t\tlayername: \"none\"\r\n\t\t}];\r\n\r\n\t\t// Add the ones we received from the data\r\n\t\tArray.prototype.push.apply(store.layers, data.layers);\r\n\t\tstore.layerCollection.reset(store.layers);\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Handle the Socket IO \"peinfo\" command.\r\n\t *\r\n\t * @param object data\t\tObject with a `peinfo` key, which will be presentevent info data\r\n\t *\r\n\t */\r\n\thandlePeInfo: function(data) {\r\n\r\n\t\tconsole.log(\"Action | io | handlePeInfo()\");\r\n\r\n\t\tvar store = this._storeChannel.request(\"store\");\r\n\r\n\t\tvar evlists = data.peinfo.evl,\r\n\t\t\tseviews = data.peinfo.sev,\r\n\t\t\tgroups = data.peinfo.groups,\r\n\t\t\tgroup_arr = [],\r\n\t\t\tview_arr = [],\r\n\t\t\tevent_arr = [];\r\n\r\n\t\tif (evlists.length <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Groups\r\n\t\t//\r\n\t\tif (groups === undefined || groups.length == 0) {\r\n\t\t\tgroup_arr.push({ index: 0, name: \"default\" });\r\n\t\t}\r\n\r\n\t\tArray.prototype.push.apply(group_arr, groups);\r\n\t\tstore.groupCollection.reset(group_arr);\r\n\r\n\r\n\t\t// Views (create views from first entry)\r\n\t\t//\r\n\t\tvar peviews = evlists[0].peviews;\r\n\t\t// loop through the info and create the view entries\r\n\t\tfor (var vi = 0; vi < peviews.length; vi++) {\r\n\t\t\tview_arr.push(peviews[vi].viewstate);\r\n\t\t}\r\n\t\tstore.viewCollection.reset(view_arr);\r\n\r\n\r\n\t\t// Events. Create the PEs\r\n\t\t//\r\n\t\tvar firstGroup = store.groupCollection.first();\r\n\t\tevent_arr.push(store.eventCollection.getStartEvent(seviews, firstGroup.get(\"name\")));\r\n\r\n\t\t//  (pei = present event index)\r\n\t\tfor (var pei = 0; pei < evlists.length; pei++) {\r\n\t\t\tevent_arr.push(evlists[pei]);\r\n\t\t}\r\n\t\tstore.eventCollection.reset(event_arr);\r\n\r\n\t\t// Now that the data has been parsed and the relevant collections set, request the layer info\r\n\t\tthis._commsChannel.request(\"txPEventsGetLayerInfo\");\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * New version of `txPEventsArr`\r\n\t *\r\n\t * Gather the data then request the comms channel sends the message.\r\n\t *\r\n\t */\r\n\thandleSendEvents: function() {\r\n\r\n\t\tconsole.log(\"Action | io | handleSendEvents()\");\r\n\r\n\t\t// Get info from events to create raw array for sending\r\n\r\n\t\tvar statearr = [],\r\n\t\t\tgrouparr = [],\r\n\t\t\tstartEvent = {},\r\n\t\t\tseviews = [],\r\n\t\t\teventCollection = this._storeChannel.request(\"eventCollection\"),\r\n\t\t\tgroupCollection = this._storeChannel.request(\"groupCollection\");\r\n\r\n\t\t// Iterate through all the events\r\n\t\teventCollection.each(function(eventModel) {\r\n\t\t\tif (eventModel.get(\"name\") == \"startevent\") {\r\n\t\t\t\t// Pick out start event separately (use this to build the views)\r\n\t\t\t\tstartEvent = eventModel.attributes;\r\n\t\t\t} else {\r\n\t\t\t\t// Otherwise: regular event; just get attrs\r\n\t\t\t\tstatearr.push(eventModel.attributes);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Iterate through the groups.\r\n\t\t// We need to send/store the groups separately as we need both name AND `index` (for sorting)\r\n\t\tgroupCollection.each(function(groupModel) {\r\n\t\t\tgrouparr.push(groupModel.attributes);\r\n\t\t});\r\n\r\n\t\t// Params needed for the comms channel event handler.\r\n\t\tvar params = {\r\n\t\t\tstatearr: statearr,\r\n\t\t\tseviews: startEvent.peviews,\r\n\t\t\tgrouparr: grouparr\r\n\t\t};\r\n\r\n\t\tthis._commsChannel.request(\"txPEventsArr\", params);\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Update the actions (in peviews) on each event when they change in the designscreen.\r\n\t *\r\n\t */\r\n\thandleUpdateActions: function(data) {\r\n\r\n\t\tconsole.log(\"Action | io | handleUpdateActions()\");\r\n\r\n\t\tvar statesarr = data.statesarr,\r\n\t\t\teventCollection = this._storeChannel.request(\"eventCollection\");\r\n\r\n\t\t// Loop through the items we have received\r\n\t\t_.each(statesarr, function(eventArr) {\r\n\t\t\t// Find the eventModel in the collection using the ID\r\n\t\t\tvar eventModel = eventCollection.get(eventArr.id);\r\n\t\t\t// Set the peviews array of the eventModel with the new data\r\n\t\t\teventModel.set(\"peviews\", eventArr.peviews);\r\n\t\t});\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Handle the cast event action.\r\n\t * This is triggered when a whole event is clicked.\r\n\t *\r\n\t */\r\n\thandleCastEvent: function(data) {\r\n\r\n\t\tconsole.log(\"Action | io | handleCastEvent()\");\r\n\r\n\t\tvar event = data.event;\r\n\r\n\t\tif (event.get(\"name\") == \"startevent\") {\r\n\t\t\tthis._commsChannel.request(\"castStartEvent\", { \"event\": event });\r\n\t\t} else {\r\n\t\t\tthis._commsChannel.request(\"castPresentEvent\", { \"event\": event });\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Handle the txstartEvent sending\r\n\t *\r\n\t */\r\n\thandleSendEventStart: function(data) {\r\n\t\tconsole.log(\"Action | io | handleSendEventStart()\");\r\n\t\tthis._commsChannel.request(\"txStartEvent\", { \"event\": data.event });\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Handle the txPlayEvent sending\r\n\t *\r\n\t */\r\n\thandleSendEventPlay: function(data) {\r\n\t\tconsole.log(\"Action | io | handleSendEventPlay()\");\r\n\t\tthis._commsChannel.request(\"txPlayEvent\", { \"event\": data.event });\r\n\t}\r\n\r\n\r\n});\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar $ = __webpack_require__(4),\r\n\tMn = __webpack_require__(1),\r\n\tRadio = __webpack_require__(0),\r\n\tsortable = __webpack_require__(9);\r\n\r\n\r\nmodule.exports = Mn.Object.extend({\r\n\r\n\tinitialize: function(options) {\r\n\r\n\t\t// console.log(\"Action | store | initialize\");\r\n\r\n\t\tthis._commsChannel = Radio.channel(\"comms\");\r\n\t\tthis._storeChannel = Radio.channel(\"store\");\r\n\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t\tthis._dispatchChannel.reply(\"store:sort\", this.handleStoreSort, this);\r\n\t\tthis._dispatchChannel.reply(\"store:play_mode\", this.handlePlayMode, this);\r\n\r\n\t\tthis._eventCollection = this._storeChannel.request(\"eventCollection\");\r\n\t\tthis._groupCollection = this._storeChannel.request(\"groupCollection\");\r\n\t\tthis._store = this._storeChannel.request(\"store\");\r\n\t},\r\n\r\n\r\n\thandleStoreSort: function(data) {\r\n\r\n\t\t// console.log(\"Action | store | handleStoreSort()\");\r\n\r\n\t\tvar groupResult = this._sortGroups();\r\n\t\tif ( ! groupResult) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar eventResult = this._sortEvents();\r\n\t\tif ( ! eventResult) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._dispatchChannel.request(\"io:send_events\");\r\n\t},\r\n\r\n\t_sortGroups: function() {\r\n\r\n\t\tvar self = this,\r\n\t\t\tgroupNodes = sortable(\".event-group-list\", \"serialize\"),\r\n\t\t\tmodelList = [],\r\n\t\t\tmodelCid = null;\r\n\r\n\t\tif (groupNodes.length != 1) {\r\n\t\t\tconsole.warn(\"Sort groups: Not exactly one group list. Cancelling\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Get first and only grouplist\r\n\t\tgroupNodes = groupNodes[0];\r\n\r\n\t\t_.each(groupNodes.children, function(el, idx) {\r\n\t\t\tmodelCid = $(el).data(\"group-model-cid\");\r\n\t\t\tmodelList.push(self._groupCollection.remove(modelCid, { silent: true }));\r\n\t\t});\r\n\r\n\t\t_.each(modelList, function(groupModel, idx) {\r\n\t\t\tself._groupCollection.add(groupModel, { at: idx, silent: true });\r\n\t\t});\r\n\r\n\t\tself._groupCollection.updateIndexes();\r\n\r\n\t\t// console.log(\"New Order:\");\r\n\t\t// console.log(self._groupCollection.pluck(\"name\"));\r\n\r\n\t\treturn true;\r\n\t},\r\n\r\n\t_sortEvents: function() {\r\n\r\n\t\tvar self = this,\r\n\t\t\teventNodes = sortable(\".js-event-list\", \"serialize\"),\r\n\t\t\teventModelList = [],\r\n\t\t\teventModelCid = null,\r\n\t\t\teventModel = null,\r\n\t\t\tgroupModelCid = null,\r\n\t\t\tgroupModel = null;\r\n\r\n\t\tif (eventNodes.length == 0) {\r\n\t\t\tconsole.warn(\"Sort events: No event lists\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Iterate through all the sortable event lists.\r\n\t\t// This list seems to be in group order too - which is perfect.\r\n\t\t_.each(eventNodes, function(eventGroup, groupIdx) {\r\n\r\n\t\t\t// eventGroup has \"list\" and \"children\"\r\n\t\t\t// eventGroup.list will be EventListView <ul> and will have the groupModel cid as data attr.\r\n\r\n\t\t\t// Get the group data for the list so we can update the model's \"group\" property\r\n\t\t\tgroupModelCid = $(eventGroup.list).data(\"group-model-cid\");\r\n\t\t\tgroupModel = self._groupCollection.get(groupModelCid);\r\n\r\n\t\t\t// Loop through the child <li> elements (EventItemView)\r\n\t\t\t_.each(eventGroup.children, function(eventEl, eventIdx) {\r\n\t\t\t\t// Get model via cid (on data attr)\r\n\t\t\t\teventModelCid = $(eventEl).data(\"event-model-cid\");\r\n\t\t\t\t// Remove the event from the collection\r\n\t\t\t\teventModel = self._eventCollection.remove(eventModelCid, { silent: true });\r\n\t\t\t\t// Update the event's group property\r\n\t\t\t\teventModel.set({ \"group\": groupModel.get(\"name\") }, { silent: true });\r\n\t\t\t\t// Add the model to a temporary array - which holds our new order.\r\n\t\t\t\teventModelList.push(eventModel);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// Re-add our ordered model list back to the collection.\r\n\t\t_.each(eventModelList, function(eventModelItem, idx) {\r\n\t\t\tself._eventCollection.add(eventModelItem, { at: idx, silent: true });\r\n\t\t});\r\n\r\n\t\tvar startEventModel = self._eventCollection.findWhere({ name: \"startevent\" });\r\n\t\tself._eventCollection.remove(startEventModel);\r\n\t\tstartEventModel.set(\"group\", self._groupCollection.first().get(\"name\"));\r\n\t\tself._eventCollection.add(startEventModel, { at: 0 });\r\n\r\n\t\t// Ensure \"index\" properties are updated for all event items\r\n\t\tself._eventCollection.updateIndexes();\r\n\r\n\t\tself._eventCollection.each(function(m) {\r\n\t\t\t// console.log(\"[\" + m.get(\"group\") + \"] \" + m.get(\"index\") + \": \" + m.get(\"name\"));\r\n\t\t});\r\n\r\n\t\treturn true;\r\n\t},\r\n\r\n\r\n\thandlePlayMode: function(data) {\r\n\t\tthis._store.setPlayMode(data.playMode);\r\n\t}\r\n\r\n\r\n});\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar Mn = __webpack_require__(1),\r\n\tRadio = __webpack_require__(0);\r\n\r\nmodule.exports = Mn.Object.extend({\r\n\r\n\r\n\tinitialize: function(options) {\r\n\r\n\t\tconsole.log(\"Action | views | initialize\");\r\n\r\n\t\tthis._storeChannel = Radio.channel(\"store\");\r\n\t\tthis._commsChannel = Radio.channel(\"comms\");\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t\tthis._appChannel = Radio.channel(\"app\");\r\n\r\n\t\tthis._dispatchChannel.reply(\"view:add\", this.handleAddView, this);\r\n\t\tthis._dispatchChannel.reply(\"view:edit\", this.handleEditView, this);\r\n\t\tthis._dispatchChannel.reply(\"view:rename\", this.handleRenameView, this);\r\n\t\tthis._dispatchChannel.reply(\"view:delete\", this.handleDeleteView, this);\r\n\t},\r\n\r\n\r\n\thandleAddView: function(data) {\r\n\r\n\t\tvar viewCollection = this._storeChannel.request(\"viewCollection\"),\r\n\t\t\teventCollection = this._storeChannel.request(\"eventCollection\");\r\n\r\n\t\tif ( ! viewCollection.canAddView()) {\r\n\t\t\tthis._appChannel.request(\"ui:error\", {\r\n\t\t\t\tmessage: \"Maximum number of views has been reached.\",\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar newView = viewCollection.createNew();\r\n\r\n\t\tif (newView) {\r\n\r\n\t\t\t// Tell the event collection to update its events with the new view\r\n\t\t\teventCollection.addView(newView);\r\n\r\n\t\t\t// Request a comms sync for data\r\n\t\t\tthis._dispatchChannel.request(\"io:send_events\");\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._dispatchChannel.request(\"ui:error\", {\r\n\t\t\tmessage: \"Unable to create new view\"\r\n\t\t});\r\n\t},\r\n\r\n\r\n\thandleEditView: function(data) {\r\n\t\t// This one is easy, just raise event on the appchannel so the main view can show it.\r\n\t\tthis._appChannel.trigger(\"view:edit\", data);\r\n\t},\r\n\r\n\r\n\thandleRenameView: function(data) {\r\n\r\n\t\t// Rename the view in all the events\r\n\t\tvar eventCollection = this._storeChannel.request(\"eventCollection\");\r\n\t\teventCollection.renameView(data.oldName, data.newName);\r\n\r\n\t\t// Request a comms sync for data\r\n\t\tthis._dispatchChannel.request(\"io:send_events\");\r\n\t},\r\n\r\n\r\n\thandleDeleteView: function(data) {\r\n\r\n\t\tvar viewCollection = this._storeChannel.request(\"viewCollection\"),\r\n\t\t\teventCollection = this._storeChannel.request(\"eventCollection\");\r\n\r\n\t\t// Remove view from the view collection\r\n\t\tviewCollection.remove(data.view);\r\n\r\n\t\t// remove the view from all events\r\n\t\teventCollection.deleteView(data.view);\r\n\r\n\t\t// Request a comms sync for data\r\n\t\tthis._dispatchChannel.request(\"io:send_events\");\r\n\t}\r\n\r\n\r\n});\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar Mn = __webpack_require__(1),\r\n\tRadio = __webpack_require__(0);\r\n\r\nmodule.exports = Mn.Object.extend({\r\n\r\n\r\n\tinitialize: function(options) {\r\n\r\n\t\tconsole.log(\"Action | groups | initialize\");\r\n\r\n\t\tthis._storeChannel = Radio.channel(\"store\");\r\n\t\tthis._commsChannel = Radio.channel(\"comms\");\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t\tthis._appChannel = Radio.channel(\"app\");\r\n\r\n\t\tthis._dispatchChannel.reply(\"group:add\", this.handleAddGroup, this);\r\n\t\tthis._dispatchChannel.reply(\"group:edit\", this.handleEditGroup, this);\r\n\t\tthis._dispatchChannel.reply(\"group:rename\", this.handleRenameGroup, this);\r\n\t\tthis._dispatchChannel.reply(\"group:delete\", this.handleDeleteGroup, this);\r\n\t},\r\n\r\n\thandleAddGroup: function(data) {\r\n\r\n\t\tconsole.log(\"Action | groups | handleAddGroup\");\r\n\r\n\t\tvar groupCollection = this._storeChannel.request(\"groupCollection\");\r\n\r\n\t\tif ( ! groupCollection.canAddGroup()) {\r\n\t\t\tthis._appChannel.request(\"ui:error\", {\r\n\t\t\t\tmessage: \"Maximum number of groups has been reached.\",\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar newGroup = groupCollection.createNew();\r\n\r\n\t\tif (newGroup) {\r\n\t\t\tgroupCollection.updateIndexes();\r\n\t\t\t// Request a comms sync for data\r\n\t\t\tthis._dispatchChannel.request(\"io:send_events\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.appchannel.request(\"ui:error\", {\r\n\t\t\tmessage: \"Unable to create new group\"\r\n\t\t});\r\n\t},\r\n\r\n\thandleEditGroup: function(data) {\r\n\t\t// This one is easy, just raise event on the appchannel so the main view can show it.\r\n\t\tthis._appChannel.trigger(\"group:edit\", data);\r\n\t},\r\n\r\n\thandleRenameGroup: function(data) {\r\n\r\n\t\tconsole.log(\"Action | groups | handleRenameGroup\");\r\n\r\n\t\t// Rename the view in all the events\r\n\t\tvar eventCollection = this._storeChannel.request(\"eventCollection\");\r\n\t\teventCollection.renameGroup(data.oldName, data.newName);\r\n\r\n\t\t// Request a comms sync for data\r\n\t\tthis._dispatchChannel.request(\"io:send_events\");\r\n\t},\r\n\r\n\r\n\thandleDeleteGroup: function(data) {\r\n\r\n\t\tconsole.log(\"Action | groups | handleDeleteGroup\");\r\n\r\n\t\tvar groupCollection = this._storeChannel.request(\"groupCollection\"),\r\n\t\t\teventCollection = this._storeChannel.request(\"eventCollection\");\r\n\r\n\t\tif (groupCollection.length == 1) {\r\n\t\t\tthis._appChannel.request(\"ui:error\", {\r\n\t\t\t\tmessage: \"You cannot delete the last remaining group.\"\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar groupName = data.group.get(\"name\");\r\n\r\n\t\t// Remove events from collection where their group name matches groupName being deleted.\r\n\t\teventCollection.remove(eventCollection.filter(function(eventModel) {\r\n\t\t\treturn (eventModel.get(\"group\") == groupName && eventModel.get(\"name\") !== \"startevent\");\r\n\t\t}));\r\n\r\n\t\t// Remove group from the group collection\r\n\t\tgroupCollection.remove(data.group);\r\n\r\n\t\tgroupCollection.updateIndexes();\r\n\r\n\t\t// Request a comms sync for data\r\n\t\tthis._dispatchChannel.request(\"io:send_events\");\r\n\t}\r\n\r\n\r\n});\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar Mn = __webpack_require__(1),\r\n\tRadio = __webpack_require__(0);\r\n\r\nmodule.exports = Mn.Object.extend({\r\n\r\n\r\n\tinitialize: function(options) {\r\n\r\n\t\tconsole.log(\"Action | events | initialize\");\r\n\r\n\t\tthis._storeChannel = Radio.channel(\"store\");\r\n\t\tthis._commsChannel = Radio.channel(\"comms\");\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t\tthis._appChannel = Radio.channel(\"app\");\r\n\r\n\t\tthis._store = this._storeChannel.request(\"store\");\r\n\r\n\t\tthis._dispatchChannel.reply(\"event:add\", this.handleAddEvent, this);\r\n\t\tthis._dispatchChannel.reply(\"event:select\", this.handleSelectEvent, this);\r\n\t\tthis._dispatchChannel.reply(\"event:change\", this.handleChangeEvent, this);\r\n\t\tthis._dispatchChannel.reply(\"event:delete\", this.handleDeleteEvent, this);\r\n\t\tthis._dispatchChannel.reply(\"event:start\", this.handleStartEvent, this);\r\n\t\tthis._dispatchChannel.reply(\"event:play\", this.handlePlayEvent, this);\r\n\t\tthis._dispatchChannel.reply(\"event:next\", this.handleNextEvent, this);\r\n\t\tthis._dispatchChannel.reply(\"event:prev\", this.handlePrevEvent, this);\r\n\t},\r\n\r\n\r\n\thandleAddEvent: function(data) {\r\n\r\n\t\tconsole.log(\"Action | events | handleAddEvent\");\r\n\r\n\t\tvar eventCollection = this._storeChannel.request(\"eventCollection\");\r\n\r\n\t\tvar params = {};\r\n\r\n\t\tif (data.group) {\r\n\t\t\tparams.group = data.group.get(\"name\");\r\n\t\t}\r\n\r\n\t\tvar newEvent = eventCollection.createNew(params);\r\n\r\n\t\tif (newEvent) {\r\n\t\t\teventCollection.updateIndexes();\r\n\t\t\t// Highlight new event\r\n\t\t\tthis._dispatchChannel.request(\"event:select\", { event: newEvent });\r\n\t\t\t// Comms update to send data\r\n\t\t\tthis._dispatchChannel.request(\"io:send_events\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._appChannel.request(\"ui:error\", {\r\n\t\t\tmessage: \"Unable to create new event.\"\r\n\t\t});\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Handle the selection of an event.\r\n\t *\r\n\t */\r\n\thandleSelectEvent: function(data) {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tconsole.log(\"Action | events | handleSelectEvent\");\r\n\r\n\t\t// Call collection function to select the event.\r\n\t\t// This triggers select/deselect event on each model as appropriate.\r\n\t\tvar eventCollection = this._storeChannel.request(\"eventCollection\");\r\n\t\teventCollection.selectEvent(data.event);\r\n\r\n\t\tif (data.event !== null) {\r\n\r\n\t\t\tif ( ! this._store.getPlayMode()) {\r\n\t\t\t\t// Raise UI event on the appchannel so the main view can show the edit view.\r\n\t\t\t\tthis._appChannel.trigger(\"event:edit\", data);\r\n\t\t\t}\r\n\r\n\t\t\t// Cast it\r\n\t\t\tthis._dispatchChannel.request(\"io:cast_event\", { event: data.event });\r\n\r\n\t\t\t// Are we in Play mode?\r\n\t\t\tif (this._store.getPlayMode() && data.event.get(\"name\") !== \"startevent\") {\r\n\t\t\t\t_.delay(function() {\r\n\t\t\t\t\tself._dispatchChannel.request(\"io:send_event_play\", { event: data.event });\r\n\t\t\t\t}, 250);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t},\r\n\r\n\r\n\thandleChangeEvent: function(data) {\r\n\t\tconsole.log(\"Action | events | handleChangeEvent\");\r\n\t\t// Request a comms sync for data\r\n\t\tthis._dispatchChannel.request(\"io:send_events\");\r\n\t},\r\n\r\n\r\n\thandleDeleteEvent: function(data) {\r\n\t\tvar eventCollection = this._storeChannel.request(\"eventCollection\");\r\n\t\teventCollection.remove(data.event);\r\n\t\teventCollection.updateIndexes();\r\n\t\tthis._dispatchChannel.request(\"io:send_events\");\r\n\t},\r\n\r\n\r\n\thandleStartEvent: function(data) {\r\n\t\tthis._dispatchChannel.request(\"io:send_event_start\", { event: data.event });\r\n\t},\r\n\r\n\r\n\thandlePlayEvent: function(data) {\r\n\t\tthis._dispatchChannel.request(\"io:send_event_play\", { event: data.event });\r\n\t},\r\n\r\n\r\n\thandleNextEvent: function() {\r\n\r\n\t\tvar eventCollection = this._storeChannel.request(\"eventCollection\"),\r\n\t\t\tindexOfSelected = eventCollection.indexOf(eventCollection.selectedEvent),\r\n\t\t\tindexOfNext = indexOfSelected+1,\r\n\t\t\tnextEvent = eventCollection.at(indexOfNext);\r\n\r\n\t\tif (nextEvent) {\r\n\t\t\tthis._dispatchChannel.request(\"event:select\", { event: nextEvent });\r\n\t\t}\r\n\t},\r\n\r\n\r\n\thandlePrevEvent: function() {\r\n\r\n\t\tvar eventCollection = this._storeChannel.request(\"eventCollection\"),\r\n\t\t\tindexOfSelected = eventCollection.indexOf(eventCollection.selectedEvent),\r\n\t\t\tindexOfNext = indexOfSelected-1,\r\n\t\t\tprevEvent = eventCollection.at(indexOfNext);\r\n\r\n\t\tif (prevEvent) {\r\n\t\t\tthis._dispatchChannel.request(\"event:select\", { event: prevEvent });\r\n\t\t}\r\n\t}\r\n\r\n\r\n});\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// present.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5d6b17ea7714318a9bc7","// Backbone.Radio v2.0.0\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('underscore'), require('backbone')) :\n  typeof define === 'function' && define.amd ? define(['underscore', 'backbone'], factory) :\n  (global.Backbone = global.Backbone || {}, global.Backbone.Radio = factory(global._,global.Backbone));\n}(this, function (_,Backbone) { 'use strict';\n\n  _ = 'default' in _ ? _['default'] : _;\n  Backbone = 'default' in Backbone ? Backbone['default'] : Backbone;\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n  };\n\n  var previousRadio = Backbone.Radio;\n\n  var Radio = Backbone.Radio = {};\n\n  Radio.VERSION = '2.0.0';\n\n  // This allows you to run multiple instances of Radio on the same\n  // webapp. After loading the new version, call `noConflict()` to\n  // get a reference to it. At the same time the old version will be\n  // returned to Backbone.Radio.\n  Radio.noConflict = function () {\n    Backbone.Radio = previousRadio;\n    return this;\n  };\n\n  // Whether or not we're in DEBUG mode or not. DEBUG mode helps you\n  // get around the issues of lack of warnings when events are mis-typed.\n  Radio.DEBUG = false;\n\n  // Format debug text.\n  Radio._debugText = function (warning, eventName, channelName) {\n    return warning + (channelName ? ' on the ' + channelName + ' channel' : '') + ': \"' + eventName + '\"';\n  };\n\n  // This is the method that's called when an unregistered event was called.\n  // By default, it logs warning to the console. By overriding this you could\n  // make it throw an Error, for instance. This would make firing a nonexistent event\n  // have the same consequence as firing a nonexistent method on an Object.\n  Radio.debugLog = function (warning, eventName, channelName) {\n    if (Radio.DEBUG && console && console.warn) {\n      console.warn(Radio._debugText(warning, eventName, channelName));\n    }\n  };\n\n  var eventSplitter = /\\s+/;\n\n  // An internal method used to handle Radio's method overloading for Requests.\n  // It's borrowed from Backbone.Events. It differs from Backbone's overload\n  // API (which is used in Backbone.Events) in that it doesn't support space-separated\n  // event names.\n  Radio._eventsApi = function (obj, action, name, rest) {\n    if (!name) {\n      return false;\n    }\n\n    var results = {};\n\n    // Handle event maps.\n    if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object') {\n      for (var key in name) {\n        var result = obj[action].apply(obj, [key, name[key]].concat(rest));\n        eventSplitter.test(key) ? _.extend(results, result) : results[key] = result;\n      }\n      return results;\n    }\n\n    // Handle space separated event names.\n    if (eventSplitter.test(name)) {\n      var names = name.split(eventSplitter);\n      for (var i = 0, l = names.length; i < l; i++) {\n        results[names[i]] = obj[action].apply(obj, [names[i]].concat(rest));\n      }\n      return results;\n    }\n\n    return false;\n  };\n\n  // An optimized way to execute callbacks.\n  Radio._callHandler = function (callback, context, args) {\n    var a1 = args[0],\n        a2 = args[1],\n        a3 = args[2];\n    switch (args.length) {\n      case 0:\n        return callback.call(context);\n      case 1:\n        return callback.call(context, a1);\n      case 2:\n        return callback.call(context, a1, a2);\n      case 3:\n        return callback.call(context, a1, a2, a3);\n      default:\n        return callback.apply(context, args);\n    }\n  };\n\n  // A helper used by `off` methods to the handler from the store\n  function removeHandler(store, name, callback, context) {\n    var event = store[name];\n    if ((!callback || callback === event.callback || callback === event.callback._callback) && (!context || context === event.context)) {\n      delete store[name];\n      return true;\n    }\n  }\n\n  function removeHandlers(store, name, callback, context) {\n    store || (store = {});\n    var names = name ? [name] : _.keys(store);\n    var matched = false;\n\n    for (var i = 0, length = names.length; i < length; i++) {\n      name = names[i];\n\n      // If there's no event by this name, log it and continue\n      // with the loop\n      if (!store[name]) {\n        continue;\n      }\n\n      if (removeHandler(store, name, callback, context)) {\n        matched = true;\n      }\n    }\n\n    return matched;\n  }\n\n  /*\n   * tune-in\n   * -------\n   * Get console logs of a channel's activity\n   *\n   */\n\n  var _logs = {};\n\n  // This is to produce an identical function in both tuneIn and tuneOut,\n  // so that Backbone.Events unregisters it.\n  function _partial(channelName) {\n    return _logs[channelName] || (_logs[channelName] = _.bind(Radio.log, Radio, channelName));\n  }\n\n  _.extend(Radio, {\n\n    // Log information about the channel and event\n    log: function log(channelName, eventName) {\n      if (typeof console === 'undefined') {\n        return;\n      }\n      var args = _.toArray(arguments).slice(2);\n      console.log('[' + channelName + '] \"' + eventName + '\"', args);\n    },\n\n    // Logs all events on this channel to the console. It sets an\n    // internal value on the channel telling it we're listening,\n    // then sets a listener on the Backbone.Events\n    tuneIn: function tuneIn(channelName) {\n      var channel = Radio.channel(channelName);\n      channel._tunedIn = true;\n      channel.on('all', _partial(channelName));\n      return this;\n    },\n\n    // Stop logging all of the activities on this channel to the console\n    tuneOut: function tuneOut(channelName) {\n      var channel = Radio.channel(channelName);\n      channel._tunedIn = false;\n      channel.off('all', _partial(channelName));\n      delete _logs[channelName];\n      return this;\n    }\n  });\n\n  /*\n   * Backbone.Radio.Requests\n   * -----------------------\n   * A messaging system for requesting data.\n   *\n   */\n\n  function makeCallback(callback) {\n    return _.isFunction(callback) ? callback : function () {\n      return callback;\n    };\n  }\n\n  Radio.Requests = {\n\n    // Make a request\n    request: function request(name) {\n      var args = _.toArray(arguments).slice(1);\n      var results = Radio._eventsApi(this, 'request', name, args);\n      if (results) {\n        return results;\n      }\n      var channelName = this.channelName;\n      var requests = this._requests;\n\n      // Check if we should log the request, and if so, do it\n      if (channelName && this._tunedIn) {\n        Radio.log.apply(this, [channelName, name].concat(args));\n      }\n\n      // If the request isn't handled, log it in DEBUG mode and exit\n      if (requests && (requests[name] || requests['default'])) {\n        var handler = requests[name] || requests['default'];\n        args = requests[name] ? args : arguments;\n        return Radio._callHandler(handler.callback, handler.context, args);\n      } else {\n        Radio.debugLog('An unhandled request was fired', name, channelName);\n      }\n    },\n\n    // Set up a handler for a request\n    reply: function reply(name, callback, context) {\n      if (Radio._eventsApi(this, 'reply', name, [callback, context])) {\n        return this;\n      }\n\n      this._requests || (this._requests = {});\n\n      if (this._requests[name]) {\n        Radio.debugLog('A request was overwritten', name, this.channelName);\n      }\n\n      this._requests[name] = {\n        callback: makeCallback(callback),\n        context: context || this\n      };\n\n      return this;\n    },\n\n    // Set up a handler that can only be requested once\n    replyOnce: function replyOnce(name, callback, context) {\n      if (Radio._eventsApi(this, 'replyOnce', name, [callback, context])) {\n        return this;\n      }\n\n      var self = this;\n\n      var once = _.once(function () {\n        self.stopReplying(name);\n        return makeCallback(callback).apply(this, arguments);\n      });\n\n      return this.reply(name, once, context);\n    },\n\n    // Remove handler(s)\n    stopReplying: function stopReplying(name, callback, context) {\n      if (Radio._eventsApi(this, 'stopReplying', name)) {\n        return this;\n      }\n\n      // Remove everything if there are no arguments passed\n      if (!name && !callback && !context) {\n        delete this._requests;\n      } else if (!removeHandlers(this._requests, name, callback, context)) {\n        Radio.debugLog('Attempted to remove the unregistered request', name, this.channelName);\n      }\n\n      return this;\n    }\n  };\n\n  /*\n   * Backbone.Radio.channel\n   * ----------------------\n   * Get a reference to a channel by name.\n   *\n   */\n\n  Radio._channels = {};\n\n  Radio.channel = function (channelName) {\n    if (!channelName) {\n      throw new Error('You must provide a name for the channel.');\n    }\n\n    if (Radio._channels[channelName]) {\n      return Radio._channels[channelName];\n    } else {\n      return Radio._channels[channelName] = new Radio.Channel(channelName);\n    }\n  };\n\n  /*\n   * Backbone.Radio.Channel\n   * ----------------------\n   * A Channel is an object that extends from Backbone.Events,\n   * and Radio.Requests.\n   *\n   */\n\n  Radio.Channel = function (channelName) {\n    this.channelName = channelName;\n  };\n\n  _.extend(Radio.Channel.prototype, Backbone.Events, Radio.Requests, {\n\n    // Remove all handlers from the messaging systems of this channel\n    reset: function reset() {\n      this.off();\n      this.stopListening();\n      this.stopReplying();\n      return this;\n    }\n  });\n\n  /*\n   * Top-level API\n   * -------------\n   * Supplies the 'top-level API' for working with Channels directly\n   * from Backbone.Radio.\n   *\n   */\n\n  var channel;\n  var args;\n  var systems = [Backbone.Events, Radio.Requests];\n  _.each(systems, function (system) {\n    _.each(system, function (method, methodName) {\n      Radio[methodName] = function (channelName) {\n        args = _.toArray(arguments).slice(1);\n        channel = this.channel(channelName);\n        return channel[methodName].apply(channel, args);\n      };\n    });\n  });\n\n  Radio.reset = function (channelName) {\n    var channels = !channelName ? this._channels : [this._channels[channelName]];\n    _.each(channels, function (channel) {\n      channel.reset();\n    });\n  };\n\n  return Radio;\n\n}));\n//# sourceMappingURL=./backbone.radio.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/backbone.radio/build/backbone.radio.js\n// module id = 0\n// module chunks = 0","/**\n* @license\n* MarionetteJS (Backbone.Marionette)\n* ----------------------------------\n* v3.4.3\n*\n* Copyright (c)2017 Derick Bailey, Muted Solutions, LLC.\n* Distributed under MIT license\n*\n* http://marionettejs.com\n*/\n\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('backbone'), require('underscore'), require('backbone.radio')) :\n\ttypeof define === 'function' && define.amd ? define(['backbone', 'underscore', 'backbone.radio'], factory) :\n\t(global.Marionette = factory(global.Backbone,global._,global.Backbone.Radio));\n}(this, (function (Backbone,_,Radio) { 'use strict';\n\nBackbone = Backbone && Backbone.hasOwnProperty('default') ? Backbone['default'] : Backbone;\n_ = _ && _.hasOwnProperty('default') ? _['default'] : _;\nRadio = Radio && Radio.hasOwnProperty('default') ? Radio['default'] : Radio;\n\nvar version = \"3.4.3\";\n\n//Internal utility for creating context style global utils\nvar proxy = function proxy(method) {\n  return function (context) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return method.apply(context, args);\n  };\n};\n\n// Marionette.extend\n// -----------------\n\n// Borrow the Backbone `extend` method so we can use it as needed\nvar extend = Backbone.Model.extend;\n\n/* global console */\n\nvar deprecate = function deprecate(message, test) {\n  if (_.isObject(message)) {\n    message = message.prev + ' is going to be removed in the future. ' + 'Please use ' + message.next + ' instead.' + (message.url ? ' See: ' + message.url : '');\n  }\n\n  if (!Marionette.DEV_MODE) {\n    return;\n  }\n\n  if ((test === undefined || !test) && !deprecate._cache[message]) {\n    deprecate._warn('Deprecation warning: ' + message);\n    deprecate._cache[message] = true;\n  }\n};\n\n/* istanbul ignore next: can't clear console */\ndeprecate._console = typeof console !== 'undefined' ? console : {};\ndeprecate._warn = function () {\n  var warn = deprecate._console.warn || deprecate._console.log || _.noop;\n  return warn.apply(deprecate._console, arguments);\n};\ndeprecate._cache = {};\n\n// Marionette.isNodeAttached\n// -------------------------\n\n// Determine if `el` is a child of the document\nvar isNodeAttached = function isNodeAttached(el) {\n  return document.documentElement.contains(el && el.parentNode);\n};\n\n// Merge `keys` from `options` onto `this`\nvar mergeOptions = function mergeOptions(options, keys) {\n  var _this = this;\n\n  if (!options) {\n    return;\n  }\n\n  _.each(keys, function (key) {\n    var option = options[key];\n    if (option !== undefined) {\n      _this[key] = option;\n    }\n  });\n};\n\n// Marionette.getOption\n// --------------------\n\n// Retrieve an object, function or other value from the\n// object or its `options`, with `options` taking precedence.\nvar getOption = function getOption(optionName) {\n  if (!optionName) {\n    return;\n  }\n  if (this.options && this.options[optionName] !== undefined) {\n    return this.options[optionName];\n  } else {\n    return this[optionName];\n  }\n};\n\n// Marionette.normalizeMethods\n// ----------------------\n\n// Pass in a mapping of events => functions or function names\n// and return a mapping of events => functions\nvar normalizeMethods = function normalizeMethods(hash) {\n  var _this = this;\n\n  return _.reduce(hash, function (normalizedHash, method, name) {\n    if (!_.isFunction(method)) {\n      method = _this[method];\n    }\n    if (method) {\n      normalizedHash[name] = method;\n    }\n    return normalizedHash;\n  }, {});\n};\n\n// Trigger Method\n// --------------\n\n// split the event name on the \":\"\nvar splitter = /(^|:)(\\w)/gi;\n\n// take the event section (\"section1:section2:section3\")\n// and turn it in to uppercase name onSection1Section2Section3\nfunction getEventName(match, prefix, eventName) {\n  return eventName.toUpperCase();\n}\n\nvar getOnMethodName = _.memoize(function (event) {\n  return 'on' + event.replace(splitter, getEventName);\n});\n\n// Trigger an event and/or a corresponding method name. Examples:\n//\n// `this.triggerMethod(\"foo\")` will trigger the \"foo\" event and\n// call the \"onFoo\" method.\n//\n// `this.triggerMethod(\"foo:bar\")` will trigger the \"foo:bar\" event and\n// call the \"onFooBar\" method.\nfunction triggerMethod(event) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  // get the method name from the event name\n  var methodName = getOnMethodName(event);\n  var method = getOption.call(this, methodName);\n  var result = void 0;\n\n  // call the onMethodName if it exists\n  if (_.isFunction(method)) {\n    // pass all args, except the event name\n    result = method.apply(this, args);\n  }\n\n  // trigger the event\n  this.trigger.apply(this, arguments);\n\n  return result;\n}\n\n// triggerMethodOn invokes triggerMethod on a specific context\n//\n// e.g. `Marionette.triggerMethodOn(view, 'show')`\n// will trigger a \"show\" event or invoke onShow the view.\nfunction triggerMethodOn(context) {\n  for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  if (_.isFunction(context.triggerMethod)) {\n    return context.triggerMethod.apply(context, args);\n  }\n\n  return triggerMethod.apply(context, args);\n}\n\n// DOM Refresh\n// -----------\n\n// Trigger method on children unless a pure Backbone.View\nfunction triggerMethodChildren(view, event, shouldTrigger) {\n  if (!view._getImmediateChildren) {\n    return;\n  }\n  _.each(view._getImmediateChildren(), function (child) {\n    if (!shouldTrigger(child)) {\n      return;\n    }\n    triggerMethodOn(child, event, child);\n  });\n}\n\nfunction shouldTriggerAttach(view) {\n  return !view._isAttached;\n}\n\nfunction shouldAttach(view) {\n  if (!shouldTriggerAttach(view)) {\n    return false;\n  }\n  view._isAttached = true;\n  return true;\n}\n\nfunction shouldTriggerDetach(view) {\n  return view._isAttached;\n}\n\nfunction shouldDetach(view) {\n  if (!shouldTriggerDetach(view)) {\n    return false;\n  }\n  view._isAttached = false;\n  return true;\n}\n\nfunction triggerDOMRefresh(view) {\n  if (view._isAttached && view._isRendered) {\n    triggerMethodOn(view, 'dom:refresh', view);\n  }\n}\n\nfunction triggerDOMRemove(view) {\n  if (view._isAttached && view._isRendered) {\n    triggerMethodOn(view, 'dom:remove', view);\n  }\n}\n\nfunction handleBeforeAttach() {\n  triggerMethodChildren(this, 'before:attach', shouldTriggerAttach);\n}\n\nfunction handleAttach() {\n  triggerMethodChildren(this, 'attach', shouldAttach);\n  triggerDOMRefresh(this);\n}\n\nfunction handleBeforeDetach() {\n  triggerMethodChildren(this, 'before:detach', shouldTriggerDetach);\n  triggerDOMRemove(this);\n}\n\nfunction handleDetach() {\n  triggerMethodChildren(this, 'detach', shouldDetach);\n}\n\nfunction handleBeforeRender() {\n  triggerDOMRemove(this);\n}\n\nfunction handleRender() {\n  triggerDOMRefresh(this);\n}\n\n// Monitor a view's state, propagating attach/detach events to children and firing dom:refresh\n// whenever a rendered view is attached or an attached view is rendered.\nfunction monitorViewEvents(view) {\n  if (view._areViewEventsMonitored || view.monitorViewEvents === false) {\n    return;\n  }\n\n  view._areViewEventsMonitored = true;\n\n  view.on({\n    'before:attach': handleBeforeAttach,\n    'attach': handleAttach,\n    'before:detach': handleBeforeDetach,\n    'detach': handleDetach,\n    'before:render': handleBeforeRender,\n    'render': handleRender\n  });\n}\n\n// Error\n// -----\n\nvar errorProps = ['description', 'fileName', 'lineNumber', 'name', 'message', 'number'];\n\nvar MarionetteError = extend.call(Error, {\n  urlRoot: 'http://marionettejs.com/docs/v' + version + '/',\n\n  constructor: function constructor(message, options) {\n    if (_.isObject(message)) {\n      options = message;\n      message = options.message;\n    } else if (!options) {\n      options = {};\n    }\n\n    var error = Error.call(this, message);\n    _.extend(this, _.pick(error, errorProps), _.pick(options, errorProps));\n\n    this.captureStackTrace();\n\n    if (options.url) {\n      this.url = this.urlRoot + options.url;\n    }\n  },\n  captureStackTrace: function captureStackTrace() {\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, MarionetteError);\n    }\n  },\n  toString: function toString() {\n    return this.name + ': ' + this.message + (this.url ? ' See: ' + this.url : '');\n  }\n});\n\nMarionetteError.extend = extend;\n\n// Bind Entity Events & Unbind Entity Events\n// -----------------------------------------\n//\n// These methods are used to bind/unbind a backbone \"entity\" (e.g. collection/model)\n// to methods on a target object.\n//\n// The first parameter, `target`, must have the Backbone.Events module mixed in.\n//\n// The second parameter is the `entity` (Backbone.Model, Backbone.Collection or\n// any object that has Backbone.Events mixed in) to bind the events from.\n//\n// The third parameter is a hash of { \"event:name\": \"eventHandler\" }\n// configuration. Multiple handlers can be separated by a space. A\n// function can be supplied instead of a string handler name.\n\n// Bind/unbind the event to handlers specified as a string of\n// handler names on the target object\nfunction bindFromStrings(target, entity, evt, methods, actionName) {\n  var methodNames = methods.split(/\\s+/);\n\n  _.each(methodNames, function (methodName) {\n    var method = target[methodName];\n    if (!method) {\n      throw new MarionetteError('Method \"' + methodName + '\" was configured as an event handler, but does not exist.');\n    }\n\n    target[actionName](entity, evt, method);\n  });\n}\n\n// generic looping function\nfunction iterateEvents(target, entity, bindings, actionName) {\n  if (!entity || !bindings) {\n    return;\n  }\n\n  // type-check bindings\n  if (!_.isObject(bindings)) {\n    throw new MarionetteError({\n      message: 'Bindings must be an object.',\n      url: 'marionette.functions.html#marionettebindevents'\n    });\n  }\n\n  // iterate the bindings and bind/unbind them\n  _.each(bindings, function (method, evt) {\n\n    // allow for a list of method names as a string\n    if (_.isString(method)) {\n      bindFromStrings(target, entity, evt, method, actionName);\n      return;\n    }\n\n    target[actionName](entity, evt, method);\n  });\n}\n\nfunction bindEvents(entity, bindings) {\n  iterateEvents(this, entity, bindings, 'listenTo');\n  return this;\n}\n\nfunction unbindEvents(entity, bindings) {\n  iterateEvents(this, entity, bindings, 'stopListening');\n  return this;\n}\n\n// Bind/Unbind Radio Requests\n// -----------------------------------------\n//\n// These methods are used to bind/unbind a backbone.radio request\n// to methods on a target object.\n//\n// The first parameter, `target`, will set the context of the reply method\n//\n// The second parameter is the `Radio.channel` to bind the reply to.\n//\n// The third parameter is a hash of { \"request:name\": \"replyHandler\" }\n// configuration. A function can be supplied instead of a string handler name.\n\nfunction iterateReplies(target, channel, bindings, actionName) {\n  if (!channel || !bindings) {\n    return;\n  }\n\n  // type-check bindings\n  if (!_.isObject(bindings)) {\n    throw new MarionetteError({\n      message: 'Bindings must be an object.',\n      url: 'marionette.functions.html#marionettebindrequests'\n    });\n  }\n\n  var normalizedRadioRequests = normalizeMethods.call(target, bindings);\n\n  channel[actionName](normalizedRadioRequests, target);\n}\n\nfunction bindRequests(channel, bindings) {\n  iterateReplies(this, channel, bindings, 'reply');\n  return this;\n}\n\nfunction unbindRequests(channel, bindings) {\n  iterateReplies(this, channel, bindings, 'stopReplying');\n  return this;\n}\n\n// Internal utility for setting options consistently across Mn\nvar setOptions = function setOptions(options) {\n  this.options = _.extend({}, _.result(this, 'options'), options);\n};\n\nvar CommonMixin = {\n\n  // Imports the \"normalizeMethods\" to transform hashes of\n  // events=>function references/names to a hash of events=>function references\n  normalizeMethods: normalizeMethods,\n\n  _setOptions: setOptions,\n\n  // A handy way to merge passed-in options onto the instance\n  mergeOptions: mergeOptions,\n\n  // Enable getting options from this or this.options by name.\n  getOption: getOption,\n\n  // Enable binding view's events from another entity.\n  bindEvents: bindEvents,\n\n  // Enable unbinding view's events from another entity.\n  unbindEvents: unbindEvents\n};\n\n// MixinOptions\n// - channelName\n// - radioEvents\n// - radioRequests\n\nvar RadioMixin = {\n  _initRadio: function _initRadio() {\n    var channelName = _.result(this, 'channelName');\n\n    if (!channelName) {\n      return;\n    }\n\n    /* istanbul ignore next */\n    if (!Radio) {\n      throw new MarionetteError({\n        name: 'BackboneRadioMissing',\n        message: 'The dependency \"backbone.radio\" is missing.'\n      });\n    }\n\n    var channel = this._channel = Radio.channel(channelName);\n\n    var radioEvents = _.result(this, 'radioEvents');\n    this.bindEvents(channel, radioEvents);\n\n    var radioRequests = _.result(this, 'radioRequests');\n    this.bindRequests(channel, radioRequests);\n\n    this.on('destroy', this._destroyRadio);\n  },\n  _destroyRadio: function _destroyRadio() {\n    this._channel.stopReplying(null, null, this);\n  },\n  getChannel: function getChannel() {\n    return this._channel;\n  },\n\n\n  // Proxy `bindEvents`\n  bindEvents: bindEvents,\n\n  // Proxy `unbindEvents`\n  unbindEvents: unbindEvents,\n\n  // Proxy `bindRequests`\n  bindRequests: bindRequests,\n\n  // Proxy `unbindRequests`\n  unbindRequests: unbindRequests\n\n};\n\n// Object\n// ------\n\nvar ClassOptions = ['channelName', 'radioEvents', 'radioRequests'];\n\n// A Base Class that other Classes should descend from.\n// Object borrows many conventions and utilities from Backbone.\nvar MarionetteObject = function MarionetteObject(options) {\n  if (!this.hasOwnProperty('options')) {\n    this._setOptions(options);\n  }\n  this.mergeOptions(options, ClassOptions);\n  this._setCid();\n  this._initRadio();\n  this.initialize.apply(this, arguments);\n};\n\nMarionetteObject.extend = extend;\n\n// Object Methods\n// --------------\n\n// Ensure it can trigger events with Backbone.Events\n_.extend(MarionetteObject.prototype, Backbone.Events, CommonMixin, RadioMixin, {\n  cidPrefix: 'mno',\n\n  // for parity with Marionette.AbstractView lifecyle\n  _isDestroyed: false,\n\n  isDestroyed: function isDestroyed() {\n    return this._isDestroyed;\n  },\n\n\n  //this is a noop method intended to be overridden by classes that extend from this base\n  initialize: function initialize() {},\n  _setCid: function _setCid() {\n    if (this.cid) {\n      return;\n    }\n    this.cid = _.uniqueId(this.cidPrefix);\n  },\n  destroy: function destroy() {\n    if (this._isDestroyed) {\n      return this;\n    }\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this.triggerMethod.apply(this, ['before:destroy', this].concat(args));\n\n    this._isDestroyed = true;\n    this.triggerMethod.apply(this, ['destroy', this].concat(args));\n    this.stopListening();\n\n    return this;\n  },\n\n\n  triggerMethod: triggerMethod\n});\n\n// Template Cache\n// --------------\n\n// Manage templates stored in `<script>` blocks,\n// caching them for faster access.\nvar TemplateCache = function TemplateCache(templateId) {\n  this.templateId = templateId;\n};\n\n// TemplateCache object-level methods. Manage the template\n// caches from these method calls instead of creating\n// your own TemplateCache instances\n_.extend(TemplateCache, {\n\n  templateCaches: {},\n\n  // Get the specified template by id. Either\n  // retrieves the cached version, or loads it\n  // from the DOM.\n  get: function get(templateId, options) {\n    var cachedTemplate = this.templateCaches[templateId];\n\n    if (!cachedTemplate) {\n      cachedTemplate = new TemplateCache(templateId);\n      this.templateCaches[templateId] = cachedTemplate;\n    }\n\n    return cachedTemplate.load(options);\n  },\n\n\n  // Clear templates from the cache. If no arguments\n  // are specified, clears all templates:\n  // `clear()`\n  //\n  // If arguments are specified, clears each of the\n  // specified templates from the cache:\n  // `clear(\"#t1\", \"#t2\", \"...\")`\n  clear: function clear() {\n    var i = void 0;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var length = args.length;\n\n    if (length > 0) {\n      for (i = 0; i < length; i++) {\n        delete this.templateCaches[args[i]];\n      }\n    } else {\n      this.templateCaches = {};\n    }\n  }\n});\n\n// TemplateCache instance methods, allowing each\n// template cache object to manage its own state\n// and know whether or not it has been loaded\n_.extend(TemplateCache.prototype, {\n\n  // Internal method to load the template\n  load: function load(options) {\n    // Guard clause to prevent loading this template more than once\n    if (this.compiledTemplate) {\n      return this.compiledTemplate;\n    }\n\n    // Load the template and compile it\n    var template = this.loadTemplate(this.templateId, options);\n    this.compiledTemplate = this.compileTemplate(template, options);\n\n    return this.compiledTemplate;\n  },\n\n\n  // Load a template from the DOM, by default. Override\n  // this method to provide your own template retrieval\n  // For asynchronous loading with AMD/RequireJS, consider\n  // using a template-loader plugin as described here:\n  // https://github.com/marionettejs/backbone.marionette/wiki/Using-marionette-with-requirejs\n  loadTemplate: function loadTemplate(templateId, options) {\n    var $template = Backbone.$(templateId);\n\n    if (!$template.length) {\n      throw new MarionetteError({\n        name: 'NoTemplateError',\n        message: 'Could not find template: \"' + templateId + '\"'\n      });\n    }\n    return $template.html();\n  },\n\n\n  // Pre-compile the template before caching it. Override\n  // this method if you do not need to pre-compile a template\n  // (JST / RequireJS for example) or if you want to change\n  // the template engine used (Handebars, etc).\n  compileTemplate: function compileTemplate(rawTemplate, options) {\n    return _.template(rawTemplate, options);\n  }\n});\n\n// Implementation of the invoke method (http://underscorejs.org/#invoke) with support for\n// lodash v3, v4, and underscore.js\nvar _invoke = _.invokeMap || _.invoke;\n\n// MixinOptions\n// - behaviors\n\n// Takes care of getting the behavior class\n// given options and a key.\n// If a user passes in options.behaviorClass\n// default to using that.\n// If a user passes in a Behavior Class directly, use that\n// Otherwise delegate the lookup to the users `behaviorsLookup` implementation.\nfunction getBehaviorClass(options, key) {\n  if (options.behaviorClass) {\n    return options.behaviorClass;\n    //treat functions as a Behavior constructor\n  } else if (_.isFunction(options)) {\n    return options;\n  }\n\n  // behaviorsLookup can be either a flat object or a method\n  if (_.isFunction(Marionette.Behaviors.behaviorsLookup)) {\n    return Marionette.Behaviors.behaviorsLookup(options, key)[key];\n  }\n\n  return Marionette.Behaviors.behaviorsLookup[key];\n}\n\n// Iterate over the behaviors object, for each behavior\n// instantiate it and get its grouped behaviors.\n// This accepts a list of behaviors in either an object or array form\nfunction parseBehaviors(view, behaviors) {\n  return _.chain(behaviors).map(function (options, key) {\n    var BehaviorClass = getBehaviorClass(options, key);\n    //if we're passed a class directly instead of an object\n    var _options = options === BehaviorClass ? {} : options;\n    var behavior = new BehaviorClass(_options, view);\n    var nestedBehaviors = parseBehaviors(view, _.result(behavior, 'behaviors'));\n\n    return [behavior].concat(nestedBehaviors);\n  }).flatten().value();\n}\n\nvar BehaviorsMixin = {\n  _initBehaviors: function _initBehaviors() {\n    this._behaviors = this._getBehaviors();\n  },\n  _getBehaviors: function _getBehaviors() {\n    var behaviors = _.result(this, 'behaviors');\n\n    // Behaviors defined on a view can be a flat object literal\n    // or it can be a function that returns an object.\n    return _.isObject(behaviors) ? parseBehaviors(this, behaviors) : {};\n  },\n  _getBehaviorTriggers: function _getBehaviorTriggers() {\n    var triggers = _invoke(this._behaviors, 'getTriggers');\n    return _.reduce(triggers, function (memo, _triggers) {\n      return _.extend(memo, _triggers);\n    }, {});\n  },\n  _getBehaviorEvents: function _getBehaviorEvents() {\n    var events = _invoke(this._behaviors, 'getEvents');\n    return _.reduce(events, function (memo, _events) {\n      return _.extend(memo, _events);\n    }, {});\n  },\n\n\n  // proxy behavior $el to the view's $el.\n  _proxyBehaviorViewProperties: function _proxyBehaviorViewProperties() {\n    _invoke(this._behaviors, 'proxyViewProperties');\n  },\n\n\n  // delegate modelEvents and collectionEvents\n  _delegateBehaviorEntityEvents: function _delegateBehaviorEntityEvents() {\n    _invoke(this._behaviors, 'delegateEntityEvents');\n  },\n\n\n  // undelegate modelEvents and collectionEvents\n  _undelegateBehaviorEntityEvents: function _undelegateBehaviorEntityEvents() {\n    _invoke(this._behaviors, 'undelegateEntityEvents');\n  },\n  _destroyBehaviors: function _destroyBehaviors() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // Call destroy on each behavior after\n    // destroying the view.\n    // This unbinds event listeners\n    // that behaviors have registered for.\n    _invoke.apply(undefined, [this._behaviors, 'destroy'].concat(args));\n  },\n\n\n  // Remove a behavior\n  _removeBehavior: function _removeBehavior(behavior) {\n    // Don't worry about the clean up if the view is destroyed\n    if (this._isDestroyed) {\n      return;\n    }\n    this._behaviors = _.without(this._behaviors, behavior);\n  },\n  _bindBehaviorUIElements: function _bindBehaviorUIElements() {\n    _invoke(this._behaviors, 'bindUIElements');\n  },\n  _unbindBehaviorUIElements: function _unbindBehaviorUIElements() {\n    _invoke(this._behaviors, 'unbindUIElements');\n  },\n  _triggerEventOnBehaviors: function _triggerEventOnBehaviors() {\n    var behaviors = this._behaviors;\n    // Use good ol' for as this is a very hot function\n    for (var i = 0, length = behaviors && behaviors.length; i < length; i++) {\n      triggerMethod.apply(behaviors[i], arguments);\n    }\n  }\n};\n\n// MixinOptions\n// - collectionEvents\n// - modelEvents\n\nvar DelegateEntityEventsMixin = {\n  // Handle `modelEvents`, and `collectionEvents` configuration\n  _delegateEntityEvents: function _delegateEntityEvents(model, collection) {\n    this._undelegateEntityEvents(model, collection);\n\n    var modelEvents = _.result(this, 'modelEvents');\n    bindEvents.call(this, model, modelEvents);\n\n    var collectionEvents = _.result(this, 'collectionEvents');\n    bindEvents.call(this, collection, collectionEvents);\n  },\n  _undelegateEntityEvents: function _undelegateEntityEvents(model, collection) {\n    var modelEvents = _.result(this, 'modelEvents');\n    unbindEvents.call(this, model, modelEvents);\n\n    var collectionEvents = _.result(this, 'collectionEvents');\n    unbindEvents.call(this, collection, collectionEvents);\n  }\n};\n\n// Borrow event splitter from Backbone\nvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\nfunction uniqueName(eventName, selector) {\n  return '' + eventName + _.uniqueId('.evt') + ' ' + selector;\n}\n\n// Set event name to be namespaced using a unique index\n// to generate a non colliding event namespace\n// http://api.jquery.com/event.namespace/\nvar getUniqueEventName = function getUniqueEventName(eventName) {\n  var match = eventName.match(delegateEventSplitter);\n  return uniqueName(match[1], match[2]);\n};\n\n// Add Feature flags here\n// e.g. 'class' => false\nvar FEATURES = {\n  childViewEventPrefix: true,\n  triggersStopPropagation: true,\n  triggersPreventDefault: true\n};\n\nfunction isEnabled(name) {\n  return !!FEATURES[name];\n}\n\nfunction setEnabled(name, state) {\n  return FEATURES[name] = state;\n}\n\n// Internal method to create an event handler for a given `triggerDef` like\n// 'click:foo'\nfunction buildViewTrigger(view, triggerDef) {\n  if (_.isString(triggerDef)) {\n    triggerDef = { event: triggerDef };\n  }\n\n  var eventName = triggerDef.event;\n\n  var shouldPreventDefault = !!triggerDef.preventDefault;\n\n  if (isEnabled('triggersPreventDefault')) {\n    shouldPreventDefault = triggerDef.preventDefault !== false;\n  }\n\n  var shouldStopPropagation = !!triggerDef.stopPropagation;\n\n  if (isEnabled('triggersStopPropagation')) {\n    shouldStopPropagation = triggerDef.stopPropagation !== false;\n  }\n\n  return function (event) {\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n\n    if (shouldStopPropagation) {\n      event.stopPropagation();\n    }\n\n    view.triggerMethod(eventName, view, event);\n  };\n}\n\nvar TriggersMixin = {\n\n  // Configure `triggers` to forward DOM events to view\n  // events. `triggers: {\"click .foo\": \"do:foo\"}`\n  _getViewTriggers: function _getViewTriggers(view, triggers) {\n    // Configure the triggers, prevent default\n    // action and stop propagation of DOM events\n    return _.reduce(triggers, function (events, value, key) {\n      key = getUniqueEventName(key);\n      events[key] = buildViewTrigger(view, value);\n      return events;\n    }, {});\n  }\n};\n\n// allows for the use of the @ui. syntax within\n// a given key for triggers and events\n// swaps the @ui with the associated selector.\n// Returns a new, non-mutated, parsed events hash.\nvar _normalizeUIKeys = function _normalizeUIKeys(hash, ui) {\n  return _.reduce(hash, function (memo, val, key) {\n    var normalizedKey = _normalizeUIString(key, ui);\n    memo[normalizedKey] = val;\n    return memo;\n  }, {});\n};\n\n// utility method for parsing @ui. syntax strings\n// into associated selector\nvar _normalizeUIString = function _normalizeUIString(uiString, ui) {\n  return uiString.replace(/@ui\\.[a-zA-Z-_$0-9]*/g, function (r) {\n    return ui[r.slice(4)];\n  });\n};\n\n// allows for the use of the @ui. syntax within\n// a given value for regions\n// swaps the @ui with the associated selector\nvar _normalizeUIValues = function _normalizeUIValues(hash, ui, properties) {\n  _.each(hash, function (val, key) {\n    if (_.isString(val)) {\n      hash[key] = _normalizeUIString(val, ui);\n    } else if (_.isObject(val) && _.isArray(properties)) {\n      _.extend(val, _normalizeUIValues(_.pick(val, properties), ui));\n      /* Value is an object, and we got an array of embedded property names to normalize. */\n      _.each(properties, function (property) {\n        var propertyVal = val[property];\n        if (_.isString(propertyVal)) {\n          val[property] = _normalizeUIString(propertyVal, ui);\n        }\n      });\n    }\n  });\n  return hash;\n};\n\nvar UIMixin = {\n\n  // normalize the keys of passed hash with the views `ui` selectors.\n  // `{\"@ui.foo\": \"bar\"}`\n  normalizeUIKeys: function normalizeUIKeys(hash) {\n    var uiBindings = this._getUIBindings();\n    return _normalizeUIKeys(hash, uiBindings);\n  },\n\n\n  // normalize the passed string with the views `ui` selectors.\n  // `\"@ui.bar\"`\n  normalizeUIString: function normalizeUIString(uiString) {\n    var uiBindings = this._getUIBindings();\n    return _normalizeUIString(uiString, uiBindings);\n  },\n\n\n  // normalize the values of passed hash with the views `ui` selectors.\n  // `{foo: \"@ui.bar\"}`\n  normalizeUIValues: function normalizeUIValues(hash, properties) {\n    var uiBindings = this._getUIBindings();\n    return _normalizeUIValues(hash, uiBindings, properties);\n  },\n  _getUIBindings: function _getUIBindings() {\n    var uiBindings = _.result(this, '_uiBindings');\n    var ui = _.result(this, 'ui');\n    return uiBindings || ui;\n  },\n\n\n  // This method binds the elements specified in the \"ui\" hash inside the view's code with\n  // the associated jQuery selectors.\n  _bindUIElements: function _bindUIElements() {\n    var _this = this;\n\n    if (!this.ui) {\n      return;\n    }\n\n    // store the ui hash in _uiBindings so they can be reset later\n    // and so re-rendering the view will be able to find the bindings\n    if (!this._uiBindings) {\n      this._uiBindings = this.ui;\n    }\n\n    // get the bindings result, as a function or otherwise\n    var bindings = _.result(this, '_uiBindings');\n\n    // empty the ui so we don't have anything to start with\n    this._ui = {};\n\n    // bind each of the selectors\n    _.each(bindings, function (selector, key) {\n      _this._ui[key] = _this.$(selector);\n    });\n\n    this.ui = this._ui;\n  },\n  _unbindUIElements: function _unbindUIElements() {\n    var _this2 = this;\n\n    if (!this.ui || !this._uiBindings) {\n      return;\n    }\n\n    // delete all of the existing ui bindings\n    _.each(this.ui, function ($el, name) {\n      delete _this2.ui[name];\n    });\n\n    // reset the ui element to the original bindings configuration\n    this.ui = this._uiBindings;\n    delete this._uiBindings;\n    delete this._ui;\n  },\n  _getUI: function _getUI(name) {\n    return this._ui[name];\n  }\n};\n\n// DomApi\n//  ---------\n// Performant method for returning the jQuery instance\nfunction _getEl(el) {\n  return el instanceof Backbone.$ ? el : Backbone.$(el);\n}\n\n// Static setter\nfunction setDomApi(mixin) {\n  this.prototype.Dom = _.extend({}, this.prototype.Dom, mixin);\n  return this;\n}\n\nvar DomApi = {\n\n  // Returns a new HTML DOM node instance\n  createBuffer: function createBuffer() {\n    return document.createDocumentFragment();\n  },\n\n\n  // Lookup the `selector` string\n  // Selector may also be a DOM element\n  // Returns an array-like object of nodes\n  getEl: function getEl(selector) {\n    return _getEl(selector);\n  },\n\n\n  // Finds the `selector` string with the el\n  // Returns an array-like object of nodes\n  findEl: function findEl(el, selector) {\n    var _$el = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _getEl(el);\n\n    return _$el.find(selector);\n  },\n\n\n  // Returns true if the el contains the node childEl\n  hasEl: function hasEl(el, childEl) {\n    return el.contains(childEl && childEl.parentNode);\n  },\n\n\n  // Detach `el` from the DOM without removing listeners\n  detachEl: function detachEl(el) {\n    var _$el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _getEl(el);\n\n    _$el.detach();\n  },\n\n\n  // Remove `oldEl` from the DOM and put `newEl` in its place\n  replaceEl: function replaceEl(newEl, oldEl) {\n    if (newEl === oldEl) {\n      return;\n    }\n\n    var parent = oldEl.parentNode;\n\n    if (!parent) {\n      return;\n    }\n\n    parent.replaceChild(newEl, oldEl);\n  },\n\n\n  // Swaps the location of `el1` and `el2` in the DOM\n  swapEl: function swapEl(el1, el2) {\n    if (el1 === el2) {\n      return;\n    }\n\n    var parent1 = el1.parentNode;\n    var parent2 = el2.parentNode;\n\n    if (!parent1 || !parent2) {\n      return;\n    }\n\n    var next1 = el1.nextSibling;\n    var next2 = el2.nextSibling;\n\n    parent1.insertBefore(el2, next1);\n    parent2.insertBefore(el1, next2);\n  },\n\n\n  // Replace the contents of `el` with the HTML string of `html`\n  setContents: function setContents(el, html) {\n    var _$el = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _getEl(el);\n\n    _$el.html(html);\n  },\n\n\n  // Takes the DOM node `el` and appends the DOM node `contents`\n  // to the end of the element's contents.\n  appendContents: function appendContents(el, contents) {\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref$_$el = _ref._$el,\n        _$el = _ref$_$el === undefined ? _getEl(el) : _ref$_$el,\n        _ref$_$contents = _ref._$contents,\n        _$contents = _ref$_$contents === undefined ? _getEl(contents) : _ref$_$contents;\n\n    _$el.append(_$contents);\n  },\n\n\n  // Does the el have child nodes\n  hasContents: function hasContents(el) {\n    return el.hasChildNodes();\n  },\n\n\n  // Remove the inner contents of `el` from the DOM while leaving\n  // `el` itself in the DOM.\n  detachContents: function detachContents(el) {\n    var _$el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _getEl(el);\n\n    _$el.contents().detach();\n  }\n};\n\n// ViewMixin\n//  ---------\n\n// MixinOptions\n// - behaviors\n// - childViewEventPrefix\n// - childViewEvents\n// - childViewTriggers\n// - collectionEvents\n// - modelEvents\n// - triggers\n// - ui\n\n\nvar ViewMixin = {\n  Dom: DomApi,\n\n  supportsRenderLifecycle: true,\n  supportsDestroyLifecycle: true,\n\n  _isDestroyed: false,\n\n  isDestroyed: function isDestroyed() {\n    return !!this._isDestroyed;\n  },\n\n\n  _isRendered: false,\n\n  isRendered: function isRendered() {\n    return !!this._isRendered;\n  },\n\n\n  _isAttached: false,\n\n  isAttached: function isAttached() {\n    return !!this._isAttached;\n  },\n\n\n  // Overriding Backbone.View's `delegateEvents` to handle\n  // `events` and `triggers`\n  delegateEvents: function delegateEvents(eventsArg) {\n\n    this._proxyBehaviorViewProperties();\n    this._buildEventProxies();\n\n    var viewEvents = this._getEvents(eventsArg);\n\n    if (typeof eventsArg === 'undefined') {\n      this.events = viewEvents;\n    }\n\n    var combinedEvents = _.extend({}, this._getBehaviorEvents(), viewEvents, this._getBehaviorTriggers(), this.getTriggers());\n\n    Backbone.View.prototype.delegateEvents.call(this, combinedEvents);\n\n    return this;\n  },\n  _getEvents: function _getEvents(eventsArg) {\n    var events = eventsArg || this.events;\n\n    if (_.isFunction(events)) {\n      return this.normalizeUIKeys(events.call(this));\n    }\n\n    return this.normalizeUIKeys(events);\n  },\n\n\n  // Configure `triggers` to forward DOM events to view\n  // events. `triggers: {\"click .foo\": \"do:foo\"}`\n  getTriggers: function getTriggers() {\n    if (!this.triggers) {\n      return;\n    }\n\n    // Allow `triggers` to be configured as a function\n    var triggers = this.normalizeUIKeys(_.result(this, 'triggers'));\n\n    // Configure the triggers, prevent default\n    // action and stop propagation of DOM events\n    return this._getViewTriggers(this, triggers);\n  },\n\n\n  // Handle `modelEvents`, and `collectionEvents` configuration\n  delegateEntityEvents: function delegateEntityEvents() {\n    this._delegateEntityEvents(this.model, this.collection);\n\n    // bind each behaviors model and collection events\n    this._delegateBehaviorEntityEvents();\n\n    return this;\n  },\n\n\n  // Handle unbinding `modelEvents`, and `collectionEvents` configuration\n  undelegateEntityEvents: function undelegateEntityEvents() {\n    this._undelegateEntityEvents(this.model, this.collection);\n\n    // unbind each behaviors model and collection events\n    this._undelegateBehaviorEntityEvents();\n\n    return this;\n  },\n\n\n  // Handle destroying the view and its children.\n  destroy: function destroy() {\n    if (this._isDestroyed) {\n      return this;\n    }\n    var shouldTriggerDetach = this._isAttached && !this._shouldDisableEvents;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this.triggerMethod.apply(this, ['before:destroy', this].concat(args));\n    if (shouldTriggerDetach) {\n      this.triggerMethod('before:detach', this);\n    }\n\n    // unbind UI elements\n    this.unbindUIElements();\n\n    // remove the view from the DOM\n    this._removeElement();\n\n    if (shouldTriggerDetach) {\n      this._isAttached = false;\n      this.triggerMethod('detach', this);\n    }\n\n    // remove children after the remove to prevent extra paints\n    this._removeChildren();\n\n    this._isDestroyed = true;\n    this._isRendered = false;\n\n    // Destroy behaviors after _isDestroyed flag\n    this._destroyBehaviors.apply(this, args);\n\n    this.triggerMethod.apply(this, ['destroy', this].concat(args));\n\n    this.stopListening();\n\n    return this;\n  },\n\n\n  // Equates to this.$el.remove\n  _removeElement: function _removeElement() {\n    this.$el.off().removeData();\n    this.Dom.detachEl(this.el, this.$el);\n  },\n  bindUIElements: function bindUIElements() {\n    this._bindUIElements();\n    this._bindBehaviorUIElements();\n\n    return this;\n  },\n\n\n  // This method unbinds the elements specified in the \"ui\" hash\n  unbindUIElements: function unbindUIElements() {\n    this._unbindUIElements();\n    this._unbindBehaviorUIElements();\n\n    return this;\n  },\n  getUI: function getUI(name) {\n    return this._getUI(name);\n  },\n\n\n  // used as the prefix for child view events\n  // that are forwarded through the layoutview\n  childViewEventPrefix: function childViewEventPrefix() {\n    return isEnabled('childViewEventPrefix') ? 'childview' : false;\n  },\n\n\n  // import the `triggerMethod` to trigger events with corresponding\n  // methods if the method exists\n  triggerMethod: function triggerMethod$$1() {\n    var ret = triggerMethod.apply(this, arguments);\n\n    this._triggerEventOnBehaviors.apply(this, arguments);\n\n    return ret;\n  },\n\n\n  // Cache `childViewEvents` and `childViewTriggers`\n  _buildEventProxies: function _buildEventProxies() {\n    this._childViewEvents = _.result(this, 'childViewEvents');\n    this._childViewTriggers = _.result(this, 'childViewTriggers');\n  },\n  _proxyChildViewEvents: function _proxyChildViewEvents(view) {\n    this.listenTo(view, 'all', this._childViewEventHandler);\n  },\n  _childViewEventHandler: function _childViewEventHandler(eventName) {\n    var childViewEvents = this.normalizeMethods(this._childViewEvents);\n\n    // call collectionView childViewEvent if defined\n\n    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    if (typeof childViewEvents !== 'undefined' && _.isFunction(childViewEvents[eventName])) {\n      childViewEvents[eventName].apply(this, args);\n    }\n\n    // use the parent view's proxyEvent handlers\n    var childViewTriggers = this._childViewTriggers;\n\n    // Call the event with the proxy name on the parent layout\n    if (childViewTriggers && _.isString(childViewTriggers[eventName])) {\n      this.triggerMethod.apply(this, [childViewTriggers[eventName]].concat(args));\n    }\n\n    var prefix = _.result(this, 'childViewEventPrefix');\n\n    if (prefix !== false) {\n      var childEventName = prefix + ':' + eventName;\n\n      this.triggerMethod.apply(this, [childEventName].concat(args));\n    }\n  }\n};\n\n_.extend(ViewMixin, BehaviorsMixin, CommonMixin, DelegateEntityEventsMixin, TriggersMixin, UIMixin);\n\nfunction renderView(view) {\n  if (view._isRendered) {\n    return;\n  }\n\n  if (!view.supportsRenderLifecycle) {\n    triggerMethodOn(view, 'before:render', view);\n  }\n\n  view.render();\n\n  if (!view.supportsRenderLifecycle) {\n    view._isRendered = true;\n    triggerMethodOn(view, 'render', view);\n  }\n}\n\nfunction destroyView(view) {\n  if (view.destroy) {\n    view.destroy();\n    return;\n  }\n\n  if (!view.supportsDestroyLifecycle) {\n    triggerMethodOn(view, 'before:destroy', view);\n  }\n\n  var shouldTriggerDetach = view._isAttached && !view._shouldDisableEvents;\n\n  if (shouldTriggerDetach) {\n    triggerMethodOn(view, 'before:detach', view);\n  }\n\n  view.remove();\n\n  if (shouldTriggerDetach) {\n    view._isAttached = false;\n    triggerMethodOn(view, 'detach', view);\n  }\n\n  view._isDestroyed = true;\n\n  if (!view.supportsDestroyLifecycle) {\n    triggerMethodOn(view, 'destroy', view);\n  }\n}\n\n// Region\n// ------\n\nvar ClassOptions$2 = ['allowMissingEl', 'parentEl', 'replaceElement'];\n\nvar Region = MarionetteObject.extend({\n  Dom: DomApi,\n\n  cidPrefix: 'mnr',\n  replaceElement: false,\n  _isReplaced: false,\n  _isSwappingView: false,\n\n  constructor: function constructor(options) {\n    this._setOptions(options);\n\n    this.mergeOptions(options, ClassOptions$2);\n\n    // getOption necessary because options.el may be passed as undefined\n    this._initEl = this.el = this.getOption('el');\n\n    // Handle when this.el is passed in as a $ wrapped element.\n    this.el = this.el instanceof Backbone.$ ? this.el[0] : this.el;\n\n    if (!this.el) {\n      throw new MarionetteError({\n        name: 'NoElError',\n        message: 'An \"el\" must be specified for a region.'\n      });\n    }\n\n    this.$el = this.getEl(this.el);\n    MarionetteObject.call(this, options);\n  },\n\n\n  // Displays a backbone view instance inside of the region. Handles calling the `render`\n  // method for you. Reads content directly from the `el` attribute. The `preventDestroy`\n  // option can be used to prevent a view from the old view being destroyed on show.\n  show: function show(view, options) {\n    if (!this._ensureElement(options)) {\n      return;\n    }\n\n    view = this._getView(view, options);\n\n    if (view === this.currentView) {\n      return this;\n    }\n\n    this._isSwappingView = !!this.currentView;\n\n    this.triggerMethod('before:show', this, view, options);\n\n    // Assume an attached view is already in the region for pre-existing DOM\n    if (!view._isAttached) {\n      this.empty(options);\n    }\n\n    this._setupChildView(view);\n\n    this.currentView = view;\n\n    renderView(view);\n\n    this._attachView(view, options);\n\n    this.triggerMethod('show', this, view, options);\n\n    this._isSwappingView = false;\n\n    return this;\n  },\n  _setupChildView: function _setupChildView(view) {\n    monitorViewEvents(view);\n\n    this._proxyChildViewEvents(view);\n\n    // We need to listen for if a view is destroyed in a way other than through the region.\n    // If this happens we need to remove the reference to the currentView since once a view\n    // has been destroyed we can not reuse it.\n    view.on('destroy', this._empty, this);\n  },\n  _proxyChildViewEvents: function _proxyChildViewEvents(view) {\n    var parentView = this._parentView;\n\n    if (!parentView) {\n      return;\n    }\n\n    parentView._proxyChildViewEvents(view);\n  },\n\n\n  // If the regions parent view is not monitoring its attach/detach events\n  _shouldDisableMonitoring: function _shouldDisableMonitoring() {\n    return this._parentView && this._parentView.monitorViewEvents === false;\n  },\n  _attachView: function _attachView(view) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var shouldTriggerAttach = !view._isAttached && isNodeAttached(this.el) && !this._shouldDisableMonitoring();\n    var shouldReplaceEl = typeof options.replaceElement === 'undefined' ? !!_.result(this, 'replaceElement') : !!options.replaceElement;\n\n    if (shouldTriggerAttach) {\n      triggerMethodOn(view, 'before:attach', view);\n    }\n\n    if (shouldReplaceEl) {\n      this._replaceEl(view);\n    } else {\n      this.attachHtml(view);\n    }\n\n    if (shouldTriggerAttach) {\n      view._isAttached = true;\n      triggerMethodOn(view, 'attach', view);\n    }\n  },\n  _ensureElement: function _ensureElement() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!_.isObject(this.el)) {\n      this.$el = this.getEl(this.el);\n      this.el = this.$el[0];\n      // Make sure the $el contains only the el\n      this.$el = this.Dom.getEl(this.el);\n    }\n\n    if (!this.$el || this.$el.length === 0) {\n      var allowMissingEl = typeof options.allowMissingEl === 'undefined' ? !!_.result(this, 'allowMissingEl') : !!options.allowMissingEl;\n\n      if (allowMissingEl) {\n        return false;\n      } else {\n        throw new MarionetteError('An \"el\" must exist in DOM for this region ' + this.cid);\n      }\n    }\n    return true;\n  },\n  _getView: function _getView(view) {\n    if (!view) {\n      throw new MarionetteError({\n        name: 'ViewNotValid',\n        message: 'The view passed is undefined and therefore invalid. You must pass a view instance to show.'\n      });\n    }\n\n    if (view._isDestroyed) {\n      throw new MarionetteError({\n        name: 'ViewDestroyedError',\n        message: 'View (cid: \"' + view.cid + '\") has already been destroyed and cannot be used.'\n      });\n    }\n\n    if (view instanceof Backbone.View) {\n      return view;\n    }\n\n    var viewOptions = this._getViewOptions(view);\n\n    return new View(viewOptions);\n  },\n\n\n  // This allows for a template or a static string to be\n  // used as a template\n  _getViewOptions: function _getViewOptions(viewOptions) {\n    if (_.isFunction(viewOptions)) {\n      return { template: viewOptions };\n    }\n\n    if (_.isObject(viewOptions)) {\n      return viewOptions;\n    }\n\n    var template = function template() {\n      return viewOptions;\n    };\n\n    return { template: template };\n  },\n\n\n  // Override this method to change how the region finds the DOM element that it manages. Return\n  // a jQuery selector object scoped to a provided parent el or the document if none exists.\n  getEl: function getEl(el) {\n    var context = _.result(this, 'parentEl');\n\n    if (context && _.isString(el)) {\n      return this.Dom.findEl(context, el);\n    }\n\n    return this.Dom.getEl(el);\n  },\n  _replaceEl: function _replaceEl(view) {\n    // always restore the el to ensure the regions el is present before replacing\n    this._restoreEl();\n\n    view.on('before:destroy', this._restoreEl, this);\n\n    this.Dom.replaceEl(view.el, this.el);\n\n    this._isReplaced = true;\n  },\n\n\n  // Restore the region's element in the DOM.\n  _restoreEl: function _restoreEl() {\n    // There is nothing to replace\n    if (!this._isReplaced) {\n      return;\n    }\n\n    var view = this.currentView;\n\n    if (!view) {\n      return;\n    }\n\n    this._detachView(view);\n\n    this._isReplaced = false;\n  },\n\n\n  // Check to see if the region's el was replaced.\n  isReplaced: function isReplaced() {\n    return !!this._isReplaced;\n  },\n\n\n  // Check to see if a view is being swapped by another\n  isSwappingView: function isSwappingView() {\n    return !!this._isSwappingView;\n  },\n\n\n  // Override this method to change how the new view is appended to the `$el` that the\n  // region is managing\n  attachHtml: function attachHtml(view) {\n    this.Dom.appendContents(this.el, view.el, { _$el: this.$el, _$contents: view.$el });\n  },\n\n\n  // Destroy the current view, if there is one. If there is no current view, it does\n  // nothing and returns immediately.\n  empty: function empty() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { allowMissingEl: true };\n\n    var view = this.currentView;\n\n    // If there is no view in the region we should only detach current html\n    if (!view) {\n      if (this._ensureElement(options)) {\n        this.detachHtml();\n      }\n      return this;\n    }\n\n    var shouldDestroy = !options.preventDestroy;\n\n    if (!shouldDestroy) {\n      deprecate('The preventDestroy option is deprecated. Use Region#detachView');\n    }\n\n    this._empty(view, shouldDestroy);\n    return this;\n  },\n  _empty: function _empty(view, shouldDestroy) {\n    view.off('destroy', this._empty, this);\n    this.triggerMethod('before:empty', this, view);\n\n    this._restoreEl();\n\n    delete this.currentView;\n\n    if (!view._isDestroyed) {\n      if (shouldDestroy) {\n        this.removeView(view);\n      } else {\n        this._detachView(view);\n      }\n      this._stopChildViewEvents(view);\n    }\n\n    this.triggerMethod('empty', this, view);\n  },\n  _stopChildViewEvents: function _stopChildViewEvents(view) {\n    var parentView = this._parentView;\n\n    if (!parentView) {\n      return;\n    }\n\n    this._parentView.stopListening(view);\n  },\n  destroyView: function destroyView$$1(view) {\n    if (view._isDestroyed) {\n      return view;\n    }\n\n    view._shouldDisableEvents = this._shouldDisableMonitoring();\n    destroyView(view);\n    return view;\n  },\n  removeView: function removeView(view) {\n    this.destroyView(view);\n  },\n\n\n  // Empties the Region without destroying the view\n  // Returns the detached view\n  detachView: function detachView() {\n    var view = this.currentView;\n\n    if (!view) {\n      return;\n    }\n\n    this._empty(view);\n\n    return view;\n  },\n  _detachView: function _detachView(view) {\n    var shouldTriggerDetach = view._isAttached && !this._shouldDisableMonitoring();\n    var shouldRestoreEl = this._isReplaced;\n    if (shouldTriggerDetach) {\n      triggerMethodOn(view, 'before:detach', view);\n    }\n\n    if (shouldRestoreEl) {\n      this.Dom.replaceEl(this.el, view.el);\n    } else {\n      this.detachHtml();\n    }\n\n    if (shouldTriggerDetach) {\n      view._isAttached = false;\n      triggerMethodOn(view, 'detach', view);\n    }\n  },\n\n\n  // Override this method to change how the region detaches current content\n  detachHtml: function detachHtml() {\n    this.Dom.detachContents(this.el, this.$el);\n  },\n\n\n  // Checks whether a view is currently present within the region. Returns `true` if there is\n  // and `false` if no view is present.\n  hasView: function hasView() {\n    return !!this.currentView;\n  },\n\n\n  // Reset the region by destroying any existing view and clearing out the cached `$el`.\n  // The next time a view is shown via this region, the region will re-query the DOM for\n  // the region's `el`.\n  reset: function reset(options) {\n    this.empty(options);\n\n    if (this.$el) {\n      this.el = this._initEl;\n    }\n\n    delete this.$el;\n    return this;\n  },\n  destroy: function destroy(options) {\n    if (this._isDestroyed) {\n      return this;\n    }\n\n    this.reset(options);\n\n    if (this._name) {\n      this._parentView._removeReferences(this._name);\n    }\n    delete this._parentView;\n    delete this._name;\n\n    return MarionetteObject.prototype.destroy.apply(this, arguments);\n  }\n}, {\n  setDomApi: setDomApi\n});\n\n// return the region instance from the definition\nvar buildRegion = function (definition, defaults) {\n  if (definition instanceof Region) {\n    return definition;\n  }\n\n  return buildRegionFromDefinition(definition, defaults);\n};\n\nfunction buildRegionFromDefinition(definition, defaults) {\n  var opts = _.extend({}, defaults);\n\n  if (_.isString(definition)) {\n    _.extend(opts, { el: definition });\n\n    return buildRegionFromObject(opts);\n  }\n\n  if (_.isFunction(definition)) {\n    _.extend(opts, { regionClass: definition });\n\n    return buildRegionFromObject(opts);\n  }\n\n  if (_.isObject(definition)) {\n    if (definition.selector) {\n      deprecate('The selector option on a Region definition object is deprecated. Use el to pass a selector string');\n    }\n\n    _.extend(opts, { el: definition.selector }, definition);\n\n    return buildRegionFromObject(opts);\n  }\n\n  throw new MarionetteError({\n    message: 'Improper region configuration type.',\n    url: 'marionette.region.html#region-configuration-types'\n  });\n}\n\nfunction buildRegionFromObject(definition) {\n  var RegionClass = definition.regionClass;\n\n  var options = _.omit(definition, 'regionClass');\n\n  return new RegionClass(options);\n}\n\n// MixinOptions\n// - regions\n// - regionClass\n\nvar RegionsMixin = {\n  regionClass: Region,\n\n  // Internal method to initialize the regions that have been defined in a\n  // `regions` attribute on this View.\n  _initRegions: function _initRegions() {\n\n    // init regions hash\n    this.regions = this.regions || {};\n    this._regions = {};\n\n    this.addRegions(_.result(this, 'regions'));\n  },\n\n\n  // Internal method to re-initialize all of the regions by updating\n  // the `el` that they point to\n  _reInitRegions: function _reInitRegions() {\n    _invoke(this._regions, 'reset');\n  },\n\n\n  // Add a single region, by name, to the View\n  addRegion: function addRegion(name, definition) {\n    var regions = {};\n    regions[name] = definition;\n    return this.addRegions(regions)[name];\n  },\n\n\n  // Add multiple regions as a {name: definition, name2: def2} object literal\n  addRegions: function addRegions(regions) {\n    // If there's nothing to add, stop here.\n    if (_.isEmpty(regions)) {\n      return;\n    }\n\n    // Normalize region selectors hash to allow\n    // a user to use the @ui. syntax.\n    regions = this.normalizeUIValues(regions, ['selector', 'el']);\n\n    // Add the regions definitions to the regions property\n    this.regions = _.extend({}, this.regions, regions);\n\n    return this._addRegions(regions);\n  },\n\n\n  // internal method to build and add regions\n  _addRegions: function _addRegions(regionDefinitions) {\n    var _this = this;\n\n    var defaults = {\n      regionClass: this.regionClass,\n      parentEl: _.partial(_.result, this, 'el')\n    };\n\n    return _.reduce(regionDefinitions, function (regions, definition, name) {\n      regions[name] = buildRegion(definition, defaults);\n      _this._addRegion(regions[name], name);\n      return regions;\n    }, {});\n  },\n  _addRegion: function _addRegion(region, name) {\n    this.triggerMethod('before:add:region', this, name, region);\n\n    region._parentView = this;\n    region._name = name;\n\n    this._regions[name] = region;\n\n    this.triggerMethod('add:region', this, name, region);\n  },\n\n\n  // Remove a single region from the View, by name\n  removeRegion: function removeRegion(name) {\n    var region = this._regions[name];\n\n    this._removeRegion(region, name);\n\n    return region;\n  },\n\n\n  // Remove all regions from the View\n  removeRegions: function removeRegions() {\n    var regions = this._getRegions();\n\n    _.each(this._regions, _.bind(this._removeRegion, this));\n\n    return regions;\n  },\n  _removeRegion: function _removeRegion(region, name) {\n    this.triggerMethod('before:remove:region', this, name, region);\n\n    region.destroy();\n\n    this.triggerMethod('remove:region', this, name, region);\n  },\n\n\n  // Called in a region's destroy\n  _removeReferences: function _removeReferences(name) {\n    delete this.regions[name];\n    delete this._regions[name];\n  },\n\n\n  // Empty all regions in the region manager, but\n  // leave them attached\n  emptyRegions: function emptyRegions() {\n    var regions = this.getRegions();\n    _invoke(regions, 'empty');\n    return regions;\n  },\n\n\n  // Checks to see if view contains region\n  // Accepts the region name\n  // hasRegion('main')\n  hasRegion: function hasRegion(name) {\n    return !!this.getRegion(name);\n  },\n\n\n  // Provides access to regions\n  // Accepts the region name\n  // getRegion('main')\n  getRegion: function getRegion(name) {\n    if (!this._isRendered) {\n      this.render();\n    }\n    return this._regions[name];\n  },\n\n\n  // Get all regions\n  _getRegions: function _getRegions() {\n    return _.clone(this._regions);\n  },\n  getRegions: function getRegions() {\n    if (!this._isRendered) {\n      this.render();\n    }\n    return this._getRegions();\n  },\n  showChildView: function showChildView(name, view) {\n    var region = this.getRegion(name);\n\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    return region.show.apply(region, [view].concat(args));\n  },\n  detachChildView: function detachChildView(name) {\n    return this.getRegion(name).detachView();\n  },\n  getChildView: function getChildView(name) {\n    return this.getRegion(name).currentView;\n  }\n};\n\n// Renderer\n// --------\n\n// Render a template with data by passing in the template\n// selector and the data to render.\nvar Renderer = {\n\n  // Render a template with data. The `template` parameter is\n  // passed to the `TemplateCache` object to retrieve the\n  // template function. Override this method to provide your own\n  // custom rendering and template handling for all of Marionette.\n  render: function render(template, data) {\n    if (!template) {\n      throw new MarionetteError({\n        name: 'TemplateNotFoundError',\n        message: 'Cannot render the template since its false, null or undefined.'\n      });\n    }\n\n    var templateFunc = _.isFunction(template) ? template : TemplateCache.get(template);\n\n    return templateFunc(data);\n  }\n};\n\n// View\n// ---------\n\nvar ClassOptions$1 = ['behaviors', 'childViewEventPrefix', 'childViewEvents', 'childViewTriggers', 'collectionEvents', 'events', 'modelEvents', 'regionClass', 'regions', 'template', 'templateContext', 'triggers', 'ui'];\n\n// The standard view. Includes view events, automatic rendering\n// of Underscore templates, nested views, and more.\nvar View = Backbone.View.extend({\n  constructor: function constructor(options) {\n    this.render = _.bind(this.render, this);\n\n    this._setOptions(options);\n\n    this.mergeOptions(options, ClassOptions$1);\n\n    monitorViewEvents(this);\n\n    this._initBehaviors();\n    this._initRegions();\n\n    var args = Array.prototype.slice.call(arguments);\n    args[0] = this.options;\n    Backbone.View.prototype.constructor.apply(this, args);\n\n    this.delegateEntityEvents();\n\n    this._triggerEventOnBehaviors('initialize', this);\n  },\n\n\n  // Serialize the view's model *or* collection, if\n  // it exists, for the template\n  serializeData: function serializeData() {\n    if (!this.model && !this.collection) {\n      return {};\n    }\n\n    // If we have a model, we serialize that\n    if (this.model) {\n      return this.serializeModel();\n    }\n\n    // Otherwise, we serialize the collection,\n    // making it available under the `items` property\n    return {\n      items: this.serializeCollection()\n    };\n  },\n\n\n  // Prepares the special `model` property of a view\n  // for being displayed in the template. By default\n  // we simply clone the attributes. Override this if\n  // you need a custom transformation for your view's model\n  serializeModel: function serializeModel() {\n    if (!this.model) {\n      return {};\n    }\n    return _.clone(this.model.attributes);\n  },\n\n\n  // Serialize a collection by cloning each of\n  // its model's attributes\n  serializeCollection: function serializeCollection() {\n    if (!this.collection) {\n      return {};\n    }\n    return this.collection.map(function (model) {\n      return _.clone(model.attributes);\n    });\n  },\n\n\n  // Overriding Backbone.View's `setElement` to handle\n  // if an el was previously defined. If so, the view might be\n  // rendered or attached on setElement.\n  setElement: function setElement() {\n    var hasEl = !!this.el;\n\n    Backbone.View.prototype.setElement.apply(this, arguments);\n\n    if (hasEl) {\n      this._isRendered = this.Dom.hasContents(this.el);\n      this._isAttached = isNodeAttached(this.el);\n    }\n\n    if (this._isRendered) {\n      this.bindUIElements();\n    }\n\n    return this;\n  },\n\n\n  // Render the view, defaulting to underscore.js templates.\n  // You can override this in your view definition to provide\n  // a very specific rendering for your view. In general, though,\n  // you should override the `Marionette.Renderer` object to\n  // change how Marionette renders views.\n  // Subsequent renders after the first will re-render all nested\n  // views.\n  render: function render() {\n    if (this._isDestroyed) {\n      return this;\n    }\n\n    this.triggerMethod('before:render', this);\n\n    // If this is not the first render call, then we need to\n    // re-initialize the `el` for each region\n    if (this._isRendered) {\n      this._reInitRegions();\n    }\n\n    this._renderTemplate();\n    this.bindUIElements();\n\n    this._isRendered = true;\n    this.triggerMethod('render', this);\n\n    return this;\n  },\n\n\n  // Internal method to render the template with the serialized data\n  // and template context via the `Marionette.Renderer` object.\n  _renderTemplate: function _renderTemplate() {\n    var template = this.getTemplate();\n\n    // Allow template-less views\n    if (template === false) {\n      deprecate('template:false is deprecated.  Use _.noop.');\n      return;\n    }\n\n    // Add in entity data and template context\n    var data = this.mixinTemplateContext(this.serializeData());\n\n    // Render and add to el\n    var html = this._renderHtml(template, data);\n    this.attachElContent(html);\n  },\n\n\n  // Renders the data into the template\n  _renderHtml: function _renderHtml(template, data) {\n    return Renderer.render(template, data, this);\n  },\n\n\n  // Get the template for this view\n  // instance. You can set a `template` attribute in the view\n  // definition or pass a `template: \"whatever\"` parameter in\n  // to the constructor options.\n  getTemplate: function getTemplate() {\n    return this.template;\n  },\n\n\n  // Mix in template context methods. Looks for a\n  // `templateContext` attribute, which can either be an\n  // object literal, or a function that returns an object\n  // literal. All methods and attributes from this object\n  // are copies to the object passed in.\n  mixinTemplateContext: function mixinTemplateContext() {\n    var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var templateContext = _.result(this, 'templateContext');\n    return _.extend(target, templateContext);\n  },\n\n\n  // Attaches the content of a given view.\n  // This method can be overridden to optimize rendering,\n  // or to render in a non standard way.\n  //\n  // For example, using `innerHTML` instead of `$el.html`\n  //\n  // ```js\n  // attachElContent(html) {\n  //   this.el.innerHTML = html;\n  //   return this;\n  // }\n  // ```\n  attachElContent: function attachElContent(html) {\n    this.Dom.setContents(this.el, html, this.$el);\n\n    return this;\n  },\n\n\n  // called by ViewMixin destroy\n  _removeChildren: function _removeChildren() {\n    this.removeRegions();\n  },\n  _getImmediateChildren: function _getImmediateChildren() {\n    return _.chain(this._getRegions()).map('currentView').compact().value();\n  }\n}, {\n  // Sets the renderer for the Marionette.View class\n  setRenderer: function setRenderer(renderer) {\n    this.prototype._renderHtml = renderer;\n    return this;\n  },\n\n\n  setDomApi: setDomApi\n});\n\n_.extend(View.prototype, ViewMixin, RegionsMixin);\n\n// Mix in methods from Underscore, for iteration, and other\n// collection related features.\n// Borrowing this code from Backbone.Collection:\n// https://github.com/jashkenas/backbone/blob/1.1.2/backbone.js#L962\n\nvar methods = ['forEach', 'each', 'map', 'find', 'detect', 'filter', 'select', 'reject', 'every', 'all', 'some', 'any', 'include', 'contains', 'invoke', 'toArray', 'first', 'initial', 'rest', 'last', 'without', 'isEmpty', 'pluck', 'reduce', 'partition'];\n\nvar emulateCollection = function emulateCollection(object, listProperty) {\n  _.each(methods, function (method) {\n    object[method] = function () {\n      var list = _.result(this, listProperty);\n      var args = Array.prototype.slice.call(arguments);\n      return _[method].apply(_, [list].concat(args));\n    };\n  });\n};\n\n// Provide a container to store, retrieve and\n// shut down child views.\nvar Container = function Container(views) {\n  this._views = {};\n  this._indexByModel = {};\n  this._indexByCustom = {};\n  this._updateLength();\n\n  _.each(views, _.bind(this.add, this));\n};\n\nemulateCollection(Container.prototype, '_getViews');\n\n// Container Methods\n// -----------------\n\n_.extend(Container.prototype, {\n  _getViews: function _getViews() {\n    return _.values(this._views);\n  },\n\n\n  // Add a view to this container. Stores the view\n  // by `cid` and makes it searchable by the model\n  // cid (and model itself). Optionally specify\n  // a custom key to store an retrieve the view.\n  add: function add(view, customIndex) {\n    return this._add(view, customIndex)._updateLength();\n  },\n\n\n  // To be used when avoiding call _updateLength\n  // When you are done adding all your new views\n  // call _updateLength\n  _add: function _add(view, customIndex) {\n    var viewCid = view.cid;\n\n    // store the view\n    this._views[viewCid] = view;\n\n    // index it by model\n    if (view.model) {\n      this._indexByModel[view.model.cid] = viewCid;\n    }\n\n    // index by custom\n    if (customIndex) {\n      this._indexByCustom[customIndex] = viewCid;\n    }\n\n    return this;\n  },\n\n\n  // Find a view by the model that was attached to\n  // it. Uses the model's `cid` to find it.\n  findByModel: function findByModel(model) {\n    return this.findByModelCid(model.cid);\n  },\n\n\n  // Find a view by the `cid` of the model that was attached to\n  // it. Uses the model's `cid` to find the view `cid` and\n  // retrieve the view using it.\n  findByModelCid: function findByModelCid(modelCid) {\n    var viewCid = this._indexByModel[modelCid];\n    return this.findByCid(viewCid);\n  },\n\n\n  // Find a view by a custom indexer.\n  findByCustom: function findByCustom(index) {\n    var viewCid = this._indexByCustom[index];\n    return this.findByCid(viewCid);\n  },\n\n\n  // Find by index. This is not guaranteed to be a\n  // stable index.\n  findByIndex: function findByIndex(index) {\n    return _.values(this._views)[index];\n  },\n\n\n  // retrieve a view by its `cid` directly\n  findByCid: function findByCid(cid) {\n    return this._views[cid];\n  },\n\n\n  // Remove a view\n  remove: function remove(view) {\n    return this._remove(view)._updateLength();\n  },\n\n\n  // To be used when avoiding call _updateLength\n  // When you are done adding all your new views\n  // call _updateLength\n  _remove: function _remove(view) {\n    var viewCid = view.cid;\n\n    // delete model index\n    if (view.model) {\n      delete this._indexByModel[view.model.cid];\n    }\n\n    // delete custom index\n    _.some(this._indexByCustom, _.bind(function (cid, key) {\n      if (cid === viewCid) {\n        delete this._indexByCustom[key];\n        return true;\n      }\n    }, this));\n\n    // remove the view from the container\n    delete this._views[viewCid];\n\n    return this;\n  },\n\n\n  // Update the `.length` attribute on this container\n  _updateLength: function _updateLength() {\n    this.length = _.size(this._views);\n\n    return this;\n  }\n});\n\n// Collection View\n// ---------------\n\nvar ClassOptions$3 = ['behaviors', 'childView', 'childViewEventPrefix', 'childViewEvents', 'childViewOptions', 'childViewTriggers', 'collectionEvents', 'events', 'filter', 'emptyView', 'emptyViewOptions', 'modelEvents', 'reorderOnSort', 'sort', 'triggers', 'ui', 'viewComparator'];\n\n// A view that iterates over a Backbone.Collection\n// and renders an individual child view for each model.\nvar CollectionView = Backbone.View.extend({\n\n  // flag for maintaining the sorted order of the collection\n  sort: true,\n\n  // constructor\n  // option to pass `{sort: false}` to prevent the `CollectionView` from\n  // maintaining the sorted order of the collection.\n  // This will fallback onto appending childView's to the end.\n  //\n  // option to pass `{viewComparator: compFunction()}` to allow the `CollectionView`\n  // to use a custom sort order for the collection.\n  constructor: function constructor(options) {\n    this.render = _.bind(this.render, this);\n\n    this._setOptions(options);\n\n    this.mergeOptions(options, ClassOptions$3);\n\n    monitorViewEvents(this);\n\n    this._initBehaviors();\n    this.once('render', this._initialEvents);\n    this._initChildViewStorage();\n    this._bufferedChildren = [];\n\n    var args = Array.prototype.slice.call(arguments);\n    args[0] = this.options;\n    Backbone.View.prototype.constructor.apply(this, args);\n\n    this.delegateEntityEvents();\n\n    this._triggerEventOnBehaviors('initialize', this);\n  },\n\n\n  // Instead of inserting elements one by one into the page, it's much more performant to insert\n  // elements into a document fragment and then insert that document fragment into the page\n  _startBuffering: function _startBuffering() {\n    this._isBuffering = true;\n  },\n  _endBuffering: function _endBuffering() {\n    var shouldTriggerAttach = this._isAttached && this.monitorViewEvents !== false;\n    var triggerOnChildren = shouldTriggerAttach ? this._getImmediateChildren() : [];\n\n    this._isBuffering = false;\n\n    _.each(triggerOnChildren, function (child) {\n      triggerMethodOn(child, 'before:attach', child);\n    });\n\n    this.attachBuffer(this, this._createBuffer());\n\n    _.each(triggerOnChildren, function (child) {\n      child._isAttached = true;\n      triggerMethodOn(child, 'attach', child);\n    });\n\n    this._bufferedChildren = [];\n  },\n  _getImmediateChildren: function _getImmediateChildren() {\n    return _.values(this.children._views);\n  },\n\n\n  // Configured the initial events that the collection view binds to.\n  _initialEvents: function _initialEvents() {\n    if (this.collection) {\n      this.listenTo(this.collection, 'add', this._onCollectionAdd);\n      this.listenTo(this.collection, 'update', this._onCollectionUpdate);\n      this.listenTo(this.collection, 'reset', this.render);\n\n      if (this.sort) {\n        this.listenTo(this.collection, 'sort', this._sortViews);\n      }\n    }\n  },\n\n\n  // Handle a child added to the collection\n  _onCollectionAdd: function _onCollectionAdd(child, collection, opts) {\n    // `index` is present when adding with `at` since BB 1.2; indexOf fallback for < 1.2\n    var index = opts.at !== undefined && (opts.index || collection.indexOf(child));\n\n    // When filtered or when there is no initial index, calculate index.\n    if (this.filter || index === false) {\n      index = _.indexOf(this._filteredSortedModels(index), child);\n    }\n\n    if (this._shouldAddChild(child, index)) {\n      this._destroyEmptyView();\n      this._addChild(child, index);\n    }\n  },\n\n\n  // Handle collection update model removals\n  _onCollectionUpdate: function _onCollectionUpdate(collection, options) {\n    var changes = options.changes;\n    this._removeChildModels(changes.removed);\n  },\n\n\n  // Remove the child views and destroy them.\n  // This function also updates the indices of later views\n  // in the collection in order to keep the children in sync with the collection.\n  // \"models\" is an array of models and the corresponding views\n  // will be removed and destroyed from the CollectionView\n  _removeChildModels: function _removeChildModels(models) {\n    // Used to determine where to update the remaining\n    // sibling view indices after these views are removed.\n    var removedViews = this._getRemovedViews(models);\n\n    if (!removedViews.length) {\n      return;\n    }\n\n    this.children._updateLength();\n\n    // decrement the index of views after this one\n    this._updateIndices(removedViews, false);\n\n    if (this.isEmpty()) {\n      this._showEmptyView();\n    }\n  },\n\n\n  // Returns the views that will be used for re-indexing\n  // through CollectionView#_updateIndices.\n  _getRemovedViews: function _getRemovedViews(models) {\n    var _this = this;\n\n    // Returning a view means something was removed.\n    return _.reduce(models, function (removingViews, model) {\n      var view = model && _this.children.findByModel(model);\n\n      if (!view || view._isDestroyed) {\n        return removingViews;\n      }\n\n      _this._removeChildView(view);\n\n      removingViews.push(view);\n\n      return removingViews;\n    }, []);\n  },\n  _removeChildView: function _removeChildView(view) {\n    this.triggerMethod('before:remove:child', this, view);\n\n    this.children._remove(view);\n    view._shouldDisableEvents = this.monitorViewEvents === false;\n    destroyView(view);\n\n    this.stopListening(view);\n    this.triggerMethod('remove:child', this, view);\n  },\n\n\n  // Overriding Backbone.View's `setElement` to handle\n  // if an el was previously defined. If so, the view might be\n  // attached on setElement.\n  setElement: function setElement() {\n    var hasEl = !!this.el;\n\n    Backbone.View.prototype.setElement.apply(this, arguments);\n\n    if (hasEl) {\n      this._isAttached = isNodeAttached(this.el);\n    }\n\n    return this;\n  },\n\n\n  // Render children views. Override this method to provide your own implementation of a\n  // render function for the collection view.\n  render: function render() {\n    if (this._isDestroyed) {\n      return this;\n    }\n    this.triggerMethod('before:render', this);\n    this._renderChildren();\n    this._isRendered = true;\n    this.triggerMethod('render', this);\n    return this;\n  },\n\n\n  // An efficient rendering used for filtering. Instead of modifying the whole DOM for the\n  // collection view, we are only adding or removing the related childrenViews.\n  setFilter: function setFilter(filter) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        preventRender = _ref.preventRender;\n\n    var canBeRendered = this._isRendered && !this._isDestroyed;\n    var filterChanged = this.filter !== filter;\n    var shouldRender = canBeRendered && filterChanged && !preventRender;\n\n    if (shouldRender) {\n      var previousModels = this._filteredSortedModels();\n      this.filter = filter;\n      var models = this._filteredSortedModels();\n      this._applyModelDeltas(models, previousModels);\n    } else {\n      this.filter = filter;\n    }\n\n    return this;\n  },\n\n\n  // `removeFilter` is actually an alias for removing filters.\n  removeFilter: function removeFilter(options) {\n    return this.setFilter(null, options);\n  },\n\n\n  // Calculate and apply difference by cid between `models` and `previousModels`.\n  _applyModelDeltas: function _applyModelDeltas(models, previousModels) {\n    var _this2 = this;\n\n    var currentIds = {};\n    _.each(models, function (model, index) {\n      var addedChildNotExists = !_this2.children.findByModel(model);\n      if (addedChildNotExists) {\n        _this2._onCollectionAdd(model, _this2.collection, { at: index });\n      }\n      currentIds[model.cid] = true;\n    });\n\n    var removeModels = _.filter(previousModels, function (prevModel) {\n      return !currentIds[prevModel.cid] && _this2.children.findByModel(prevModel);\n    });\n\n    this._removeChildModels(removeModels);\n  },\n\n\n  // Reorder DOM after sorting. When your element's rendering do not use their index,\n  // you can pass reorderOnSort: true to only reorder the DOM after a sort instead of\n  // rendering all the collectionView.\n  reorder: function reorder() {\n    var _this3 = this;\n\n    var children = this.children;\n    var models = this._filteredSortedModels();\n\n    if (!models.length && this._showingEmptyView) {\n      return this;\n    }\n\n    var anyModelsAdded = _.some(models, function (model) {\n      return !children.findByModel(model);\n    });\n\n    // If there are any new models added due to filtering we need to add child views,\n    // so render as normal.\n    if (anyModelsAdded) {\n      this.render();\n    } else {\n\n      var filteredOutModels = [];\n\n      // Get the DOM nodes in the same order as the models and\n      // find the model that were children before but aren't in this new order.\n      var elsToReorder = _.reduce(this.children._views, function (viewEls, view) {\n        var index = _.indexOf(models, view.model);\n\n        if (index === -1) {\n          filteredOutModels.push(view.model);\n          return viewEls;\n        }\n\n        view._index = index;\n\n        viewEls[index] = view.el;\n\n        return viewEls;\n      }, new Array(models.length));\n\n      this.triggerMethod('before:reorder', this);\n\n      var elBuffer = this.Dom.createBuffer();\n\n      _.each(elsToReorder, function (el) {\n        _this3.Dom.appendContents(elBuffer, el);\n      });\n\n      // Since append moves elements that are already in the DOM, appending the elements\n      // will effectively reorder them.\n      this._appendReorderedChildren(elBuffer);\n\n      // remove any views that have been filtered out\n      this._removeChildModels(filteredOutModels);\n\n      this.triggerMethod('reorder', this);\n    }\n    return this;\n  },\n\n\n  // Render view after sorting. Override this method to change how the view renders\n  // after a `sort` on the collection.\n  resortView: function resortView() {\n    if (this.reorderOnSort) {\n      this.reorder();\n    } else {\n      this._renderChildren();\n    }\n    return this;\n  },\n\n\n  // Internal method. This checks for any changes in the order of the collection.\n  // If the index of any view doesn't match, it will render.\n  _sortViews: function _sortViews() {\n    var _this4 = this;\n\n    var models = this._filteredSortedModels();\n\n    // check for any changes in sort order of views\n    var orderChanged = _.find(models, function (item, index) {\n      var view = _this4.children.findByModel(item);\n      return !view || view._index !== index;\n    });\n\n    if (orderChanged) {\n      this.resortView();\n    }\n  },\n\n\n  // Internal reference to what index a `emptyView` is.\n  _emptyViewIndex: -1,\n\n  // Internal method. Separated so that CompositeView can append to the childViewContainer\n  // if necessary\n  _appendReorderedChildren: function _appendReorderedChildren(children) {\n    this.Dom.appendContents(this.el, children, { _$el: this.$el });\n  },\n\n\n  // Internal method. Separated so that CompositeView can have more control over events\n  // being triggered, around the rendering process\n  _renderChildren: function _renderChildren() {\n    if (this._isRendered) {\n      this._destroyEmptyView();\n      this._destroyChildren();\n    }\n\n    var models = this._filteredSortedModels();\n    if (this.isEmpty({ processedModels: models })) {\n      this._showEmptyView();\n    } else {\n      this.triggerMethod('before:render:children', this);\n      this._startBuffering();\n      this._showCollection(models);\n      this._endBuffering();\n      this.triggerMethod('render:children', this);\n    }\n  },\n  _createView: function _createView(model, index) {\n    var ChildView = this._getChildView(model);\n    var childViewOptions = this._getChildViewOptions(model, index);\n    var view = this.buildChildView(model, ChildView, childViewOptions);\n    return view;\n  },\n  _setupChildView: function _setupChildView(view, index) {\n    monitorViewEvents(view);\n\n    // set up the child view event forwarding\n    this._proxyChildViewEvents(view);\n\n    if (this.sort) {\n      view._index = index;\n    }\n  },\n\n\n  // Internal method to loop through collection and show each child view.\n  _showCollection: function _showCollection(models) {\n    _.each(models, _.bind(this._addChild, this));\n    this.children._updateLength();\n  },\n\n\n  // Allow the collection to be sorted by a custom view comparator\n  _filteredSortedModels: function _filteredSortedModels(addedAt) {\n    if (!this.collection || !this.collection.length) {\n      return [];\n    }\n\n    var viewComparator = this.getViewComparator();\n    var models = this.collection.models;\n    addedAt = Math.min(Math.max(addedAt, 0), models.length - 1);\n\n    if (viewComparator) {\n      var addedModel = void 0;\n      // Preserve `at` location, even for a sorted view\n      if (addedAt) {\n        addedModel = models[addedAt];\n        models = models.slice(0, addedAt).concat(models.slice(addedAt + 1));\n      }\n      models = this._sortModelsBy(models, viewComparator);\n      if (addedModel) {\n        models.splice(addedAt, 0, addedModel);\n      }\n    }\n\n    // Filter after sorting in case the filter uses the index\n    models = this._filterModels(models);\n\n    return models;\n  },\n  getViewComparator: function getViewComparator() {\n    return this.viewComparator;\n  },\n\n\n  // Filter an array of models, if a filter exists\n  _filterModels: function _filterModels(models) {\n    var _this5 = this;\n\n    if (this.filter) {\n      models = _.filter(models, function (model, index) {\n        return _this5._shouldAddChild(model, index);\n      });\n    }\n    return models;\n  },\n  _sortModelsBy: function _sortModelsBy(models, comparator) {\n    if (typeof comparator === 'string') {\n      return _.sortBy(models, function (model) {\n        return model.get(comparator);\n      });\n    } else if (comparator.length === 1) {\n      return _.sortBy(models, _.bind(comparator, this));\n    } else {\n      return _.clone(models).sort(_.bind(comparator, this));\n    }\n  },\n\n\n  // Internal method to show an empty view in place of a collection of child views,\n  // when the collection is empty\n  _showEmptyView: function _showEmptyView() {\n    var EmptyView = this._getEmptyView();\n\n    if (EmptyView && !this._showingEmptyView) {\n      this._showingEmptyView = true;\n\n      var model = new Backbone.Model();\n      var emptyViewOptions = this.emptyViewOptions || this.childViewOptions;\n      if (_.isFunction(emptyViewOptions)) {\n        emptyViewOptions = emptyViewOptions.call(this, model, this._emptyViewIndex);\n      }\n\n      var view = this.buildChildView(model, EmptyView, emptyViewOptions);\n\n      this.triggerMethod('before:render:empty', this, view);\n      this.addChildView(view, 0);\n      this.triggerMethod('render:empty', this, view);\n    }\n  },\n\n\n  // Internal method to destroy an existing emptyView instance if one exists. Called when\n  // a collection view has been rendered empty, and then a child is added to the collection.\n  _destroyEmptyView: function _destroyEmptyView() {\n    if (this._showingEmptyView) {\n      this.triggerMethod('before:remove:empty', this);\n\n      this._destroyChildren();\n      delete this._showingEmptyView;\n\n      this.triggerMethod('remove:empty', this);\n    }\n  },\n\n\n  // Retrieve the empty view class\n  _getEmptyView: function _getEmptyView() {\n    var emptyView = this.emptyView;\n\n    if (!emptyView) {\n      return;\n    }\n\n    return this._getView(emptyView);\n  },\n\n\n  // Retrieve the `childView` class\n  // The `childView` property can be either a view class or a function that\n  // returns a view class. If it is a function, it will receive the model that\n  // will be passed to the view instance (created from the returned view class)\n  _getChildView: function _getChildView(child) {\n    var childView = this.childView;\n\n    if (!childView) {\n      throw new MarionetteError({\n        name: 'NoChildViewError',\n        message: 'A \"childView\" must be specified'\n      });\n    }\n\n    childView = this._getView(childView, child);\n\n    if (!childView) {\n      throw new MarionetteError({\n        name: 'InvalidChildViewError',\n        message: '\"childView\" must be a view class or a function that returns a view class'\n      });\n    }\n\n    return childView;\n  },\n\n\n  // First check if the `view` is a view class (the common case)\n  // Then check if it's a function (which we assume that returns a view class)\n  _getView: function _getView(view, child) {\n    if (view.prototype instanceof Backbone.View || view === Backbone.View) {\n      return view;\n    } else if (_.isFunction(view)) {\n      return view.call(this, child);\n    }\n  },\n\n\n  // Internal method for building and adding a child view\n  _addChild: function _addChild(child, index) {\n    var view = this._createView(child, index);\n    this.addChildView(view, index);\n\n    return view;\n  },\n  _getChildViewOptions: function _getChildViewOptions(child, index) {\n    if (_.isFunction(this.childViewOptions)) {\n      return this.childViewOptions(child, index);\n    }\n\n    return this.childViewOptions;\n  },\n\n\n  // Render the child's view and add it to the HTML for the collection view at a given index.\n  // This will also update the indices of later views in the collection in order to keep the\n  // children in sync with the collection.\n  addChildView: function addChildView(view, index) {\n    this.triggerMethod('before:add:child', this, view);\n    this._setupChildView(view, index);\n\n    // Store the child view itself so we can properly remove and/or destroy it later\n    if (this._isBuffering) {\n      // Add to children, but don't update children's length.\n      this.children._add(view);\n    } else {\n      // increment indices of views after this one\n      this._updateIndices(view, true);\n      this.children.add(view);\n    }\n\n    renderView(view);\n\n    this._attachView(view, index);\n\n    this.triggerMethod('add:child', this, view);\n\n    return view;\n  },\n\n\n  // Internal method. This decrements or increments the indices of views after the added/removed\n  // view to keep in sync with the collection.\n  _updateIndices: function _updateIndices(views, increment) {\n    if (!this.sort) {\n      return;\n    }\n\n    if (!increment) {\n      _.each(_.sortBy(this.children._views, '_index'), function (view, index) {\n        view._index = index;\n      });\n\n      return;\n    }\n\n    var view = _.isArray(views) ? _.max(views, '_index') : views;\n\n    if (_.isObject(view)) {\n      // update the indexes of views after this one\n      _.each(this.children._views, function (laterView) {\n        if (laterView._index >= view._index) {\n          laterView._index += 1;\n        }\n      });\n    }\n  },\n  _attachView: function _attachView(view, index) {\n    // Only trigger attach if already attached and not buffering,\n    // otherwise _endBuffering() or Region#show() handles this.\n    var shouldTriggerAttach = !view._isAttached && !this._isBuffering && this._isAttached && this.monitorViewEvents !== false;\n\n    if (shouldTriggerAttach) {\n      triggerMethodOn(view, 'before:attach', view);\n    }\n\n    this.attachHtml(this, view, index);\n\n    if (shouldTriggerAttach) {\n      view._isAttached = true;\n      triggerMethodOn(view, 'attach', view);\n    }\n  },\n\n\n  // Build a `childView` for a model in the collection.\n  buildChildView: function buildChildView(child, ChildViewClass, childViewOptions) {\n    var options = _.extend({ model: child }, childViewOptions);\n    return new ChildViewClass(options);\n  },\n\n\n  // Remove the child view and destroy it. This function also updates the indices of later views\n  // in the collection in order to keep the children in sync with the collection.\n  removeChildView: function removeChildView(view) {\n    if (!view || view._isDestroyed) {\n      return view;\n    }\n\n    this._removeChildView(view);\n    this.children._updateLength();\n    // decrement the index of views after this one\n    this._updateIndices(view, false);\n    return view;\n  },\n\n\n  // check if the collection is empty or optionally whether an array of pre-processed models is empty\n  isEmpty: function isEmpty(options) {\n    var models = void 0;\n    if (_.result(options, 'processedModels')) {\n      models = options.processedModels;\n    } else {\n      models = this.collection ? this.collection.models : [];\n      models = this._filterModels(models);\n    }\n    return models.length === 0;\n  },\n\n\n  // You might need to override this if you've overridden attachHtml\n  attachBuffer: function attachBuffer(collectionView, buffer) {\n    this.Dom.appendContents(collectionView.el, buffer, { _$el: collectionView.$el });\n  },\n\n\n  // Create a fragment buffer from the currently buffered children\n  _createBuffer: function _createBuffer() {\n    var _this6 = this;\n\n    var elBuffer = this.Dom.createBuffer();\n    _.each(this._bufferedChildren, function (b) {\n      _this6.Dom.appendContents(elBuffer, b.el, { _$contents: b.$el });\n    });\n    return elBuffer;\n  },\n\n\n  // Append the HTML to the collection's `el`. Override this method to do something other\n  // than `.append`.\n  attachHtml: function attachHtml(collectionView, childView, index) {\n    if (collectionView._isBuffering) {\n      // buffering happens on reset events and initial renders\n      // in order to reduce the number of inserts into the\n      // document, which are expensive.\n      collectionView._bufferedChildren.splice(index, 0, childView);\n    } else {\n      // If we've already rendered the main collection, append\n      // the new child into the correct order if we need to. Otherwise\n      // append to the end.\n      if (!collectionView._insertBefore(childView, index)) {\n        collectionView._insertAfter(childView);\n      }\n    }\n  },\n\n\n  // Internal method. Check whether we need to insert the view into the correct position.\n  _insertBefore: function _insertBefore(childView, index) {\n    var currentView = void 0;\n    var findPosition = this.sort && index < this.children.length - 1;\n    if (findPosition) {\n      // Find the view after this one\n      currentView = _.find(this.children._views, function (view) {\n        return view._index === index + 1;\n      });\n    }\n\n    if (currentView) {\n      this.beforeEl(currentView.el, childView.el);\n      return true;\n    }\n\n    return false;\n  },\n\n\n  // Override to handle DOM inserting differently\n  beforeEl: function beforeEl(el, siblings) {\n    this.$(el).before(siblings);\n  },\n\n\n  // Internal method. Append a view to the end of the $el\n  _insertAfter: function _insertAfter(childView) {\n    this.Dom.appendContents(this.el, childView.el, { _$el: this.$el, _$contents: childView.$el });\n  },\n\n\n  // Internal method to set up the `children` object for storing all of the child views\n  _initChildViewStorage: function _initChildViewStorage() {\n    this.children = new Container();\n  },\n\n\n  // called by ViewMixin destroy\n  _removeChildren: function _removeChildren() {\n    this._destroyChildren();\n  },\n\n\n  // Destroy the child views that this collection view is holding on to, if any\n  _destroyChildren: function _destroyChildren(options) {\n    if (!this.children.length) {\n      return;\n    }\n\n    this.triggerMethod('before:destroy:children', this);\n    _.each(this.children._views, _.bind(this._removeChildView, this));\n    this.children._updateLength();\n    this.triggerMethod('destroy:children', this);\n  },\n\n\n  // Return true if the given child should be shown. Return false otherwise.\n  // The filter will be passed (child, index, collection), where\n  //  'child' is the given model\n  //  'index' is the index of that model in the collection\n  //  'collection' is the collection referenced by this CollectionView\n  _shouldAddChild: function _shouldAddChild(child, index) {\n    var filter = this.filter;\n    return !_.isFunction(filter) || filter.call(this, child, index, this.collection);\n  }\n}, {\n  setDomApi: setDomApi\n});\n\n_.extend(CollectionView.prototype, ViewMixin);\n\n// Provide a container to store, retrieve and\n// shut down child views.\nvar Container$1 = function Container() {\n  this._init();\n};\n\nemulateCollection(Container$1.prototype, '_views');\n\nfunction stringComparator(comparator, view) {\n  return view.model && view.model.get(comparator);\n}\n\n// Container Methods\n// -----------------\n\n_.extend(Container$1.prototype, {\n\n  // Initializes an empty container\n  _init: function _init() {\n    this._views = [];\n    this._viewsByCid = {};\n    this._indexByModel = {};\n    this._updateLength();\n  },\n\n\n  // Add a view to this container. Stores the view\n  // by `cid` and makes it searchable by the model\n  // cid (and model itself). Additionally it stores\n  // the view by index in the _views array\n  _add: function _add(view) {\n    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._views.length;\n\n    var viewCid = view.cid;\n\n    // store the view\n    this._viewsByCid[viewCid] = view;\n\n    // index it by model\n    if (view.model) {\n      this._indexByModel[view.model.cid] = viewCid;\n    }\n\n    // add to end by default\n    this._views.splice(index, 0, view);\n\n    this._updateLength();\n  },\n\n\n  // Sort (mutate) and return the array of the child views.\n  _sort: function _sort(comparator) {\n    if (typeof comparator === 'string') {\n      comparator = _.partial(stringComparator, comparator);\n      return this._sortBy(comparator);\n    }\n\n    if (comparator.length === 1) {\n      return this._sortBy(comparator);\n    }\n\n    return this._views.sort(comparator);\n  },\n\n\n  // Makes `_.sortBy` mutate the array to match `this._views.sort`\n  _sortBy: function _sortBy(comparator) {\n    var sortedViews = _.sortBy(this._views, comparator);\n\n    this._set(sortedViews);\n\n    return sortedViews;\n  },\n\n\n  // Replace array contents without overwriting the reference.\n  _set: function _set(views) {\n    this._views.length = 0;\n\n    this._views.push.apply(this._views, views.slice(0));\n\n    this._updateLength();\n  },\n\n\n  // Swap views by index\n  _swap: function _swap(view1, view2) {\n    var view1Index = this.findIndexByView(view1);\n    var view2Index = this.findIndexByView(view2);\n\n    if (view1Index === -1 || view2Index === -1) {\n      return;\n    }\n\n    var swapView = this._views[view1Index];\n    this._views[view1Index] = this._views[view2Index];\n    this._views[view2Index] = swapView;\n  },\n\n\n  // Find a view by the model that was attached to it.\n  // Uses the model's `cid` to find it.\n  findByModel: function findByModel(model) {\n    return this.findByModelCid(model.cid);\n  },\n\n\n  // Find a view by the `cid` of the model that was attached to it.\n  // Uses the model's `cid` to find the view `cid` and\n  // retrieve the view using it.\n  findByModelCid: function findByModelCid(modelCid) {\n    var viewCid = this._indexByModel[modelCid];\n    return this.findByCid(viewCid);\n  },\n\n\n  // Find a view by index.\n  findByIndex: function findByIndex(index) {\n    return this._views[index];\n  },\n\n\n  // Find the index of a view instance\n  findIndexByView: function findIndexByView(view) {\n    return this._views.indexOf(view);\n  },\n\n\n  // Retrieve a view by its `cid` directly\n  findByCid: function findByCid(cid) {\n    return this._viewsByCid[cid];\n  },\n  hasView: function hasView(view) {\n    return !!this.findByCid(view.cid);\n  },\n\n\n  // Remove a view and clean up index references.\n  _remove: function _remove(view) {\n    if (!this._viewsByCid[view.cid]) {\n      return;\n    }\n\n    // delete model index\n    if (view.model) {\n      delete this._indexByModel[view.model.cid];\n    }\n\n    // remove the view from the container\n    delete this._viewsByCid[view.cid];\n\n    var index = this.findIndexByView(view);\n    this._views.splice(index, 1);\n\n    this._updateLength();\n  },\n\n\n  // Update the `.length` attribute on this container\n  _updateLength: function _updateLength() {\n    this.length = this._views.length;\n  }\n});\n\n// Next Collection View\n// ---------------\n\nvar ClassOptions$4 = ['behaviors', 'childView', 'childViewEventPrefix', 'childViewEvents', 'childViewOptions', 'childViewTriggers', 'collectionEvents', 'emptyView', 'emptyViewOptions', 'events', 'modelEvents', 'sortWithCollection', 'triggers', 'ui', 'viewComparator', 'viewFilter'];\n\n// A view that iterates over a Backbone.Collection\n// and renders an individual child view for each model.\nvar CollectionView$2 = Backbone.View.extend({\n  // flag for maintaining the sorted order of the collection\n  sortWithCollection: true,\n\n  // constructor\n  constructor: function constructor(options) {\n    this._setOptions(options);\n\n    this.mergeOptions(options, ClassOptions$4);\n\n    monitorViewEvents(this);\n\n    this.once('render', this._initialEvents);\n\n    // This children container isn't really used by a render, but it provides\n    // the ability to check `this.children.length` prior to rendering\n    // It also allows for cases where only addChildView is used\n    this._initChildViewStorage();\n    this._initBehaviors();\n\n    var args = Array.prototype.slice.call(arguments);\n    args[0] = this.options;\n    Backbone.View.prototype.constructor.apply(this, args);\n\n    // Init empty region\n    this.getEmptyRegion();\n\n    this.delegateEntityEvents();\n\n    this._triggerEventOnBehaviors('initialize', this);\n  },\n\n\n  // Internal method to set up the `children` object for storing all of the child views\n  _initChildViewStorage: function _initChildViewStorage() {\n    this.children = new Container$1();\n  },\n\n\n  // Create an region to show the emptyView\n  getEmptyRegion: function getEmptyRegion() {\n    if (this._emptyRegion && !this._emptyRegion.isDestroyed()) {\n      return this._emptyRegion;\n    }\n\n    this._emptyRegion = new Region({ el: this.el, replaceElement: false });\n\n    this._emptyRegion._parentView = this;\n\n    return this._emptyRegion;\n  },\n\n\n  // Configured the initial events that the collection view binds to.\n  _initialEvents: function _initialEvents() {\n    this.listenTo(this.collection, {\n      'sort': this._onCollectionSort,\n      'reset': this._onCollectionReset,\n      'update': this._onCollectionUpdate\n    });\n  },\n\n\n  // Internal method. This checks for any changes in the order of the collection.\n  // If the index of any view doesn't match, it will re-sort.\n  _onCollectionSort: function _onCollectionSort() {\n    var _this = this;\n\n    if (!this.sortWithCollection || this.viewComparator === false) {\n      return;\n    }\n\n    // If the data is changing we will handle the sort later\n    if (this.collection.length !== this.children.length) {\n      return;\n    }\n\n    // Additional check if the data is changing\n    var hasAddedModel = this.collection.some(function (model) {\n      return !_this.children.findByModel(model);\n    });\n\n    if (hasAddedModel) {\n      return;\n    }\n\n    // If the only thing happening here is sorting, sort.\n    this.sort();\n  },\n  _onCollectionReset: function _onCollectionReset() {\n    this.render();\n  },\n\n\n  // Handle collection update model additions and  removals\n  _onCollectionUpdate: function _onCollectionUpdate(collection, options) {\n    var changes = options.changes;\n\n    // Remove first since it'll be a shorter array lookup.\n    var removedViews = changes.removed.length && this._removeChildModels(changes.removed);\n\n    this._addedViews = changes.added.length && this._addChildModels(changes.added);\n\n    this._detachChildren(removedViews);\n\n    this._showChildren();\n\n    // Destroy removed child views after all of the render is complete\n    this._removeChildViews(removedViews);\n  },\n  _removeChildModels: function _removeChildModels(models) {\n    return _.map(models, _.bind(this._removeChildModel, this));\n  },\n  _removeChildModel: function _removeChildModel(model) {\n    var view = this.children.findByModel(model);\n\n    this._removeChild(view);\n\n    return view;\n  },\n  _removeChild: function _removeChild(view) {\n    this.triggerMethod('before:remove:child', this, view);\n\n    this.children._remove(view);\n\n    this.triggerMethod('remove:child', this, view);\n  },\n\n\n  // Added views are returned for consistency with _removeChildModels\n  _addChildModels: function _addChildModels(models) {\n    return _.map(models, _.bind(this._addChildModel, this));\n  },\n  _addChildModel: function _addChildModel(model) {\n    var view = this._createChildView(model);\n\n    this._addChild(view);\n\n    return view;\n  },\n  _createChildView: function _createChildView(model) {\n    var ChildView = this._getChildView(model);\n    var childViewOptions = this._getChildViewOptions(model);\n    var view = this.buildChildView(model, ChildView, childViewOptions);\n\n    return view;\n  },\n  _addChild: function _addChild(view, index) {\n    this.triggerMethod('before:add:child', this, view);\n\n    this._setupChildView(view);\n    this.children._add(view, index);\n\n    this.triggerMethod('add:child', this, view);\n  },\n\n\n  // Retrieve the `childView` class\n  // The `childView` property can be either a view class or a function that\n  // returns a view class. If it is a function, it will receive the model that\n  // will be passed to the view instance (created from the returned view class)\n  _getChildView: function _getChildView(child) {\n    var childView = this.childView;\n\n    if (!childView) {\n      throw new MarionetteError({\n        name: 'NoChildViewError',\n        message: 'A \"childView\" must be specified'\n      });\n    }\n\n    childView = this._getView(childView, child);\n\n    if (!childView) {\n      throw new MarionetteError({\n        name: 'InvalidChildViewError',\n        message: '\"childView\" must be a view class or a function that returns a view class'\n      });\n    }\n\n    return childView;\n  },\n\n\n  // First check if the `view` is a view class (the common case)\n  // Then check if it's a function (which we assume that returns a view class)\n  _getView: function _getView(view, child) {\n    if (view.prototype instanceof Backbone.View || view === Backbone.View) {\n      return view;\n    } else if (_.isFunction(view)) {\n      return view.call(this, child);\n    }\n  },\n  _getChildViewOptions: function _getChildViewOptions(child) {\n    if (_.isFunction(this.childViewOptions)) {\n      return this.childViewOptions(child);\n    }\n\n    return this.childViewOptions;\n  },\n\n\n  // Build a `childView` for a model in the collection.\n  // Override to customize the build\n  buildChildView: function buildChildView(child, ChildViewClass, childViewOptions) {\n    var options = _.extend({ model: child }, childViewOptions);\n    return new ChildViewClass(options);\n  },\n  _setupChildView: function _setupChildView(view) {\n    monitorViewEvents(view);\n\n    // We need to listen for if a view is destroyed in a way other\n    // than through the CollectionView.\n    // If this happens we need to remove the reference to the view\n    // since once a view has been destroyed we can not reuse it.\n    view.on('destroy', this.removeChildView, this);\n\n    // set up the child view event forwarding\n    this._proxyChildViewEvents(view);\n  },\n\n\n  // used by ViewMixin's `_childViewEventHandler`\n  _getImmediateChildren: function _getImmediateChildren() {\n    return this.children._views;\n  },\n\n\n  // Overriding Backbone.View's `setElement` to handle\n  // if an el was previously defined. If so, the view might be\n  // attached on setElement.\n  setElement: function setElement() {\n    var hasEl = !!this.el;\n\n    Backbone.View.prototype.setElement.apply(this, arguments);\n\n    if (hasEl) {\n      this._isAttached = isNodeAttached(this.el);\n    }\n\n    return this;\n  },\n\n\n  // Render children views.\n  render: function render() {\n    if (this._isDestroyed) {\n      return this;\n    }\n    this.triggerMethod('before:render', this);\n\n    this._destroyChildren();\n\n    // After all children have been destroyed re-init the container\n    this.children._init();\n\n    if (this.collection) {\n      this._addChildModels(this.collection.models);\n    }\n\n    this._showChildren();\n\n    this._isRendered = true;\n\n    this.triggerMethod('render', this);\n    return this;\n  },\n\n\n  // Sorts the children then filters and renders the results.\n  sort: function sort() {\n    if (this._isDestroyed) {\n      return this;\n    }\n\n    if (!this.children.length) {\n      return this;\n    }\n\n    this._showChildren();\n\n    return this;\n  },\n  _showChildren: function _showChildren() {\n    if (this.isEmpty()) {\n      this._showEmptyView();\n      return;\n    }\n\n    this._sortChildren();\n\n    this.filter();\n  },\n\n\n  // Returns true if the collectionView is considered empty.\n  // This is called twice during a render. Once to check the data,\n  // and again when views are filtered. Override this function to\n  // customize what empty means.\n  isEmpty: function isEmpty(allViewsFiltered) {\n    return allViewsFiltered || !this.children.length;\n  },\n  _showEmptyView: function _showEmptyView() {\n    var EmptyView = this._getEmptyView();\n\n    if (!EmptyView) {\n      return;\n    }\n\n    var options = this._getEmptyViewOptions();\n\n    var emptyRegion = this.getEmptyRegion();\n\n    emptyRegion.show(new EmptyView(options));\n  },\n\n\n  // Retrieve the empty view class\n  _getEmptyView: function _getEmptyView() {\n    var emptyView = this.emptyView;\n\n    if (!emptyView) {\n      return;\n    }\n\n    return this._getView(emptyView);\n  },\n\n\n  // Remove the emptyView\n  _destroyEmptyView: function _destroyEmptyView() {\n    var emptyRegion = this.getEmptyRegion();\n    // Only empty if a view is show so the region\n    // doesn't detach any other unrelated HTML\n    if (emptyRegion.hasView()) {\n      emptyRegion.empty();\n    }\n  },\n\n\n  //\n  _getEmptyViewOptions: function _getEmptyViewOptions() {\n    var emptyViewOptions = this.emptyViewOptions || this.childViewOptions;\n\n    if (_.isFunction(emptyViewOptions)) {\n      return emptyViewOptions.call(this);\n    }\n\n    return emptyViewOptions;\n  },\n\n\n  // Sorts views by viewComparator and sets the children to the new order\n  _sortChildren: function _sortChildren() {\n    if (this.viewComparator === false) {\n      return;\n    }\n\n    this.triggerMethod('before:sort', this);\n\n    var viewComparator = this.getComparator();\n\n    if (_.isFunction(viewComparator)) {\n      // Must use native bind to preserve length\n      viewComparator = viewComparator.bind(this);\n    }\n\n    this.children._sort(viewComparator);\n\n    this.triggerMethod('sort', this);\n  },\n\n\n  // Sets the view's `viewComparator` and applies the sort if the view is ready.\n  // To prevent the render pass `{ preventRender: true }` as the 2nd argument.\n  setComparator: function setComparator(comparator) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        preventRender = _ref.preventRender;\n\n    var comparatorChanged = this.viewComparator !== comparator;\n    var shouldSort = comparatorChanged && !preventRender;\n\n    this.viewComparator = comparator;\n\n    if (shouldSort) {\n      this.sort();\n    }\n\n    return this;\n  },\n\n\n  // Clears the `viewComparator` and follows the same rules for rendering as `setComparator`.\n  removeComparator: function removeComparator(options) {\n    return this.setComparator(null, options);\n  },\n\n\n  // If viewComparator is overriden it will be returned here.\n  // Additionally override this function to provide custom\n  // viewComparator logic\n  getComparator: function getComparator() {\n    return this.viewComparator || this._viewComparator;\n  },\n\n\n  // Default internal view comparator that order the views by\n  // the order of the collection\n  _viewComparator: function _viewComparator(view) {\n    if (!this.collection) {\n      return;\n    }\n    return this.collection.indexOf(view.model);\n  },\n\n\n  // This method re-filters the children views and re-renders the results\n  filter: function filter() {\n    if (this._isDestroyed) {\n      return this;\n    }\n\n    if (!this.children.length) {\n      return this;\n    }\n\n    var filteredViews = this._filterChildren();\n\n    this._renderChildren(filteredViews);\n\n    return this;\n  },\n  _isAddedAtEnd: function _isAddedAtEnd(addedView, index, addedViews) {\n    var viewIndex = this.children._views.length - addedViews.length + index;\n    return addedView === this.children._views[viewIndex];\n  },\n  _filterChildren: function _filterChildren() {\n    var viewFilter = this._getFilter();\n    var addedViews = this._addedViews;\n\n    delete this._addedViews;\n\n    if (!viewFilter) {\n      if (addedViews && _.every(addedViews, _.bind(this._isAddedAtEnd, this))) {\n        return addedViews;\n      }\n\n      return this.children._views;\n    }\n\n    this.triggerMethod('before:filter', this);\n\n    var filteredViews = _.partition(this.children._views, _.bind(viewFilter, this));\n\n    this._detachChildren(filteredViews[1]);\n\n    this.triggerMethod('filter', this);\n\n    return filteredViews[0];\n  },\n\n\n  // This method returns a function for the viewFilter\n  _getFilter: function _getFilter() {\n    var viewFilter = this.getFilter();\n\n    if (!viewFilter) {\n      return false;\n    }\n\n    if (_.isFunction(viewFilter)) {\n      return viewFilter;\n    }\n\n    // Support filter predicates `{ fooFlag: true }`\n    if (_.isObject(viewFilter)) {\n      var matcher = _.matches(viewFilter);\n      return function (view) {\n        return matcher(view.model && view.model.attributes);\n      };\n    }\n\n    // Filter by model attribute\n    if (_.isString(viewFilter)) {\n      return function (view) {\n        return view.model && view.model.get(viewFilter);\n      };\n    }\n\n    throw new MarionetteError({\n      name: 'InvalidViewFilterError',\n      message: '\"viewFilter\" must be a function, predicate object literal, a string indicating a model attribute, or falsy'\n    });\n  },\n\n\n  // Override this function to provide custom\n  // viewFilter logic\n  getFilter: function getFilter() {\n    return this.viewFilter;\n  },\n\n\n  // Sets the view's `viewFilter` and applies the filter if the view is ready.\n  // To prevent the render pass `{ preventRender: true }` as the 2nd argument.\n  setFilter: function setFilter(filter) {\n    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        preventRender = _ref2.preventRender;\n\n    var filterChanged = this.viewFilter !== filter;\n    var shouldRender = filterChanged && !preventRender;\n\n    this.viewFilter = filter;\n\n    if (shouldRender) {\n      this.filter();\n    }\n\n    return this;\n  },\n\n\n  // Clears the `viewFilter` and follows the same rules for rendering as `setFilter`.\n  removeFilter: function removeFilter(options) {\n    return this.setFilter(null, options);\n  },\n  _detachChildren: function _detachChildren(detachingViews) {\n    _.each(detachingViews, _.bind(this._detachChildView, this));\n  },\n  _detachChildView: function _detachChildView(view) {\n    var shouldTriggerDetach = view._isAttached && this.monitorViewEvents !== false;\n    if (shouldTriggerDetach) {\n      triggerMethodOn(view, 'before:detach', view);\n    }\n\n    this.detachHtml(view);\n\n    if (shouldTriggerDetach) {\n      view._isAttached = false;\n      triggerMethodOn(view, 'detach', view);\n    }\n  },\n\n\n  // Override this method to change how the collectionView detaches a child view\n  detachHtml: function detachHtml(view) {\n    this.Dom.detachEl(view.el, view.$el);\n  },\n  _renderChildren: function _renderChildren(views) {\n    if (this.isEmpty(!views.length)) {\n      this._showEmptyView();\n      return;\n    }\n\n    this._destroyEmptyView();\n\n    this.triggerMethod('before:render:children', this, views);\n\n    var els = this._getBuffer(views);\n\n    this._attachChildren(els, views);\n\n    this.triggerMethod('render:children', this, views);\n  },\n  _attachChildren: function _attachChildren(els, views) {\n    var shouldTriggerAttach = this._isAttached && this.monitorViewEvents !== false;\n\n    views = shouldTriggerAttach ? views : [];\n\n    _.each(views, function (view) {\n      if (view._isAttached) {\n        return;\n      }\n      triggerMethodOn(view, 'before:attach', view);\n    });\n\n    this.attachHtml(els);\n\n    _.each(views, function (view) {\n      if (view._isAttached) {\n        return;\n      }\n      view._isAttached = true;\n      triggerMethodOn(view, 'attach', view);\n    });\n  },\n\n\n  // Renders each view in children and creates a fragment buffer from them\n  _getBuffer: function _getBuffer(views) {\n    var _this2 = this;\n\n    var elBuffer = this.Dom.createBuffer();\n\n    _.each(views, function (view) {\n      renderView(view);\n      _this2.Dom.appendContents(elBuffer, view.el, { _$contents: view.$el });\n    });\n\n    return elBuffer;\n  },\n\n\n  // Override this method to do something other than `.append`.\n  // You can attach any HTML at this point including the els.\n  attachHtml: function attachHtml(els) {\n    this.Dom.appendContents(this.el, els, { _$el: this.$el });\n  },\n  swapChildViews: function swapChildViews(view1, view2) {\n    if (!this.children.hasView(view1) || !this.children.hasView(view2)) {\n      throw new MarionetteError({\n        name: 'ChildSwapError',\n        message: 'Both views must be children of the collection view'\n      });\n    }\n\n    this.children._swap(view1, view2);\n    this.Dom.swapEl(view1.el, view2.el);\n\n    // If the views are not filtered the same, refilter\n    if (this.Dom.hasEl(this.el, view1.el) !== this.Dom.hasEl(this.el, view2.el)) {\n      this.filter();\n    }\n\n    return this;\n  },\n\n\n  // Render the child's view and add it to the HTML for the collection view at a given index, based on the current sort\n  addChildView: function addChildView(view, index) {\n    if (!view || view._isDestroyed) {\n      return view;\n    }\n\n    this._addChild(view, index);\n    this._addedViews = [view];\n    this._showChildren();\n\n    return view;\n  },\n\n\n  // Detach a view from the children.  Best used when adding a\n  // childView from `addChildView`\n  detachChildView: function detachChildView(view) {\n    this.removeChildView(view, { shouldDetach: true });\n\n    return view;\n  },\n\n\n  // Remove the child view and destroy it.  Best used when adding a\n  // childView from `addChildView`\n  // The options argument is for internal use only\n  removeChildView: function removeChildView(view, options) {\n    if (!view) {\n      return view;\n    }\n\n    this._removeChildView(view, options);\n\n    this._removeChild(view);\n\n    if (this.isEmpty()) {\n      this._showEmptyView();\n    }\n\n    return view;\n  },\n  _removeChildViews: function _removeChildViews(views) {\n    _.each(views, _.bind(this._removeChildView, this));\n  },\n  _removeChildView: function _removeChildView(view) {\n    var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        shouldDetach = _ref3.shouldDetach;\n\n    view.off('destroy', this.removeChildView, this);\n\n    if (shouldDetach) {\n      this._detachChildView(view);\n    } else {\n      this._destroyChildView(view);\n    }\n\n    this.stopListening(view);\n  },\n  _destroyChildView: function _destroyChildView(view) {\n    if (view._isDestroyed) {\n      return;\n    }\n\n    view._shouldDisableEvents = this.monitorViewEvents === false;\n    destroyView(view);\n  },\n\n\n  // called by ViewMixin destroy\n  _removeChildren: function _removeChildren() {\n    this._destroyChildren();\n    var emptyRegion = this.getEmptyRegion();\n    emptyRegion.destroy();\n    delete this._addedViews;\n  },\n\n\n  // Destroy the child views that this collection view is holding on to, if any\n  _destroyChildren: function _destroyChildren() {\n    if (!this.children || !this.children.length) {\n      return;\n    }\n\n    this.triggerMethod('before:destroy:children', this);\n    if (this.monitorViewEvents === false) {\n      this.Dom.detachContents(this.el, this.$el);\n    }\n    _.each(this.children._views, _.bind(this._removeChildView, this));\n    this.triggerMethod('destroy:children', this);\n  }\n}, {\n  setDomApi: setDomApi\n});\n\n_.extend(CollectionView$2.prototype, ViewMixin);\n\n// Composite View\n// --------------\n\nvar ClassOptions$5 = ['childViewContainer', 'template', 'templateContext'];\n\n// Used for rendering a branch-leaf, hierarchical structure.\n// Extends directly from CollectionView\n// @deprecated\nvar CompositeView = CollectionView.extend({\n\n  // Setting up the inheritance chain which allows changes to\n  // Marionette.CollectionView.prototype.constructor which allows overriding\n  // option to pass '{sort: false}' to prevent the CompositeView from\n  // maintaining the sorted order of the collection.\n  // This will fallback onto appending childView's to the end.\n  constructor: function constructor(options) {\n    deprecate('CompositeView is deprecated. Convert to View at your earliest convenience');\n\n    this.mergeOptions(options, ClassOptions$5);\n\n    CollectionView.prototype.constructor.apply(this, arguments);\n  },\n\n\n  // Configured the initial events that the composite view\n  // binds to. Override this method to prevent the initial\n  // events, or to add your own initial events.\n  _initialEvents: function _initialEvents() {\n\n    // Bind only after composite view is rendered to avoid adding child views\n    // to nonexistent childViewContainer\n\n    if (this.collection) {\n      this.listenTo(this.collection, 'add', this._onCollectionAdd);\n      this.listenTo(this.collection, 'update', this._onCollectionUpdate);\n      this.listenTo(this.collection, 'reset', this.renderChildren);\n\n      if (this.sort) {\n        this.listenTo(this.collection, 'sort', this._sortViews);\n      }\n    }\n  },\n\n\n  // Retrieve the `childView` to be used when rendering each of\n  // the items in the collection. The default is to return\n  // `this.childView` or Marionette.CompositeView if no `childView`\n  // has been defined. As happens in CollectionView, `childView` can\n  // be a function (which should return a view class).\n  _getChildView: function _getChildView(child) {\n    var childView = this.childView;\n\n    // for CompositeView, if `childView` is not specified, we'll get the same\n    // composite view class rendered for each child in the collection\n    // then check if the `childView` is a view class (the common case)\n    // finally check if it's a function (which we assume that returns a view class)\n    if (!childView) {\n      return this.constructor;\n    }\n\n    childView = this._getView(childView, child);\n\n    if (!childView) {\n      throw new MarionetteError({\n        name: 'InvalidChildViewError',\n        message: '\"childView\" must be a view class or a function that returns a view class'\n      });\n    }\n\n    return childView;\n  },\n\n\n  // Return the serialized model\n  serializeData: function serializeData() {\n    return this.serializeModel();\n  },\n\n\n  // Renders the model and the collection.\n  render: function render() {\n    if (this._isDestroyed) {\n      return this;\n    }\n    this._isRendering = true;\n    this.resetChildViewContainer();\n\n    this.triggerMethod('before:render', this);\n\n    this._renderTemplate();\n    this.bindUIElements();\n    this.renderChildren();\n\n    this._isRendering = false;\n    this._isRendered = true;\n    this.triggerMethod('render', this);\n    return this;\n  },\n  renderChildren: function renderChildren() {\n    if (this._isRendered || this._isRendering) {\n      CollectionView.prototype._renderChildren.call(this);\n    }\n  },\n\n\n  // You might need to override this if you've overridden attachHtml\n  attachBuffer: function attachBuffer(compositeView, buffer) {\n    var $container = this.getChildViewContainer(compositeView);\n    this.Dom.appendContents($container[0], buffer, { _$el: $container });\n  },\n\n\n  // Internal method. Append a view to the end of the $el.\n  // Overidden from CollectionView to ensure view is appended to\n  // childViewContainer\n  _insertAfter: function _insertAfter(childView) {\n    var $container = this.getChildViewContainer(this, childView);\n    this.Dom.appendContents($container[0], childView.el, { _$el: $container, _$contents: childView.$el });\n  },\n\n\n  // Internal method. Append reordered childView'.\n  // Overidden from CollectionView to ensure reordered views\n  // are appended to childViewContainer\n  _appendReorderedChildren: function _appendReorderedChildren(children) {\n    var $container = this.getChildViewContainer(this);\n    this.Dom.appendContents($container[0], children, { _$el: $container });\n  },\n\n\n  // Internal method to ensure an `$childViewContainer` exists, for the\n  // `attachHtml` method to use.\n  getChildViewContainer: function getChildViewContainer(containerView, childView) {\n    if (!!containerView.$childViewContainer) {\n      return containerView.$childViewContainer;\n    }\n\n    var container = void 0;\n    var childViewContainer = containerView.childViewContainer;\n    if (childViewContainer) {\n\n      var selector = _.result(containerView, 'childViewContainer');\n\n      if (selector.charAt(0) === '@' && containerView.ui) {\n        container = containerView.ui[selector.substr(4)];\n      } else {\n        container = this.$(selector);\n      }\n\n      if (container.length <= 0) {\n        throw new MarionetteError({\n          name: 'ChildViewContainerMissingError',\n          message: 'The specified \"childViewContainer\" was not found: ' + containerView.childViewContainer\n        });\n      }\n    } else {\n      container = containerView.$el;\n    }\n\n    containerView.$childViewContainer = container;\n    return container;\n  },\n\n\n  // Internal method to reset the `$childViewContainer` on render\n  resetChildViewContainer: function resetChildViewContainer() {\n    if (this.$childViewContainer) {\n      this.$childViewContainer = undefined;\n    }\n  }\n});\n\n// To prevent duplication but allow the best View organization\n// Certain View methods are mixed directly into the deprecated CompositeView\nvar MixinFromView = _.pick(View.prototype, 'serializeModel', 'getTemplate', '_renderTemplate', '_renderHtml', 'mixinTemplateContext', 'attachElContent');\n_.extend(CompositeView.prototype, MixinFromView);\n\n// Behavior\n// --------\n\n// A Behavior is an isolated set of DOM /\n// user interactions that can be mixed into any View.\n// Behaviors allow you to blackbox View specific interactions\n// into portable logical chunks, keeping your views simple and your code DRY.\n\nvar ClassOptions$6 = ['collectionEvents', 'events', 'modelEvents', 'triggers', 'ui'];\n\nvar Behavior = MarionetteObject.extend({\n  cidPrefix: 'mnb',\n\n  constructor: function constructor(options, view) {\n    // Setup reference to the view.\n    // this comes in handle when a behavior\n    // wants to directly talk up the chain\n    // to the view.\n    this.view = view;\n\n    if (this.defaults) {\n      deprecate('Behavior defaults are deprecated. For similar functionality set options on the Behavior class.');\n    }\n\n    this.defaults = _.clone(_.result(this, 'defaults', {}));\n\n    this._setOptions(_.extend({}, this.defaults, options));\n    this.mergeOptions(this.options, ClassOptions$6);\n\n    // Construct an internal UI hash using\n    // the behaviors UI hash and then the view UI hash.\n    // This allows the user to use UI hash elements\n    // defined in the parent view as well as those\n    // defined in the given behavior.\n    // This order will help the reuse and share of a behavior\n    // between multiple views, while letting a view override a\n    // selector under an UI key.\n    this.ui = _.extend({}, _.result(this, 'ui'), _.result(view, 'ui'));\n\n    MarionetteObject.apply(this, arguments);\n  },\n\n\n  // proxy behavior $ method to the view\n  // this is useful for doing jquery DOM lookups\n  // scoped to behaviors view.\n  $: function $() {\n    return this.view.$.apply(this.view, arguments);\n  },\n\n\n  // Stops the behavior from listening to events.\n  // Overrides Object#destroy to prevent additional events from being triggered.\n  destroy: function destroy() {\n    this.stopListening();\n\n    this.view._removeBehavior(this);\n\n    return this;\n  },\n  proxyViewProperties: function proxyViewProperties() {\n    this.$el = this.view.$el;\n    this.el = this.view.el;\n\n    return this;\n  },\n  bindUIElements: function bindUIElements() {\n    this._bindUIElements();\n\n    return this;\n  },\n  unbindUIElements: function unbindUIElements() {\n    this._unbindUIElements();\n\n    return this;\n  },\n  getUI: function getUI(name) {\n    return this._getUI(name);\n  },\n\n\n  // Handle `modelEvents`, and `collectionEvents` configuration\n  delegateEntityEvents: function delegateEntityEvents() {\n    this._delegateEntityEvents(this.view.model, this.view.collection);\n\n    return this;\n  },\n  undelegateEntityEvents: function undelegateEntityEvents() {\n    this._undelegateEntityEvents(this.view.model, this.view.collection);\n\n    return this;\n  },\n  getEvents: function getEvents() {\n    var _this = this;\n\n    // Normalize behavior events hash to allow\n    // a user to use the @ui. syntax.\n    var behaviorEvents = this.normalizeUIKeys(_.result(this, 'events'));\n\n    // binds the handler to the behavior and builds a unique eventName\n    return _.reduce(behaviorEvents, function (events, behaviorHandler, key) {\n      if (!_.isFunction(behaviorHandler)) {\n        behaviorHandler = _this[behaviorHandler];\n      }\n      if (!behaviorHandler) {\n        return;\n      }\n      key = getUniqueEventName(key);\n      events[key] = _.bind(behaviorHandler, _this);\n      return events;\n    }, {});\n  },\n\n\n  // Internal method to build all trigger handlers for a given behavior\n  getTriggers: function getTriggers() {\n    if (!this.triggers) {\n      return;\n    }\n\n    // Normalize behavior triggers hash to allow\n    // a user to use the @ui. syntax.\n    var behaviorTriggers = this.normalizeUIKeys(_.result(this, 'triggers'));\n\n    return this._getViewTriggers(this.view, behaviorTriggers);\n  }\n});\n\n_.extend(Behavior.prototype, DelegateEntityEventsMixin, TriggersMixin, UIMixin);\n\n// Application\n// -----------\nvar ClassOptions$7 = ['region', 'regionClass'];\n\n// A container for a Marionette application.\nvar Application = MarionetteObject.extend({\n  cidPrefix: 'mna',\n\n  constructor: function constructor(options) {\n    this._setOptions(options);\n\n    this.mergeOptions(options, ClassOptions$7);\n\n    this._initRegion();\n\n    MarionetteObject.prototype.constructor.apply(this, arguments);\n  },\n\n\n  regionClass: Region,\n\n  _initRegion: function _initRegion() {\n    var region = this.region;\n\n    if (!region) {\n      return;\n    }\n\n    var defaults = {\n      regionClass: this.regionClass\n    };\n\n    this._region = buildRegion(region, defaults);\n  },\n  getRegion: function getRegion() {\n    return this._region;\n  },\n  showView: function showView(view) {\n    var region = this.getRegion();\n\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return region.show.apply(region, [view].concat(args));\n  },\n  getView: function getView() {\n    return this.getRegion().currentView;\n  },\n\n\n  // kick off all of the application's processes.\n  start: function start(options) {\n    this.triggerMethod('before:start', this, options);\n    this.triggerMethod('start', this, options);\n    return this;\n  }\n});\n\n// App Router\n// ----------\n\n// Reduce the boilerplate code of handling route events\n// and then calling a single method on another object,\n// called a controller.\n// Have your routers configured to call the method on\n// your controller, directly.\n//\n// Configure an AppRouter with `appRoutes`.\n//\n// App routers can only take one `controller` object.\n// It is recommended that you divide your controller\n// objects in to smaller pieces of related functionality\n// and have multiple routers / controllers, instead of\n// just one giant router and controller.\n//\n// You can also add standard routes to an AppRouter.\n\nvar ClassOptions$8 = ['appRoutes', 'controller'];\n\nvar AppRouter = Backbone.Router.extend({\n  constructor: function constructor(options) {\n    this._setOptions(options);\n\n    this.mergeOptions(options, ClassOptions$8);\n\n    Backbone.Router.apply(this, arguments);\n\n    var appRoutes = this.appRoutes;\n    var controller = this._getController();\n    this.processAppRoutes(controller, appRoutes);\n    this.on('route', this._processOnRoute, this);\n  },\n\n\n  // Similar to route method on a Backbone Router but\n  // method is called on the controller\n  appRoute: function appRoute(route, methodName) {\n    var controller = this._getController();\n    this._addAppRoute(controller, route, methodName);\n    return this;\n  },\n\n\n  // process the route event and trigger the onRoute\n  // method call, if it exists\n  _processOnRoute: function _processOnRoute(routeName, routeArgs) {\n    // make sure an onRoute before trying to call it\n    if (_.isFunction(this.onRoute)) {\n      // find the path that matches the current route\n      var routePath = _.invert(this.appRoutes)[routeName];\n      this.onRoute(routeName, routePath, routeArgs);\n    }\n  },\n\n\n  // Internal method to process the `appRoutes` for the\n  // router, and turn them in to routes that trigger the\n  // specified method on the specified `controller`.\n  processAppRoutes: function processAppRoutes(controller, appRoutes) {\n    var _this = this;\n\n    if (!appRoutes) {\n      return this;\n    }\n\n    var routeNames = _.keys(appRoutes).reverse(); // Backbone requires reverted order of routes\n\n    _.each(routeNames, function (route) {\n      _this._addAppRoute(controller, route, appRoutes[route]);\n    });\n\n    return this;\n  },\n  _getController: function _getController() {\n    return this.controller;\n  },\n  _addAppRoute: function _addAppRoute(controller, route, methodName) {\n    var method = controller[methodName];\n\n    if (!method) {\n      throw new MarionetteError('Method \"' + methodName + '\" was not found on the controller');\n    }\n\n    this.route(route, methodName, _.bind(method, controller));\n  },\n\n\n  triggerMethod: triggerMethod\n});\n\n_.extend(AppRouter.prototype, CommonMixin);\n\n// Placeholder method to be extended by the user.\n// The method should define the object that stores the behaviors.\n// i.e.\n//\n// ```js\n// Marionette.Behaviors.behaviorsLookup: function() {\n//   return App.Behaviors\n// }\n// ```\nfunction behaviorsLookup() {\n  throw new MarionetteError({\n    message: 'You must define where your behaviors are stored.',\n    url: 'marionette.behaviors.md#behaviorslookup'\n  });\n}\n\nvar previousMarionette = Backbone.Marionette;\nvar Marionette = Backbone.Marionette = {};\n\n// This allows you to run multiple instances of Marionette on the same\n// webapp. After loading the new version, call `noConflict()` to\n// get a reference to it. At the same time the old version will be\n// returned to Backbone.Marionette.\nMarionette.noConflict = function () {\n  Backbone.Marionette = previousMarionette;\n  return this;\n};\n\n// Utilities\nMarionette.bindEvents = proxy(bindEvents);\nMarionette.unbindEvents = proxy(unbindEvents);\nMarionette.bindRequests = proxy(bindRequests);\nMarionette.unbindRequests = proxy(unbindRequests);\nMarionette.mergeOptions = proxy(mergeOptions);\nMarionette.getOption = proxy(getOption);\nMarionette.normalizeMethods = proxy(normalizeMethods);\nMarionette.extend = extend;\nMarionette.isNodeAttached = isNodeAttached;\nMarionette.deprecate = deprecate;\nMarionette.triggerMethod = proxy(triggerMethod);\nMarionette.triggerMethodOn = triggerMethodOn;\nMarionette.isEnabled = isEnabled;\nMarionette.setEnabled = setEnabled;\nMarionette.monitorViewEvents = monitorViewEvents;\n\nMarionette.Behaviors = {};\nMarionette.Behaviors.behaviorsLookup = behaviorsLookup;\n\n// Classes\nMarionette.Application = Application;\nMarionette.AppRouter = AppRouter;\nMarionette.Renderer = Renderer;\nMarionette.TemplateCache = TemplateCache;\nMarionette.View = View;\nMarionette.CollectionView = CollectionView;\nMarionette.NextCollectionView = CollectionView$2;\nMarionette.CompositeView = CompositeView;\nMarionette.Behavior = Behavior;\nMarionette.Region = Region;\nMarionette.Error = MarionetteError;\nMarionette.Object = MarionetteObject;\n\n// Configuration\nMarionette.DEV_MODE = false;\nMarionette.FEATURES = FEATURES;\nMarionette.VERSION = version;\nMarionette.DomApi = DomApi;\nMarionette.setDomApi = function (mixin) {\n  CollectionView.setDomApi(mixin);\n  CompositeView.setDomApi(mixin);\n  CollectionView$2.setDomApi(mixin);\n  Region.setDomApi(mixin);\n  View.setDomApi(mixin);\n};\n\nreturn Marionette;\n\n})));\nthis && this.Marionette && (this.Mn = this.Marionette);\n//# sourceMappingURL=backbone.marionette.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/backbone.marionette/lib/backbone.marionette.js\n// module id = 1\n// module chunks = 0","//     Backbone.js 1.3.3\n\n//     (c) 2010-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = (typeof self == 'object' && self.self === self && self) ||\n            (typeof global == 'object' && global.global === global && global);\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'), $;\n    try { $ = require('jquery'); } catch (e) {}\n    factory(root, exports, _, $);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n})(function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to a common array method we'll want to use later.\n  var slice = Array.prototype.slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.3.3';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\n  // `attributes` object or collection's `models` array behind the scenes.\n  //\n  // collection.filter(function(model) { return model.get('age') > 10 });\n  // collection.each(this.addView);\n  //\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\n  var addMethod = function(length, method, attribute) {\n    switch (length) {\n      case 1: return function() {\n        return _[method](this[attribute]);\n      };\n      case 2: return function(value) {\n        return _[method](this[attribute], value);\n      };\n      case 3: return function(iteratee, context) {\n        return _[method](this[attribute], cb(iteratee, this), context);\n      };\n      case 4: return function(iteratee, defaultVal, context) {\n        return _[method](this[attribute], cb(iteratee, this), defaultVal, context);\n      };\n      default: return function() {\n        var args = slice.call(arguments);\n        args.unshift(this[attribute]);\n        return _[method].apply(_, args);\n      };\n    }\n  };\n  var addUnderscoreMethods = function(Class, methods, attribute) {\n    _.each(methods, function(length, method) {\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\n    });\n  };\n\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n  var cb = function(iteratee, instance) {\n    if (_.isFunction(iteratee)) return iteratee;\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\n    return iteratee;\n  };\n  var modelMatcher = function(attrs) {\n    var matcher = _.matches(attrs);\n    return function(model) {\n      return matcher(model.attributes);\n    };\n  };\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // a custom event channel. You may bind a callback to an event with `on` or\n  // remove with `off`; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`).\n  var eventsApi = function(iteratee, events, name, callback, opts) {\n    var i = 0, names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n      for (names = _.keys(name); i < names.length ; i++) {\n        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space-separated event names by delegating them individually.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        events = iteratee(events, names[i], callback, opts);\n      }\n    } else {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n    }\n    return events;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function(name, callback, context) {\n    return internalOn(this, name, callback, context);\n  };\n\n  // Guard the `listening` argument from the public API.\n  var internalOn = function(obj, name, callback, context, listening) {\n    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {\n      context: context,\n      ctx: obj,\n      listening: listening\n    });\n\n    if (listening) {\n      var listeners = obj._listeners || (obj._listeners = {});\n      listeners[listening.id] = listening;\n    }\n\n    return obj;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n  Events.listenTo = function(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = listeningTo[id] = {obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0};\n    }\n\n    // Bind callbacks on obj, and keep track of them on listening.\n    internalOn(obj, name, callback, this, listening);\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({callback: callback, context: context, ctx: context || ctx, listening: listening});\n    }\n    return events;\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off = function(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n      context: context,\n      listeners: this._listeners\n    });\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening = function(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n    }\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function(events, name, callback, options) {\n    if (!events) return;\n\n    var i = 0, listening;\n    var context = options.context, listeners = options.listeners;\n\n    // Delete all events listeners and \"drop\" events.\n    if (!name && !callback && !context) {\n      var ids = _.keys(listeners);\n      for (; i < ids.length; i++) {\n        listening = listeners[ids[i]];\n        delete listeners[listening.id];\n        delete listening.listeningTo[listening.objId];\n      }\n      return;\n    }\n\n    var names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (\n          callback && callback !== handler.callback &&\n            callback !== handler.callback._callback ||\n              context && context !== handler.context\n        ) {\n          remaining.push(handler);\n        } else {\n          listening = handler.listening;\n          if (listening && --listening.count === 0) {\n            delete listeners[listening.id];\n            delete listening.listeningTo[listening.objId];\n          }\n        }\n      }\n\n      // Update tail event if the list has any events.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n    return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n  Events.once = function(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));\n    if (typeof name === 'string' && context == null) callback = void 0;\n    return this.on(events, callback, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce = function(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n  var onceMap = function(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function() {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger = function(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function(objEvents, name, callback, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    var defaults = _.result(this, 'defaults');\n    attrs = _.defaults(_.extend({}, defaults, attrs), defaults);\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      var unset      = options.unset;\n      var silent     = options.silent;\n      var changes    = [];\n      var changing   = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev    = this._previousAttributes;\n\n      // For each `set` attribute, update or delete the current value.\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Update the `id`.\n      if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n      }\n      return _.size(changed) ? changed : false;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true, parse: true}, options);\n      var wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else if (!this._validate(attrs, options)) {\n        return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.extend({}, options, {validate: true}));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model, mapped to the\n  // number of arguments they take.\n  var modelMethods = {keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n      omit: 0, chain: 1, isEmpty: 1};\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  addUnderscoreMethods(Model, modelMethods, 'attributes');\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Splices `insert` into `array` at index `at`.\n  var splice = function(array, insert, at) {\n    at = Math.min(Math.max(at, 0), array.length);\n    var tail = Array(array.length - at);\n    var length = insert.length;\n    var i;\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n  };\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model) { return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set. `models` may be Backbone\n    // Models or raw JavaScript objects to be converted to Models, or any\n    // combination of the two.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n      var removed = this._removeModels(models, options);\n      if (!options.silent && removed.length) {\n        options.changes = {added: [], merged: [], removed: removed};\n        this.trigger('update', this, options);\n      }\n      return singular ? removed[0] : removed;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      if (models == null) return;\n\n      options = _.extend({}, setOptions, options);\n      if (options.parse && !this._isModel(models)) {\n        models = this.parse(models, options) || [];\n      }\n\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at > this.length) at = this.length;\n      if (at < 0) at += this.length + 1;\n\n      var set = [];\n      var toAdd = [];\n      var toMerge = [];\n      var toRemove = [];\n      var modelMap = {};\n\n      var add = options.add;\n      var merge = options.merge;\n      var remove = options.remove;\n\n      var sort = false;\n      var sortable = this.comparator && at == null && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      var model, i;\n      for (i = 0; i < models.length; i++) {\n        model = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        var existing = this.get(model);\n        if (existing) {\n          if (merge && model !== existing) {\n            var attrs = this._isModel(model) ? model.attributes : model;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            toMerge.push(existing);\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n          }\n          if (!modelMap[existing.cid]) {\n            modelMap[existing.cid] = true;\n            set.push(existing);\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(model, options);\n          if (model) {\n            toAdd.push(model);\n            this._addReference(model, options);\n            modelMap[model.cid] = true;\n            set.push(model);\n          }\n        }\n      }\n\n      // Remove stale models.\n      if (remove) {\n        for (i = 0; i < this.length; i++) {\n          model = this.models[i];\n          if (!modelMap[model.cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      var orderChanged = false;\n      var replace = !sortable && add && remove;\n      if (set.length && replace) {\n        orderChanged = this.length !== set.length || _.some(this.models, function(m, index) {\n          return m !== set[index];\n        });\n        this.models.length = 0;\n        splice(this.models, set, 0);\n        this.length = this.models.length;\n      } else if (toAdd.length) {\n        if (sortable) sort = true;\n        splice(this.models, toAdd, at == null ? this.length : at);\n        this.length = this.models.length;\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\n      if (!options.silent) {\n        for (i = 0; i < toAdd.length; i++) {\n          if (at != null) options.index = at + i;\n          model = toAdd[i];\n          model.trigger('add', model, this, options);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length || toMerge.length) {\n          options.changes = {\n            added: toAdd,\n            removed: toRemove,\n            merged: toMerge\n          };\n          this.trigger('update', this, options);\n        }\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id, cid, model object with id or cid\n    // properties, or an attributes object that is transformed through modelId.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      return this._byId[obj] ||\n        this._byId[this.modelId(obj.attributes || obj)] ||\n        obj.cid && this._byId[obj.cid];\n    },\n\n    // Returns `true` if the model is in the collection.\n    has: function(obj) {\n      return this.get(obj) != null;\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      return this[first ? 'find' : 'filter'](attrs);\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      var comparator = this.comparator;\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      var length = comparator.length;\n      if (_.isFunction(comparator)) comparator = _.bind(comparator, this);\n\n      // Run sort based on type of `comparator`.\n      if (length === 1 || _.isString(comparator)) {\n        this.models = this.sortBy(comparator);\n      } else {\n        this.models.sort(comparator);\n      }\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return this.map(attr + '');\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(m, resp, callbackOpts) {\n        if (wait) collection.add(m, callbackOpts);\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function(attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set.\n    _removeModels: function(models, options) {\n      var removed = [];\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        // Remove references before triggering 'remove' event to prevent an\n        // infinite loop. #3693\n        delete this._byId[model.cid];\n        var id = this.modelId(model.attributes);\n        if (id != null) delete this._byId[id];\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n        this._removeReference(model, options);\n      }\n      return removed;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function(model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if (model) {\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\n        if (event === 'destroy') this.remove(model, options);\n        if (event === 'change') {\n          var prevId = this.modelId(model.previousAttributes());\n          var id = this.modelId(model.attributes);\n          if (prevId !== id) {\n            if (prevId != null) delete this._byId[prevId];\n            if (id != null) this._byId[id] = model;\n          }\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = {forEach: 3, each: 3, map: 3, collect: 3, reduce: 0,\n      foldl: 0, inject: 0, reduceRight: 0, foldr: 0, find: 3, detect: 3, filter: 3,\n      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\n      contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n      isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\n      sortBy: 3, indexBy: 3, findIndex: 3, findLastIndex: 3};\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  addUnderscoreMethods(Collection, collectionMethods, 'models');\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be set as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function(events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], _.bind(method, this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function(xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch': 'PATCH',\n    'delete': 'DELETE',\n    'read': 'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(optionalParam, '(?:$1)?')\n                   .replace(namedParam, function(match, optional) {\n                     return optional ? match : '([^/?]+)';\n                   })\n                   .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    this.checkUrl = _.bind(this.checkUrl, this);\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function() {\n      var path = this.decodeFragment(this.location.pathname);\n      var rootPath = path.slice(0, this.root.length - 1) + '/';\n      return rootPath === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function() {\n      var path = this.decodeFragment(\n        this.location.pathname + this.getSearch()\n      ).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.history && this.history.pushState);\n      this._usePushState    = this._wantsPushState && this._hasPushState;\n      this.fragment         = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var rootPath = this.root.slice(0, -1) || '/';\n          this.location.replace(rootPath + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {replace: true});\n        }\n\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function(eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function(eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.some(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var rootPath = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        rootPath = rootPath.slice(0, -1) || '/';\n      }\n      var url = rootPath + fragment;\n\n      // Strip the hash and decode for matching.\n      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\n          var iWindow = this.iframe.contentWindow;\n\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function and add the prototype properties.\n    child.prototype = _.create(parent.prototype, protoProps);\n    child.prototype.constructor = child;\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/backbone/backbone.js\n// module id = 2\n// module chunks = 0","module.exports = {\r\n\tDOM_VK_RETURN: 13,\r\n\tDOM_VK_J: 74,\r\n    DOM_VK_K: 75,\r\n\tuse_io: true,\r\n\tmax_views: 4,\r\n\tmax_groups: 99\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/present.js\n// module id = 3\n// module chunks = 0","/*!\n * jQuery JavaScript Library v2.2.4\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-05-20T17:23Z\n */\n\n(function( global, factory ) {\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Support: Firefox 18+\n// Can't be in strict mode, several libs including ASP.NET trace\n// the stack via arguments.caller.callee and Firefox dies if\n// you try to trace through \"use strict\" call chains. (#13335)\n//\"use strict\";\nvar arr = [];\n\nvar document = window.document;\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar support = {};\n\n\n\nvar\n\tversion = \"2.2.4\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android<4.1\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n\t// Matches dashed string for camelizing\n\trmsPrefix = /^-ms-/,\n\trdashAlpha = /-([\\da-z])/gi,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn letter.toUpperCase();\n\t};\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// Start with an empty selector\n\tselector: \"\",\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\t\treturn num != null ?\n\n\t\t\t// Return just the one element from the set\n\t\t\t( num < 0 ? this[ num + this.length ] : this[ num ] ) :\n\n\t\t\t// Return all the elements in a clean array\n\t\t\tslice.call( this );\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\t\tret.context = this.context;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = jQuery.isArray( copy ) ) ) ) {\n\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && jQuery.isArray( src ) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type( obj ) === \"function\";\n\t},\n\n\tisArray: Array.isArray,\n\n\tisWindow: function( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t},\n\n\tisNumeric: function( obj ) {\n\n\t\t// parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t// adding 1 corrects loss of precision from parseFloat (#15100)\n\t\tvar realStringObj = obj && obj.toString();\n\t\treturn !jQuery.isArray( obj ) && ( realStringObj - parseFloat( realStringObj ) + 1 ) >= 0;\n\t},\n\n\tisPlainObject: function( obj ) {\n\t\tvar key;\n\n\t\t// Not plain objects:\n\t\t// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n\t\t// - DOM nodes\n\t\t// - window\n\t\tif ( jQuery.type( obj ) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Not own constructor property must be Object\n\t\tif ( obj.constructor &&\n\t\t\t\t!hasOwn.call( obj, \"constructor\" ) &&\n\t\t\t\t!hasOwn.call( obj.constructor.prototype || {}, \"isPrototypeOf\" ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Own properties are enumerated firstly, so to speed up,\n\t\t// if last one is own, then all properties are own\n\t\tfor ( key in obj ) {}\n\n\t\treturn key === undefined || hasOwn.call( obj, key );\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\ttype: function( obj ) {\n\t\tif ( obj == null ) {\n\t\t\treturn obj + \"\";\n\t\t}\n\n\t\t// Support: Android<4.0, iOS<6 (functionish RegExp)\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\t\ttypeof obj;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tvar script,\n\t\t\tindirect = eval;\n\n\t\tcode = jQuery.trim( code );\n\n\t\tif ( code ) {\n\n\t\t\t// If the code includes a valid, prologue position\n\t\t\t// strict mode pragma, execute code by injecting a\n\t\t\t// script tag into the document.\n\t\t\tif ( code.indexOf( \"use strict\" ) === 1 ) {\n\t\t\t\tscript = document.createElement( \"script\" );\n\t\t\t\tscript.text = code;\n\t\t\t\tdocument.head.appendChild( script ).parentNode.removeChild( script );\n\t\t\t} else {\n\n\t\t\t\t// Otherwise, avoid the DOM node creation, insertion\n\t\t\t\t// and removal by using an indirect global eval\n\n\t\t\t\tindirect( code );\n\t\t\t}\n\t\t}\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Support: IE9-11+\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\tnodeName: function( elem, name ) {\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android<4.1\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tvar tmp, args, proxy;\n\n\t\tif ( typeof context === \"string\" ) {\n\t\t\ttmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\targs = slice.call( arguments, 2 );\n\t\tproxy = function() {\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\tnow: Date.now,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\n// JSHint would error on this code due to the Symbol not being defined in ES5.\n// Defining this global in .jshintrc would create a danger of using the global\n// unguarded in another place, it seems safer to just disable JSHint for these\n// three lines.\n/* jshint ignore: start */\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n/* jshint ignore: end */\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: iOS 8.2 (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = jQuery.type( obj );\n\n\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.2.1\n * http://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2015-10-17\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// General-purpose constants\n\tMAX_NEGATIVE = 1 << 31,\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// http://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\trescape = /'|\\\\/g,\n\n\t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t};\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, nidselect, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( (m = match[1]) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\n\t\t\t\tif ( nodeType !== 1 ) {\n\t\t\t\t\tnewContext = context;\n\t\t\t\t\tnewSelector = selector;\n\n\t\t\t\t// qSA looks outside Element context, which is not what we want\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\n\t\t\t\t// Support: IE <=8\n\t\t\t\t// Exclude object elements\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\n\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\tnid = nid.replace( rescape, \"\\\\$&\" );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\tnidselect = ridentifier.test( nid ) ? \"#\" + nid : \"[id='\" + nid + \"']\";\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[i] = nidselect + \" \" + toSelector( groups[i] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\t\t\t\t}\n\n\t\t\t\tif ( newSelector ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created div and expects a boolean result\n */\nfunction assert( fn ) {\n\tvar div = document.createElement(\"div\");\n\n\ttry {\n\t\treturn !!fn( div );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( div.parentNode ) {\n\t\t\tdiv.parentNode.removeChild( div );\n\t\t}\n\t\t// release memory in IE\n\t\tdiv = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\t( ~b.sourceIndex || MAX_NEGATIVE ) -\n\t\t\t( ~a.sourceIndex || MAX_NEGATIVE );\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, parent,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9-11, Edge\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\tif ( (parent = document.defaultView) && parent.top !== parent ) {\n\t\t// Support: IE 11\n\t\tif ( parent.addEventListener ) {\n\t\t\tparent.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( parent.attachEvent ) {\n\t\t\tparent.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( div ) {\n\t\tdiv.className = \"i\";\n\t\treturn !div.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( div ) {\n\t\tdiv.appendChild( document.createComment(\"\") );\n\t\treturn !div.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( div ) {\n\t\tdocElem.appendChild( div ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t});\n\n\t// ID find and filter\n\tif ( support.getById ) {\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar m = context.getElementById( id );\n\t\t\t\treturn m ? [ m ] : [];\n\t\t\t}\n\t\t};\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t} else {\n\t\t// Support: IE6/7\n\t\t// getElementById is not reliable as a find shortcut\n\t\tdelete Expr.find[\"ID\"];\n\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See http://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( div ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// http://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( div ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( div.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !div.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !div.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibing-combinator selector` fails\n\t\t\tif ( !div.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( div ) {\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tdiv.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( div.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":enabled\").length ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tdiv.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( div ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( div, \"div\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( div, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === document ? -1 :\n\t\t\t\tb === document ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!compilerCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": function( elem ) {\n\t\t\treturn elem.disabled === false;\n\t\t},\n\n\t\t\"disabled\": function( elem ) {\n\t\t\treturn elem.disabled === true;\n\t\t},\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tcheckNonElements = base && dir === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\n\t\t\t\t\t\tif ( (oldCache = uniqueCache[ dir ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ dir ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tsupport.getById && context.nodeType === 9 && documentIsHTML &&\n\t\t\t\tExpr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( div1 ) {\n\t// Should return 1, but returns 4 (following)\n\treturn div1.compareDocumentPosition( document.createElement(\"div\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( div ) {\n\tdiv.innerHTML = \"<a href='#'></a>\";\n\treturn div.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( div ) {\n\tdiv.innerHTML = \"<input/>\";\n\tdiv.firstChild.setAttribute( \"value\", \"\" );\n\treturn div.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( div ) {\n\treturn div.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\nvar rsingleTag = ( /^<([\\w-]+)\\s*\\/?>(?:<\\/\\1>|)$/ );\n\n\n\nvar risSimple = /^.[^:#\\[\\.,]*$/;\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( jQuery.isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\t/* jshint -W018 */\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\n\t}\n\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\n\t}\n\n\tif ( typeof qualifier === \"string\" ) {\n\t\tif ( risSimple.test( qualifier ) ) {\n\t\t\treturn jQuery.filter( qualifier, elements, not );\n\t\t}\n\n\t\tqualifier = jQuery.filter( qualifier, elements );\n\t}\n\n\treturn jQuery.grep( elements, function( elem ) {\n\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t} );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\treturn elems.length === 1 && elem.nodeType === 1 ?\n\t\tjQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\n\t\tjQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\t\treturn elem.nodeType === 1;\n\t\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i,\n\t\t\tlen = this.length,\n\t\t\tret = [],\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\n\t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\n\t\tret.selector = this.selector ? this.selector + \" \" + selector : selector;\n\t\treturn ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\t// Support: Blackberry 4.6\n\t\t\t\t\t// gEBID returns nodes no longer in the document (#6963)\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.context = document;\n\t\t\t\t\tthis.selector = selector;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis.context = this[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\tif ( selector.selector !== undefined ) {\n\t\t\tthis.selector = selector.selector;\n\t\t\tthis.context = selector.context;\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\tpos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?\n\t\t\t\tjQuery( selectors, context || this.context ) :\n\t\t\t\t0;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t// Always skip document fragments\n\t\t\t\tif ( cur.nodeType < 11 && ( pos ?\n\t\t\t\t\tpos.index( cur ) > -1 :\n\n\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnotwhite = ( /\\S+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( jQuery.isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && jQuery.type( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, listener list, final state\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ), \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ), \"rejected\" ],\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ) ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\n\n\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis === promise ? newDefer.promise() : this,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Keep pipe for back-compat\n\t\tpromise.pipe = promise.then;\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 3 ];\n\n\t\t\t// promise[ done | fail | progress ] = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add( function() {\n\n\t\t\t\t\t// state = [ resolved | rejected ]\n\t\t\t\t\tstate = stateString;\n\n\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\n\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\n\t\t\t}\n\n\t\t\t// deferred[ resolve | reject | notify ]\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? promise : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( subordinate /* , ..., subordinateN */ ) {\n\t\tvar i = 0,\n\t\t\tresolveValues = slice.call( arguments ),\n\t\t\tlength = resolveValues.length,\n\n\t\t\t// the count of uncompleted subordinates\n\t\t\tremaining = length !== 1 ||\n\t\t\t\t( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\n\n\t\t\t// the master Deferred.\n\t\t\t// If resolveValues consist of only a single Deferred, just use that.\n\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n\n\t\t\t// Update function for both resolve and progress values\n\t\t\tupdateFunc = function( i, contexts, values ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tcontexts[ i ] = this;\n\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( values === progressValues ) {\n\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\n\t\t\t\t\t} else if ( !( --remaining ) ) {\n\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tprogressValues, progressContexts, resolveContexts;\n\n\t\t// Add listeners to Deferred subordinates; treat others as resolved\n\t\tif ( length > 1 ) {\n\t\t\tprogressValues = new Array( length );\n\t\t\tprogressContexts = new Array( length );\n\t\t\tresolveContexts = new Array( length );\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\n\t\t\t\t\tresolveValues[ i ].promise()\n\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) )\n\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\n\t\t\t\t\t\t.fail( deferred.reject );\n\t\t\t\t} else {\n\t\t\t\t\t--remaining;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If we're not waiting on anything, resolve the master\n\t\tif ( !remaining ) {\n\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\n\t\t}\n\n\t\treturn deferred.promise();\n\t}\n} );\n\n\n// The deferred used on DOM ready\nvar readyList;\n\njQuery.fn.ready = function( fn ) {\n\n\t// Add the callback\n\tjQuery.ready.promise().done( fn );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\n\t\t// Trigger any bound ready events\n\t\tif ( jQuery.fn.triggerHandler ) {\n\t\t\tjQuery( document ).triggerHandler( \"ready\" );\n\t\t\tjQuery( document ).off( \"ready\" );\n\t\t}\n\t}\n} );\n\n/**\n * The ready event handler and self cleanup method\n */\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\njQuery.ready.promise = function( obj ) {\n\tif ( !readyList ) {\n\n\t\treadyList = jQuery.Deferred();\n\n\t\t// Catch cases where $(document).ready() is called\n\t\t// after the browser event has already occurred.\n\t\t// Support: IE9-10 only\n\t\t// Older IE sometimes signals \"interactive\" too soon\n\t\tif ( document.readyState === \"complete\" ||\n\t\t\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\twindow.setTimeout( jQuery.ready );\n\n\t\t} else {\n\n\t\t\t// Use the handy event callback\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.addEventListener( \"load\", completed );\n\t\t}\n\t}\n\treturn readyList.promise( obj );\n};\n\n// Kick off the DOM ready check even if the user does not\njQuery.ready.promise();\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( jQuery.type( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn chainable ?\n\t\telems :\n\n\t\t// Gets\n\t\tbulk ?\n\t\t\tfn.call( elems ) :\n\t\t\tlen ? fn( elems[ 0 ], key ) : emptyGet;\n};\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\t/* jshint -W018 */\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tregister: function( owner, initial ) {\n\t\tvar value = initial || {};\n\n\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t// use plain assignment\n\t\tif ( owner.nodeType ) {\n\t\t\towner[ this.expando ] = value;\n\n\t\t// Otherwise secure it in a non-enumerable, non-writable property\n\t\t// configurability must be true to allow the property to be\n\t\t// deleted with the delete operator\n\t\t} else {\n\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\tvalue: value,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: true\n\t\t\t} );\n\t\t}\n\t\treturn owner[ this.expando ];\n\t},\n\tcache: function( owner ) {\n\n\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t// but we should not, see #8335.\n\t\t// Always return an empty object.\n\t\tif ( !acceptData( owner ) ) {\n\t\t\treturn {};\n\t\t}\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ data ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ prop ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\t\t\towner[ this.expando ] && owner[ this.expando ][ key ];\n\t},\n\taccess: function( owner, key, value ) {\n\t\tvar stored;\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\tstored = this.get( owner, key );\n\n\t\t\treturn stored !== undefined ?\n\t\t\t\tstored : this.get( owner, jQuery.camelCase( key ) );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i, name, camel,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key === undefined ) {\n\t\t\tthis.register( owner );\n\n\t\t} else {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( jQuery.isArray( key ) ) {\n\n\t\t\t\t// If \"name\" is an array of keys...\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\n\t\t\t\t// keys will be converted to camelCase.\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\n\t\t\t\t// both plain key and camelCase key. #12786\n\t\t\t\t// This will only penalize the array argument path.\n\t\t\t\tname = key.concat( key.map( jQuery.camelCase ) );\n\t\t\t} else {\n\t\t\t\tcamel = jQuery.camelCase( key );\n\n\t\t\t\t// Try the string as a key before any manipulation\n\t\t\t\tif ( key in cache ) {\n\t\t\t\t\tname = [ key, camel ];\n\t\t\t\t} else {\n\n\t\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\t\tname = camel;\n\t\t\t\t\tname = name in cache ?\n\t\t\t\t\t\t[ name ] : ( name.match( rnotwhite ) || [] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = name.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ name[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <= 35-45+\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://code.google.com/p/chromium/issues/detail?id=378607\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = data === \"true\" ? true :\n\t\t\t\t\tdata === \"false\" ? false :\n\t\t\t\t\tdata === \"null\" ? null :\n\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\n\t\t\t\t\t+data + \"\" === data ? +data :\n\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\n\t\t\t\t\tdata;\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE11+\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data, camelKey;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key as-is\n\t\t\t\tdata = dataUser.get( elem, key ) ||\n\n\t\t\t\t\t// Try to find dashed key if it exists (gh-2779)\n\t\t\t\t\t// This is for 2.2.x only\n\t\t\t\t\tdataUser.get( elem, key.replace( rmultiDash, \"-$&\" ).toLowerCase() );\n\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\tcamelKey = jQuery.camelCase( key );\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key camelized\n\t\t\t\tdata = dataUser.get( elem, camelKey );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, camelKey, undefined );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tcamelKey = jQuery.camelCase( key );\n\t\t\tthis.each( function() {\n\n\t\t\t\t// First, attempt to store a copy or reference of any\n\t\t\t\t// data that might've been store with a camelCased key.\n\t\t\t\tvar data = dataUser.get( this, camelKey );\n\n\t\t\t\t// For HTML5 data-* attribute interop, we have to\n\t\t\t\t// store property names with dashes in a camelCase form.\n\t\t\t\t// This might not apply to all properties...*\n\t\t\t\tdataUser.set( this, camelKey, value );\n\n\t\t\t\t// *... In the case of properties that might _actually_\n\t\t\t\t// have dashes, we need to also store a copy of that\n\t\t\t\t// unchanged property.\n\t\t\t\tif ( key.indexOf( \"-\" ) > -1 && data !== undefined ) {\n\t\t\t\t\tdataUser.set( this, key, value );\n\t\t\t\t}\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHidden = function( elem, el ) {\n\n\t\t// isHidden might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\t\treturn jQuery.css( elem, \"display\" ) === \"none\" ||\n\t\t\t!jQuery.contains( elem.ownerDocument, elem );\n\t};\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted,\n\t\tscale = 1,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() { return tween.cur(); } :\n\t\t\tfunction() { return jQuery.css( elem, prop, \"\" ); },\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\tdo {\n\n\t\t\t// If previous iteration zeroed out, double until we get *something*.\n\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\n\t\t\tscale = scale || \".5\";\n\n\t\t\t// Adjust and apply\n\t\t\tinitialInUnit = initialInUnit / scale;\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Update scale, tolerating zero or NaN from tween.cur()\n\t\t// Break the loop if scale is unchanged or perfect, or if we've just had enough.\n\t\t} while (\n\t\t\tscale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations\n\t\t);\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([\\w:-]+)/ );\n\nvar rscriptType = ( /^$|\\/(?:java|ecma)script/i );\n\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// Support: IE9\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\n// Support: IE9\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE9-11+\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret = typeof context.getElementsByTagName !== \"undefined\" ?\n\t\t\tcontext.getElementsByTagName( tag || \"*\" ) :\n\t\t\ttypeof context.querySelectorAll !== \"undefined\" ?\n\t\t\t\tcontext.querySelectorAll( tag || \"*\" ) :\n\t\t\t[];\n\n\treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\n\t\tjQuery.merge( [ context ], ret ) :\n\t\tret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, contains, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( contains ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0-4.3, Safari<=5.1\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Safari<=5.1, Android<4.2\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE<=11+\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n} )();\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE9\n// See #13393 for more info\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( event ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tevent = jQuery.event.fix( event );\n\n\t\tvar i, j, ret, matched, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\targs = slice.call( arguments ),\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, matches, sel, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Support (at least): Chrome, IE9\n\t\t// Find delegate handlers\n\t\t// Black-hole SVG <use> instance trees (#13180)\n\t\t//\n\t\t// Support: Firefox<=42+\n\t\t// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)\n\t\tif ( delegateCount && cur.nodeType &&\n\t\t\t( event.type !== \"click\" || isNaN( event.button ) || event.button < 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && ( cur.disabled !== true || event.type !== \"click\" ) ) {\n\t\t\t\t\tmatches = [];\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matches[ sel ] ) {\n\t\t\t\t\t\t\tmatches.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matches.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matches } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: this, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\t// Includes some event props shared by KeyEvent and MouseEvent\n\tprops: ( \"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase \" +\n\t\t\"metaKey relatedTarget shiftKey target timeStamp view which\" ).split( \" \" ),\n\n\tfixHooks: {},\n\n\tkeyHooks: {\n\t\tprops: \"char charCode key keyCode\".split( \" \" ),\n\t\tfilter: function( event, original ) {\n\n\t\t\t// Add which for key events\n\t\t\tif ( event.which == null ) {\n\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tmouseHooks: {\n\t\tprops: ( \"button buttons clientX clientY offsetX offsetY pageX pageY \" +\n\t\t\t\"screenX screenY toElement\" ).split( \" \" ),\n\t\tfilter: function( event, original ) {\n\t\t\tvar eventDoc, doc, body,\n\t\t\t\tbutton = original.button;\n\n\t\t\t// Calculate pageX/Y if missing and clientX/Y available\n\t\t\tif ( event.pageX == null && original.clientX != null ) {\n\t\t\t\teventDoc = event.target.ownerDocument || document;\n\t\t\t\tdoc = eventDoc.documentElement;\n\t\t\t\tbody = eventDoc.body;\n\n\t\t\t\tevent.pageX = original.clientX +\n\t\t\t\t\t( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) -\n\t\t\t\t\t( doc && doc.clientLeft || body && body.clientLeft || 0 );\n\t\t\t\tevent.pageY = original.clientY +\n\t\t\t\t\t( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) -\n\t\t\t\t\t( doc && doc.clientTop  || body && body.clientTop  || 0 );\n\t\t\t}\n\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\t\t// Note: button is not normalized, so don't use it\n\t\t\tif ( !event.which && button !== undefined ) {\n\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tfix: function( event ) {\n\t\tif ( event[ jQuery.expando ] ) {\n\t\t\treturn event;\n\t\t}\n\n\t\t// Create a writable copy of the event object and normalize some properties\n\t\tvar i, prop, copy,\n\t\t\ttype = event.type,\n\t\t\toriginalEvent = event,\n\t\t\tfixHook = this.fixHooks[ type ];\n\n\t\tif ( !fixHook ) {\n\t\t\tthis.fixHooks[ type ] = fixHook =\n\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\n\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\n\t\t\t\t{};\n\t\t}\n\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\n\n\t\tevent = new jQuery.Event( originalEvent );\n\n\t\ti = copy.length;\n\t\twhile ( i-- ) {\n\t\t\tprop = copy[ i ];\n\t\t\tevent[ prop ] = originalEvent[ prop ];\n\t\t}\n\n\t\t// Support: Cordova 2.5 (WebKit) (#13255)\n\t\t// All events should have a target; Cordova deviceready doesn't\n\t\tif ( !event.target ) {\n\t\t\tevent.target = document;\n\t\t}\n\n\t\t// Support: Safari 6.0+, Chrome<28\n\t\t// Target should not be a text node (#504, #13143)\n\t\tif ( event.target.nodeType === 3 ) {\n\t\t\tevent.target = event.target.parentNode;\n\t\t}\n\n\t\treturn fixHook.filter ? fixHook.filter( event, originalEvent ) : event;\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android<4.0\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://code.google.com/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:-]+)[^>]*)\\/>/gi,\n\n\t// Support: IE 10-11, Edge 10240+\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptTypeMasked = /^true\\/(.*)/,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Manipulating tables requires a tbody\nfunction manipulationTarget( elem, content ) {\n\treturn jQuery.nodeName( elem, \"table\" ) &&\n\t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ?\n\n\t\telem.getElementsByTagName( \"tbody\" )[ 0 ] ||\n\t\t\telem.appendChild( elem.ownerDocument.createElement( \"tbody\" ) ) :\n\t\telem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tvar match = rscriptTypeMasked.exec( elem.type );\n\n\tif ( match ) {\n\t\telem.type = match[ 1 ];\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.access( src );\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = concat.apply( [], args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tisFunction = jQuery.isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( isFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( isFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tjQuery.globalEval( node.textContent.replace( rcleanScript, \"\" ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <= 35-45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <= 35-45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\n\t// Keep domManip exposed until 3.0 (gh-2225)\n\tdomManip: domManip,\n\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: QtWebKit\n\t\t\t// .get() because push.apply(_, arraylike) throws\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\n\n\nvar iframe,\n\telemdisplay = {\n\n\t\t// Support: Firefox\n\t\t// We have to pre-define these values for FF (#10227)\n\t\tHTML: \"block\",\n\t\tBODY: \"block\"\n\t};\n\n/**\n * Retrieve the actual display of a element\n * @param {String} name nodeName of the element\n * @param {Object} doc Document object\n */\n\n// Called only from within defaultDisplay\nfunction actualDisplay( name, doc ) {\n\tvar elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\n\n\t\tdisplay = jQuery.css( elem[ 0 ], \"display\" );\n\n\t// We don't have any data stored on the element,\n\t// so use \"detach\" method as fast way to get rid of the element\n\telem.detach();\n\n\treturn display;\n}\n\n/**\n * Try to determine the default display value of an element\n * @param {String} nodeName\n */\nfunction defaultDisplay( nodeName ) {\n\tvar doc = document,\n\t\tdisplay = elemdisplay[ nodeName ];\n\n\tif ( !display ) {\n\t\tdisplay = actualDisplay( nodeName, doc );\n\n\t\t// If the simple way fails, read from inside an iframe\n\t\tif ( display === \"none\" || !display ) {\n\n\t\t\t// Use the already-created iframe if possible\n\t\t\tiframe = ( iframe || jQuery( \"<iframe frameborder='0' width='0' height='0'/>\" ) )\n\t\t\t\t.appendTo( doc.documentElement );\n\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n\t\t\tdoc = iframe[ 0 ].contentDocument;\n\n\t\t\t// Support: IE\n\t\t\tdoc.write();\n\t\t\tdoc.close();\n\n\t\t\tdisplay = actualDisplay( nodeName, doc );\n\t\t\tiframe.detach();\n\t\t}\n\n\t\t// Store the correct default display\n\t\telemdisplay[ nodeName ] = display;\n\t}\n\n\treturn display;\n}\nvar rmargin = ( /^margin/ );\n\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE<=11+, Firefox<=30+ (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar documentElement = document.documentElement;\n\n\n\n( function() {\n\tvar pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE9-11+\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tcontainer.style.cssText = \"border:0;width:8px;height:0;top:0;left:-9999px;\" +\n\t\t\"padding:0;margin-top:1px;position:absolute\";\n\tcontainer.appendChild( div );\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\t\tdiv.style.cssText =\n\n\t\t\t// Support: Firefox<29, Android 2.3\n\t\t\t// Vendor-prefix box-sizing\n\t\t\t\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;\" +\n\t\t\t\"position:relative;display:block;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"top:1%;width:50%\";\n\t\tdiv.innerHTML = \"\";\n\t\tdocumentElement.appendChild( container );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\t\treliableMarginLeftVal = divStyle.marginLeft === \"2px\";\n\t\tboxSizingReliableVal = divStyle.width === \"4px\";\n\n\t\t// Support: Android 4.0 - 4.3 only\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.marginRight = \"50%\";\n\t\tpixelMarginRightVal = divStyle.marginRight === \"4px\";\n\n\t\tdocumentElement.removeChild( container );\n\t}\n\n\tjQuery.extend( support, {\n\t\tpixelPosition: function() {\n\n\t\t\t// This test is executed only once but we still do memoizing\n\t\t\t// since we can use the boxSizingReliable pre-computing.\n\t\t\t// No need to check if the test was already performed, though.\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\tboxSizingReliable: function() {\n\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelMarginRight: function() {\n\n\t\t\t// Support: Android 4.0-4.3\n\t\t\t// We're checking for boxSizingReliableVal here instead of pixelMarginRightVal\n\t\t\t// since that compresses better and they're computed together anyway.\n\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn pixelMarginRightVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\n\t\t\t// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37\n\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\treliableMarginRight: function() {\n\n\t\t\t// Support: Android 2.3\n\t\t\t// Check if div with explicit width and no margin-right incorrectly\n\t\t\t// gets computed margin-right based on width of container. (#3333)\n\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\t// This support function is only executed once so no memoizing is needed.\n\t\t\tvar ret,\n\t\t\t\tmarginDiv = div.appendChild( document.createElement( \"div\" ) );\n\n\t\t\t// Reset CSS: box-sizing; display; margin; border; padding\n\t\t\tmarginDiv.style.cssText = div.style.cssText =\n\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Vendor-prefix box-sizing\n\t\t\t\t\"-webkit-box-sizing:content-box;box-sizing:content-box;\" +\n\t\t\t\t\"display:block;margin:0;border:0;padding:0\";\n\t\t\tmarginDiv.style.marginRight = marginDiv.style.width = \"0\";\n\t\t\tdiv.style.width = \"1px\";\n\t\t\tdocumentElement.appendChild( container );\n\n\t\t\tret = !parseFloat( window.getComputedStyle( marginDiv ).marginRight );\n\n\t\t\tdocumentElement.removeChild( container );\n\t\t\tdiv.removeChild( marginDiv );\n\n\t\t\treturn ret;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\tret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;\n\n\t// Support: Opera 12.1x only\n\t// Fall back to style even without computed\n\t// computed is undefined for elems on document fragments\n\tif ( ( ret === \"\" || ret === undefined ) && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\tret = jQuery.style( elem, name );\n\t}\n\n\t// Support: IE9\n\t// getPropertyValue is only needed for .css('filter') (#12537)\n\tif ( computed ) {\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// http://dev.w3.org/csswg/cssom/#resolved-values\n\t\tif ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE9-11+\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style;\n\n// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( name ) {\n\n\t// Shortcut for names that are not vendor prefixed\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\tvar i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\n\n\t\t// If we already have the right measurement, avoid augmentation\n\t\t4 :\n\n\t\t// Otherwise initialize for horizontal or vertical properties\n\t\tname === \"width\" ? 1 : 0,\n\n\t\tval = 0;\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin, so add it if we want it\n\t\tif ( extra === \"margin\" ) {\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\tif ( isBorderBox ) {\n\n\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\tif ( extra === \"content\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// At this point, extra isn't border nor margin, so remove border\n\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t} else {\n\n\t\t\t// At this point, extra isn't content, so add padding\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// At this point, extra isn't content nor padding, so add border\n\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n\n\t// Start with offset property, which is equivalent to the border-box value\n\tvar valueIsBorderBox = true,\n\t\tval = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n\t\tstyles = getStyles( elem ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t// Some non-html elements return undefined for offsetWidth, so check for null/undefined\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\tif ( val <= 0 || val == null ) {\n\n\t\t// Fall back to computed then uncomputed css if necessary\n\t\tval = curCSS( elem, name, styles );\n\t\tif ( val < 0 || val == null ) {\n\t\t\tval = elem.style[ name ];\n\t\t}\n\n\t\t// Computed unit is not pixels. Stop here and return.\n\t\tif ( rnumnonpx.test( val ) ) {\n\t\t\treturn val;\n\t\t}\n\n\t\t// Check for style in case a browser which returns unreliable values\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\tvalueIsBorderBox = isBorderBox &&\n\t\t\t( support.boxSizingReliable() || val === elem.style[ name ] );\n\n\t\t// Normalize \"\", auto, and prepare for extra\n\t\tval = parseFloat( val ) || 0;\n\t}\n\n\t// Use the active box-sizing model to add/subtract irrelevant styles\n\treturn ( val +\n\t\taugmentWidthOrHeight(\n\t\t\telem,\n\t\t\tname,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles\n\t\t)\n\t) + \"px\";\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem, hidden,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalues[ index ] = dataPriv.get( elem, \"olddisplay\" );\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Reset the inline display of this element to learn if it is\n\t\t\t// being hidden by cascaded rules or not\n\t\t\tif ( !values[ index ] && display === \"none\" ) {\n\t\t\t\telem.style.display = \"\";\n\t\t\t}\n\n\t\t\t// Set elements which have been overridden with display: none\n\t\t\t// in a stylesheet to whatever the default browser style is\n\t\t\t// for such an element\n\t\t\tif ( elem.style.display === \"\" && isHidden( elem ) ) {\n\t\t\t\tvalues[ index ] = dataPriv.access(\n\t\t\t\t\telem,\n\t\t\t\t\t\"olddisplay\",\n\t\t\t\t\tdefaultDisplay( elem.nodeName )\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\thidden = isHidden( elem );\n\n\t\t\tif ( display !== \"none\" || !hidden ) {\n\t\t\t\tdataPriv.set(\n\t\t\t\t\telem,\n\t\t\t\t\t\"olddisplay\",\n\t\t\t\t\thidden ? display : jQuery.css( elem, \"display\" )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of most of the elements in a second loop\n\t// to avoid the constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\n\t\t\telem.style.display = show ? values[ index ] || \"\" : \"none\";\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {\n\t\t\"float\": \"cssFloat\"\n\t},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = jQuery.camelCase( name ),\n\t\t\tstyle = elem.style;\n\n\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\tif ( type === \"number\" ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tstyle[ name ] = value;\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = jQuery.camelCase( name );\n\n\t\t// Make sure that we're working with the right name\n\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( i, name ) {\n\tjQuery.cssHooks[ name ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\t\t\t\t\telem.offsetWidth === 0 ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = extra && getStyles( elem ),\n\t\t\t\tsubtract = extra && augmentWidthOrHeight(\n\t\t\t\t\telem,\n\t\t\t\t\tname,\n\t\t\t\t\textra,\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\tstyles\n\t\t\t\t);\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ name ] = value;\n\t\t\t\tvalue = jQuery.css( elem, name );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// Support: Android 2.3\njQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn swap( elem, { \"display\": \"inline-block\" },\n\t\t\t\tcurCSS, [ elem, \"marginRight\" ] );\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( !rmargin.test( prefix ) ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( jQuery.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t},\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHidden( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 &&\n\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE9\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back Compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, timerId,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = jQuery.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4 ; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\t/* jshint validthis: true */\n\tvar prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHidden( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Handle queue: false promises\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Height/width overflow pass\n\tif ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\n\n\t\t// Make sure that nothing sneaks out\n\t\t// Record all 3 overflow attributes because IE9-10 do not\n\t\t// change the overflow attribute when overflowX and\n\t\t// overflowY are set to the same value\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Set display property to inline-block for height/width\n\t\t// animations on inline elements that are having width/height animated\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\n\t\t// Test default display if display is currently \"none\"\n\t\tcheckDisplay = display === \"none\" ?\n\t\t\tdataPriv.get( elem, \"olddisplay\" ) || defaultDisplay( elem.nodeName ) : display;\n\n\t\tif ( checkDisplay === \"inline\" && jQuery.css( elem, \"float\" ) === \"none\" ) {\n\t\t\tstyle.display = \"inline-block\";\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// show/hide pass\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.exec( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// If there is dataShow left over from a stopped hide or show\n\t\t\t\t// and we are going to proceed with show, we should pretend to be hidden\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\n\t\t// Any non-fx value stops us from restoring the original display value\n\t\t} else {\n\t\t\tdisplay = undefined;\n\t\t}\n\t}\n\n\tif ( !jQuery.isEmptyObject( orig ) ) {\n\t\tif ( dataShow ) {\n\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\thidden = dataShow.hidden;\n\t\t\t}\n\t\t} else {\n\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", {} );\n\t\t}\n\n\t\t// Store state if its toggle - enables .stop().toggle() to \"reverse\"\n\t\tif ( toggle ) {\n\t\t\tdataShow.hidden = !hidden;\n\t\t}\n\t\tif ( hidden ) {\n\t\t\tjQuery( elem ).show();\n\t\t} else {\n\t\t\tanim.done( function() {\n\t\t\t\tjQuery( elem ).hide();\n\t\t\t} );\n\t\t}\n\t\tanim.done( function() {\n\t\t\tvar prop;\n\n\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\tfor ( prop in orig ) {\n\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t}\n\t\t} );\n\t\tfor ( prop in orig ) {\n\t\t\ttween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\n\t\t\tif ( !( prop in dataShow ) ) {\n\t\t\t\tdataShow[ prop ] = tween.start;\n\t\t\t\tif ( hidden ) {\n\t\t\t\t\ttween.end = tween.start;\n\t\t\t\t\ttween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t// If this is a noop like .hide().hide(), restore an overwritten display value\n\t} else if ( ( display === \"none\" ? defaultDisplay( elem.nodeName ) : display ) === \"inline\" ) {\n\t\tstyle.display = display;\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = jQuery.camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( jQuery.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t} else {\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length ; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( jQuery.isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tjQuery.proxy( result.stop, result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\t// attach callbacks from options\n\treturn animation.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnotwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length ; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tjQuery.isFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t};\n\n\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ?\n\t\topt.duration : opt.duration in jQuery.fx.speeds ?\n\t\t\tjQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = jQuery.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Checks the timer has not already been removed\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tif ( timer() ) {\n\t\tjQuery.fx.start();\n\t} else {\n\t\tjQuery.timers.pop();\n\t}\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( !timerId ) {\n\t\ttimerId = window.setInterval( jQuery.fx.tick, jQuery.fx.interval );\n\t}\n};\n\njQuery.fx.stop = function() {\n\twindow.clearInterval( timerId );\n\n\ttimerId = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: iOS<=5.1, Android<=4.2+\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE<=11+\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: Android<=2.3\n\t// Options inside disabled selects are incorrectly marked as disabled\n\tselect.disabled = true;\n\tsupport.optDisabled = !opt.disabled;\n\n\t// Support: IE<=11+\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// All attributes are lowercase\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\tname = name.toLowerCase();\n\t\t\thooks = jQuery.attrHooks[ name ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tjQuery.nodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name, propName,\n\t\t\ti = 0,\n\t\t\tattrNames = value && value.match( rnotwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\tpropName = jQuery.propFix[ name ] || name;\n\n\t\t\t\t// Boolean attributes get special treatment (#10870)\n\t\t\t\tif ( jQuery.expr.match.bool.test( name ) ) {\n\n\t\t\t\t\t// Set corresponding property to false\n\t\t\t\t\telem[ propName ] = false;\n\t\t\t\t}\n\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle;\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ name ];\n\t\t\tattrHandle[ name ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tname.toLowerCase() :\n\t\t\t\tnull;\n\t\t\tattrHandle[ name ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\treturn tabindex ?\n\t\t\t\t\tparseInt( tabindex, 10 ) :\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\t\trclickable.test( elem.nodeName ) && elem.href ?\n\t\t\t\t\t\t\t0 :\n\t\t\t\t\t\t\t-1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\nvar rclass = /[\\t\\r\\n\\f]/g;\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( typeof value === \"string\" && value ) {\n\t\t\tclasses = value.match( rnotwhite ) || [];\n\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 &&\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tif ( typeof value === \"string\" && value ) {\n\t\t\tclasses = value.match( rnotwhite ) || [];\n\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 &&\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value;\n\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( type === \"string\" ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = value.match( rnotwhite ) || [];\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + getClass( elem ) + \" \" ).replace( rclass, \" \" )\n\t\t\t\t\t.indexOf( className ) > -1\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g,\n\trspaces = /[\\x20\\t\\r\\n\\f]+/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, isFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\treturn typeof ret === \"string\" ?\n\n\t\t\t\t\t// Handle most common string cases\n\t\t\t\t\tret.replace( rreturn, \"\" ) :\n\n\t\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\t\tret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tisFunction = jQuery.isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE10-11+\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tjQuery.trim( jQuery.text( elem ) ).replace( rspaces, \" \" );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\" || index < 0,\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length,\n\t\t\t\t\ti = index < 0 ?\n\t\t\t\t\t\tmax :\n\t\t\t\t\t\tone ? index : 0;\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t( support.optDisabled ?\n\t\t\t\t\t\t\t\t!option.disabled : option.getAttribute( \"disabled\" ) === null ) &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\telem[ type ]();\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\njQuery.each( ( \"blur focus focusin focusout load resize scroll unload click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup error contextmenu\" ).split( \" \" ),\n\tfunction( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n} );\n\njQuery.fn.extend( {\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\n\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\n// Support: Firefox\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome, Safari\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = jQuery.now();\n\nvar rquery = ( /\\?/ );\n\n\n\n// Support: Android 2.3\n// Workaround failure to string-cast null input\njQuery.parseJSON = function( data ) {\n\treturn JSON.parse( data + \"\" );\n};\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE9\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trhash = /#.*$/,\n\trts = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];\n\n\t\tif ( jQuery.isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": jQuery.parseJSON,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// The jqXHR state\n\t\t\tstate = 0,\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( state === 2 ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tvar lname = name.toLowerCase();\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\t\t\tfor ( code in map ) {\n\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\n\t\tjqXHR.success = jqXHR.done;\n\t\tjqXHR.error = jqXHR.fail;\n\n\t\t// Remove hash character (#7531: and string promotion)\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" ).replace( rhash, \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( rnotwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE8-11+\n\t\t\t// IE throws exception if url is malformed, e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE8-11+\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( state === 2 ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\tcacheURL = s.url;\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// If data is available, append data to url\n\t\t\tif ( s.data ) {\n\t\t\t\tcacheURL = ( s.url += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add anti-cache in url if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\ts.url = rts.test( cacheURL ) ?\n\n\t\t\t\t\t// If there is already a '_' parameter, set its value\n\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + nonce++ ) :\n\n\t\t\t\t\t// Otherwise add one to the end\n\t\t\t\t\tcacheURL + ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + nonce++;\n\t\t\t}\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\n\t\t\tjqXHR[ i ]( s[ i ] );\n\t\t}\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tstate = 1;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Propagate exception as error if not done\n\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\tdone( -1, e );\n\n\t\t\t\t// Simply rethrow otherwise\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Called once\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// State is \"done\" now\n\t\t\tstate = 2;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapAll( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( this[ 0 ] ) {\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar isFunction = jQuery.isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function() {\n\t\treturn this.parent().each( function() {\n\t\t\tif ( !jQuery.nodeName( this, \"body\" ) ) {\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t\t}\n\t\t} ).end();\n\t}\n} );\n\n\njQuery.expr.filters.hidden = function( elem ) {\n\treturn !jQuery.expr.filters.visible( elem );\n};\njQuery.expr.filters.visible = function( elem ) {\n\n\t// Support: Opera <= 12.12\n\t// Opera reports offsetWidths and offsetHeights less than zero on some elements\n\t// Use OR instead of AND as the element is not visible if either is true\n\t// See tickets #10406 and #13132\n\treturn elem.offsetWidth > 0 || elem.offsetHeight > 0 || elem.getClientRects().length > 0;\n};\n\n\n\n\nvar r20 = /%20/g,\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( jQuery.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, value ) {\n\n\t\t\t// If value is a function, invoke it and return its value\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\n\t\t};\n\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\n\tif ( traditional === undefined ) {\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\treturn val == null ?\n\t\t\t\tnull :\n\t\t\t\tjQuery.isArray( val ) ?\n\t\t\t\t\tjQuery.map( val, function( val ) {\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t\t} ) :\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE9\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE9\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = callback( \"error\" );\n\n\t\t\t\t// Support: IE9\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t} ).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\tcontext = context || document;\n\n\tvar parsed = rsingleTag.exec( data ),\n\t\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n// Keep a copy of the old load method\nvar _load = jQuery.fn.load;\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tif ( typeof url !== \"string\" && _load ) {\n\t\treturn _load.apply( this, arguments );\n\t}\n\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = jQuery.trim( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.expr.filters.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\n/**\n * Gets a window from an element\n */\nfunction getWindow( elem ) {\n\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\n}\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( jQuery.isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\toffset: function( options ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar docElem, win,\n\t\t\telem = this[ 0 ],\n\t\t\tbox = { top: 0, left: 0 },\n\t\t\tdoc = elem && elem.ownerDocument;\n\n\t\tif ( !doc ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdocElem = doc.documentElement;\n\n\t\t// Make sure it's not a disconnected DOM node\n\t\tif ( !jQuery.contains( docElem, elem ) ) {\n\t\t\treturn box;\n\t\t}\n\n\t\tbox = elem.getBoundingClientRect();\n\t\twin = getWindow( doc );\n\t\treturn {\n\t\t\ttop: box.top + win.pageYOffset - docElem.clientTop,\n\t\t\tleft: box.left + win.pageXOffset - docElem.clientLeft\n\t\t};\n\t},\n\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n\t\t// because it is its only offset parent\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume getBoundingClientRect is there when computed position is fixed\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\n\t\t\t// Get *real* offsetParent\n\t\t\toffsetParent = this.offsetParent();\n\n\t\t\t// Get correct offsets\n\t\t\toffset = this.offset();\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t}\n\n\t\t\t// Add offsetParent borders\n\t\t\tparentOffset.top += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true );\n\t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true );\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\t\t\tvar win = getWindow( elem );\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari<7-8+, Chrome<37-44+\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\n\t\t};\n\t} );\n} );\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t},\n\tsize: function() {\n\t\treturn this.length;\n\t}\n} );\n\njQuery.fn.andSelf = jQuery.fn.addBack;\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( !noGlobal ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\nreturn jQuery;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jquery/dist/jquery.js\n// module id = 4\n// module chunks = 0","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/underscore/underscore.js\n// module id = 5\n// module chunks = 0","module.exports = {\r\n\r\n\t/**\r\n\t* Generate a random id for the object\r\n\t*/\r\n\tuniqueId: function() {\r\n\t\tvar unum = Math.floor((1 + Math.random()) * 0x10000);\r\n\t\tvar unumstr = unum.toString(16);\r\n\t\t//console.log(unumstr);\r\n\t\treturn unumstr;\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Check inputs from editing properties\r\n\t *\r\n\t */\r\n\tcheckInput: function(val) {\r\n\t\tif (isNaN(val)) {\r\n\t\t\treturn val;\r\n\t\t} else {\r\n\t\t\tvar num = parseFloat(val);\r\n\t\t\tif ((num % 1) == 0.0) {\r\n\t\t\t\treturn parseInt(val);\r\n\t\t\t} else {\r\n\t\t\t\treturn num;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./components/common.js\n// module id = 6\n// module chunks = 0","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.4';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, customDefaultsAssignIn);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/lodash.js\n// module id = 7\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 8\n// module chunks = 0",";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.sortable = factory();\n  }\n}(this, function() {\n/*\n * HTML5 Sortable library\n * https://github.com/lukasoppermann/html5sortable\n *\n * Original code copyright 2012 Ali Farhadi.\n * This version is mantained by Lukas Oppermann <lukas@vea.re>\n * Previously also mantained by Alexandru Badiu <andu@ctrlz.ro>\n * jQuery-independent implementation by Nazar Mokrynskyi <nazar@mokrynskyi.com>\n *\n * Released under the MIT license.\n */\n'use strict'\n/*\n * variables global to the plugin\n */\nvar dragging\nvar draggingHeight\nvar placeholders = []\nvar sortables = []\n/**\n * Get or set data on element\n * @param {Element} element\n * @param {string} key\n * @param {*} value\n * @return {*}\n */\nvar _data = function (element, key, value) {\n  if (value === undefined) {\n    return element && element.h5s && element.h5s.data && element.h5s.data[key]\n  } else {\n    element.h5s = element.h5s || {}\n    element.h5s.data = element.h5s.data || {}\n    element.h5s.data[key] = value\n  }\n}\n/**\n * Remove data from element\n * @param {Element} element\n */\nvar _removeData = function (element) {\n  if (element.h5s) {\n    delete element.h5s.data\n  }\n}\n/**\n * Tests if an element matches a given selector. Comparable to jQuery's $(el).is('.my-class')\n * @param {el} DOM element\n * @param {selector} selector test against the element\n * @returns {boolean}\n */\n/* istanbul ignore next */\nvar _matches = function (el, selector) {\n  return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector)\n}\n/**\n * Filter only wanted nodes\n * @param {Array|NodeList} nodes\n * @param {Array/string} wanted\n * @returns {Array}\n */\nvar _filter = function (nodes, wanted) {\n  if (!wanted) {\n    return Array.prototype.slice.call(nodes)\n  }\n  var result = []\n  for (var i = 0; i < nodes.length; ++i) {\n    if (typeof wanted === 'string' && _matches(nodes[i], wanted)) {\n      result.push(nodes[i])\n    }\n    if (wanted.indexOf(nodes[i]) !== -1) {\n      result.push(nodes[i])\n    }\n  }\n  return result\n}\n/**\n * @param {Array|Element} element\n * @param {Array|string} event\n * @param {Function} callback\n */\nvar _on = function (element, event, callback) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      _on(element[i], event, callback)\n    }\n    return\n  }\n  element.addEventListener(event, callback)\n  element.h5s = element.h5s || {}\n  element.h5s.events = element.h5s.events || {}\n  element.h5s.events[event] = callback\n}\n/**\n * @param {Array|Element} element\n * @param {Array|string} event\n */\nvar _off = function (element, event) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      _off(element[i], event)\n    }\n    return\n  }\n  if (element.h5s && element.h5s.events && element.h5s.events[event]) {\n    element.removeEventListener(event, element.h5s.events[event])\n    delete element.h5s.events[event]\n  }\n}\n/**\n * @param {Array|Element} element\n * @param {string} attribute\n * @param {*} value\n */\nvar _attr = function (element, attribute, value) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      _attr(element[i], attribute, value)\n    }\n    return\n  }\n  element.setAttribute(attribute, value)\n}\n/**\n * @param {Array|Element} element\n * @param {string} attribute\n */\nvar _removeAttr = function (element, attribute) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      _removeAttr(element[i], attribute)\n    }\n    return\n  }\n  element.removeAttribute(attribute)\n}\n/**\n * @param {Element} element\n * @returns {{left: *, top: *}}\n */\nvar _offset = function (element) {\n  var rect = element.getClientRects()[0]\n  return {\n    left: rect.left + window.scrollX,\n    top: rect.top + window.scrollY\n  }\n}\n/*\n * remove event handlers from items\n * @param {Array|NodeList} items\n */\nvar _removeItemEvents = function (items) {\n  _off(items, 'dragstart')\n  _off(items, 'dragend')\n  _off(items, 'selectstart')\n  _off(items, 'dragover')\n  _off(items, 'dragenter')\n  _off(items, 'drop')\n}\n/*\n * Remove event handlers from sortable\n * @param {Element} sortable a single sortable\n */\nvar _removeSortableEvents = function (sortable) {\n  _off(sortable, 'dragover')\n  _off(sortable, 'dragenter')\n  _off(sortable, 'drop')\n}\n/*\n * Attach ghost to dataTransfer object\n * @param {Event} original event\n * @param {object} ghost-object with item, x and y coordinates\n */\nvar _attachGhost = function (event, ghost) {\n  // this needs to be set for HTML5 drag & drop to work\n  event.dataTransfer.effectAllowed = 'move'\n  // Firefox requires some arbitrary content in the data in order for\n  // the drag & drop functionality to work\n  event.dataTransfer.setData('text', 'arbitrary-content')\n\n  // check if setDragImage method is available\n  if (event.dataTransfer.setDragImage) {\n    event.dataTransfer.setDragImage(ghost.draggedItem, ghost.x, ghost.y)\n  }\n}\n/**\n * _addGhostPos clones the dragged item and adds it as a Ghost item\n * @param {Event} event - the event fired when dragstart is triggered\n * @param {object} ghost - .draggedItem = Element\n */\nvar _addGhostPos = function (event, ghost) {\n  if (!ghost.x) {\n    ghost.x = parseInt(event.pageX - _offset(ghost.draggedItem).left)\n  }\n  if (!ghost.y) {\n    ghost.y = parseInt(event.pageY - _offset(ghost.draggedItem).top)\n  }\n  return ghost\n}\n/**\n * _makeGhost decides which way to make a ghost and passes it to attachGhost\n * @param {Element} draggedItem - the item that the user drags\n */\nvar _makeGhost = function (draggedItem) {\n  return {\n    draggedItem: draggedItem\n  }\n}\n/**\n * _getGhost constructs ghost and attaches it to dataTransfer\n * @param {Event} event - the original drag event object\n * @param {Element} draggedItem - the item that the user drags\n */\n// TODO: could draggedItem be replaced by event.target in all instances\nvar _getGhost = function (event, draggedItem) {\n  // add ghost item & draggedItem to ghost object\n  var ghost = _makeGhost(draggedItem)\n  // attach ghost position\n  ghost = _addGhostPos(event, ghost)\n  // attach ghost to dataTransfer\n  _attachGhost(event, ghost)\n}\n/*\n * Remove data from sortable\n * @param {Element} sortable a single sortable\n */\nvar _removeSortableData = function (sortable) {\n  _removeData(sortable)\n  _removeAttr(sortable, 'aria-dropeffect')\n}\n/*\n * Remove data from items\n * @param {Array|Element} items\n */\nvar _removeItemData = function (items) {\n  _removeAttr(items, 'aria-grabbed')\n  _removeAttr(items, 'draggable')\n  _removeAttr(items, 'role')\n}\n/*\n * Check if two lists are connected\n * @param {Element} curList\n * @param {Element} destList\n */\nvar _listsConnected = function (curList, destList) {\n  if (curList === destList) {\n    return true\n  }\n  if (_data(curList, 'connectWith') !== undefined) {\n    return _data(curList, 'connectWith') === _data(destList, 'connectWith')\n  }\n  return false\n}\n/*\n * get handle or return item\n * @param {Array} items\n * @param {selector} handle\n */\nvar _getHandles = function (items, handle) {\n  var result = []\n  var handles\n  if (!handle) {\n    return items\n  }\n  for (var i = 0; i < items.length; ++i) {\n    handles = items[i].querySelectorAll(handle)\n    result = result.concat(Array.prototype.slice.call(handles))\n  }\n  return result\n}\n/*\n * Destroy the sortable\n * @param {Element} sortableElement a single sortable\n */\nvar _destroySortable = function (sortableElement) {\n  var opts = _data(sortableElement, 'opts') || {}\n  var items = _filter(_getChildren(sortableElement), opts.items)\n  var handles = _getHandles(items, opts.handle)\n  // remove event handlers & data from sortable\n  _removeSortableEvents(sortableElement)\n  _removeSortableData(sortableElement)\n  // remove event handlers & data from items\n  _off(handles, 'mousedown')\n  _removeItemEvents(items)\n  _removeItemData(items)\n}\n/*\n * Enable the sortable\n * @param {Element} sortableElement a single sortable\n */\nvar _enableSortable = function (sortableElement) {\n  var opts = _data(sortableElement, 'opts')\n  var items = _filter(_getChildren(sortableElement), opts.items)\n  var handles = _getHandles(items, opts.handle)\n  _attr(sortableElement, 'aria-dropeffect', 'move')\n  _data(sortableElement, '_disabled', 'false')\n  _attr(handles, 'draggable', 'true')\n  // IE FIX for ghost\n  // can be disabled as it has the side effect that other events\n  // (e.g. click) will be ignored\n  var spanEl = (document || window.document).createElement('span')\n  if (typeof spanEl.dragDrop === 'function' && !opts.disableIEFix) {\n    _on(handles, 'mousedown', function () {\n      if (items.indexOf(this) !== -1) {\n        this.dragDrop()\n      } else {\n        var parent = this.parentElement\n        while (items.indexOf(parent) === -1) {\n          parent = parent.parentElement\n        }\n        parent.dragDrop()\n      }\n    })\n  }\n}\n/*\n * Disable the sortable\n * @param {Element} sortableElement a single sortable\n */\nvar _disableSortable = function (sortableElement) {\n  var opts = _data(sortableElement, 'opts')\n  var items = _filter(_getChildren(sortableElement), opts.items)\n  var handles = _getHandles(items, opts.handle)\n  _attr(sortableElement, 'aria-dropeffect', 'none')\n  _data(sortableElement, '_disabled', 'true')\n  _attr(handles, 'draggable', 'false')\n  _off(handles, 'mousedown')\n}\n/*\n * Reload the sortable\n * @param {Element} sortableElement a single sortable\n * @description events need to be removed to not be double bound\n */\nvar _reloadSortable = function (sortableElement) {\n  var opts = _data(sortableElement, 'opts')\n  var items = _filter(_getChildren(sortableElement), opts.items)\n  var handles = _getHandles(items, opts.handle)\n  _data(sortableElement, '_disabled', 'false')\n  // remove event handlers from items\n  _removeItemEvents(items)\n  _off(handles, 'mousedown')\n  // remove event handlers from sortable\n  _removeSortableEvents(sortableElement)\n}\n/**\n * Get position of the element relatively to its sibling elements\n * @param {Element} element\n * @returns {number}\n */\nvar _index = function (element) {\n  if (!element.parentElement) {\n    return 0\n  }\n  return Array.prototype.indexOf.call(element.parentElement.children, element)\n}\n/**\n * Whether element is in DOM\n * @param {Element} element\n * @returns {boolean}\n */\nvar _attached = function (element) {\n  // document.body.contains(element)\n  return !!element.parentNode\n}\n/**\n * Convert HTML string into DOM element.\n * @param {Element|string} html\n * @param {string} tagname\n * @returns {Element}\n */\nvar _html2element = function (html, tagName) {\n  if (typeof html !== 'string') {\n    return html\n  }\n  var parentElement = document.createElement(tagName)\n  parentElement.innerHTML = html\n  return parentElement.firstChild\n}\n/**\n * Insert before target\n * @param {Element} target\n * @param {Element} element\n */\nvar _before = function (target, element) {\n  target.parentElement.insertBefore(\n    element,\n    target\n  )\n}\n/**\n * Insert after target\n * @param {Element} target\n * @param {Element} element\n */\nvar _after = function (target, element) {\n  target.parentElement.insertBefore(\n    element,\n    target.nextElementSibling\n  )\n}\n/**\n * Detach element from DOM\n * @param {Element} element\n */\nvar _detach = function (element) {\n  if (element.parentNode) {\n    element.parentNode.removeChild(element)\n  }\n}\n/**\n * Make native event that can be dispatched afterwards\n * @param {string} name\n * @param {object} detail\n * @returns {CustomEvent}\n */\nvar _makeEvent = function (name, detail) {\n  var e = document.createEvent('Event')\n  if (detail) {\n    e.detail = detail\n  }\n  e.initEvent(name, false, true)\n  return e\n}\n/**\n * @param {Element} sortableElement\n * @param {CustomEvent} event\n */\nvar _dispatchEventOnConnected = function (sortableElement, event) {\n  sortables.forEach(function (target) {\n    if (_listsConnected(sortableElement, target)) {\n      target.dispatchEvent(event)\n    }\n  })\n}\n\n/**\n * Creates and returns a new debounced version of the passed function which will postpone its execution until after wait milliseconds have elapsed\n * @param {fn} Function to debounce\n * @param {delay} time to wait before calling function with latest arguments, 0 - no debounce\n * @param {context} time to wait before calling function with latest arguments, 0 - no debounce\n * @returns {function} - debounced function\n */\nfunction _debounce (fn, delay, context) {\n  var timer = null\n\n  if (delay === 0) {\n    return fn\n  }\n  return function () {\n    var eContext = context || this\n    var args = arguments\n    clearTimeout(timer)\n    timer = setTimeout(function () {\n      fn.apply(eContext, args)\n    }, delay)\n  }\n}\n\nvar _getChildren = function (element) {\n  return element.children\n}\n\nvar _serialize = function (list) {\n  var children = _filter(_getChildren(list), _data(list, 'items'))\n  return children\n}\n\n/*\n * Public sortable object\n * @param {Array|NodeList} sortableElements\n * @param {object|string} options|method\n */\nvar sortable = function (sortableElements, options) {\n  var method = String(options)\n\n  options = (function (options) {\n    var result = {\n      connectWith: false,\n      placeholder: null,\n      disableIEFix: false,\n      placeholderClass: 'sortable-placeholder',\n      draggingClass: 'sortable-dragging',\n      hoverClass: false,\n      debounce: 0,\n      maxItems: 0\n    }\n    for (var option in options) {\n      result[option] = options[option]\n    }\n    return result\n  })(options)\n\n  if (options && typeof options.getChildren === 'function') {\n    _getChildren = options.getChildren\n  }\n\n  if (typeof sortableElements === 'string') {\n    sortableElements = document.querySelectorAll(sortableElements)\n  }\n\n  if (sortableElements instanceof window.Element) {\n    sortableElements = [sortableElements]\n  }\n\n  sortableElements = Array.prototype.slice.call(sortableElements)\n\n  if (/serialize/.test(method)) {\n    var serialized = []\n    sortableElements.forEach(function (sortableElement) {\n      serialized.push({\n        list: sortableElement,\n        children: _serialize(sortableElement)\n      })\n    })\n    return serialized\n  }\n\n  /* TODO: maxstatements should be 25, fix and remove line below */\n  /* jshint maxstatements:false */\n  sortableElements.forEach(function (sortableElement) {\n    if (/enable|disable|destroy/.test(method)) {\n      return sortable[method](sortableElement)\n    }\n\n    // get options & set options on sortable\n    options = _data(sortableElement, 'opts') || options\n    _data(sortableElement, 'opts', options)\n    // reset sortable\n    _reloadSortable(sortableElement)\n    // initialize\n    var items = _filter(_getChildren(sortableElement), options.items)\n    var index\n    var startParent\n    var startList\n    var placeholder = options.placeholder\n    var maxItems\n    if (!placeholder) {\n      placeholder = document.createElement(\n        /^ul|ol$/i.test(sortableElement.tagName) ? 'li' : 'div'\n      )\n    }\n    placeholder = _html2element(placeholder, sortableElement.tagName)\n    placeholder.classList.add.apply(\n      placeholder.classList,\n      options.placeholderClass.split(' ')\n    )\n\n    // setup sortable ids\n    if (!sortableElement.getAttribute('data-sortable-id')) {\n      var id = sortables.length\n      sortables[id] = sortableElement\n      _attr(sortableElement, 'data-sortable-id', id)\n      _attr(items, 'data-item-sortable-id', id)\n    }\n\n    _data(sortableElement, 'items', options.items)\n    placeholders.push(placeholder)\n    if (options.connectWith) {\n      _data(sortableElement, 'connectWith', options.connectWith)\n    }\n\n    _enableSortable(sortableElement)\n    _attr(items, 'role', 'option')\n    _attr(items, 'aria-grabbed', 'false')\n\n    // Mouse over class\n    if (options.hoverClass) {\n      var hoverClass = 'sortable-over'\n      if (typeof options.hoverClass === 'string') {\n        hoverClass = options.hoverClass\n      }\n\n      _on(items, 'mouseenter', function () {\n        this.classList.add(hoverClass)\n      })\n      _on(items, 'mouseleave', function () {\n        this.classList.remove(hoverClass)\n      })\n    }\n\n    // max items\n    if (options.maxItems && typeof options.maxItems === 'number') {\n      maxItems = options.maxItems\n    }\n\n    // Handle drag events on draggable items\n    _on(items, 'dragstart', function (e) {\n      e.stopImmediatePropagation()\n      if ((options.handle && !_matches(e.target, options.handle)) || this.getAttribute('draggable') === 'false') {\n        return\n      }\n\n      // add transparent clone or other ghost to cursor\n      _getGhost(e, this)\n      // cache selsection & add attr for dragging\n      this.classList.add(options.draggingClass)\n      dragging = this\n      _attr(dragging, 'aria-grabbed', 'true')\n      // grab values\n      index = _index(dragging)\n      draggingHeight = parseInt(window.getComputedStyle(dragging).height)\n      startParent = this.parentElement\n      startList = _serialize(startParent)\n      // dispatch sortstart event on each element in group\n      _dispatchEventOnConnected(sortableElement, _makeEvent('sortstart', {\n        item: dragging,\n        placeholder: placeholder,\n        startparent: startParent\n      }))\n    })\n    // Handle drag events on draggable items\n    _on(items, 'dragend', function () {\n      var newParent\n      if (!dragging) {\n        return\n      }\n      // remove dragging attributes and show item\n      dragging.classList.remove(options.draggingClass)\n      _attr(dragging, 'aria-grabbed', 'false')\n      dragging.style.display = dragging.oldDisplay\n      delete dragging.oldDisplay\n\n      placeholders.forEach(_detach)\n      newParent = this.parentElement\n      _dispatchEventOnConnected(sortableElement, _makeEvent('sortstop', {\n        item: dragging,\n        startparent: startParent\n      }))\n      if (index !== _index(dragging) || startParent !== newParent) {\n        _dispatchEventOnConnected(sortableElement, _makeEvent('sortupdate', {\n          item: dragging,\n          index: _filter(_getChildren(newParent), _data(newParent, 'items'))\n              .indexOf(dragging),\n          oldindex: items.indexOf(dragging),\n          elementIndex: _index(dragging),\n          oldElementIndex: index,\n          startparent: startParent,\n          endparent: newParent,\n          newEndList: _serialize(newParent),\n          newStartList: _serialize(startParent),\n          oldStartList: startList\n        }))\n      }\n      dragging = null\n      draggingHeight = null\n    })\n    // Handle drop event on sortable & placeholder\n    // TODO: REMOVE placeholder?????\n    _on([sortableElement, placeholder], 'drop', function (e) {\n      var visiblePlaceholder\n      if (!_listsConnected(sortableElement, dragging.parentElement)) {\n        return\n      }\n\n      e.preventDefault()\n      e.stopPropagation()\n      visiblePlaceholder = placeholders.filter(_attached)[0]\n      _after(visiblePlaceholder, dragging)\n      dragging.dispatchEvent(_makeEvent('dragend'))\n    })\n\n    var debouncedDragOverEnter = _debounce(function (element, pageY) {\n      if (!dragging) {\n        return\n      }\n\n      if (items.indexOf(element) !== -1) {\n        var thisHeight = parseInt(window.getComputedStyle(element).height)\n        var placeholderIndex = _index(placeholder)\n        var thisIndex = _index(element)\n        if (options.forcePlaceholderSize) {\n          placeholder.style.height = draggingHeight + 'px'\n        }\n\n        // Check if `element` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n        if (thisHeight > draggingHeight) {\n          // Dead zone?\n          var deadZone = thisHeight - draggingHeight\n          var offsetTop = _offset(element).top\n          if (placeholderIndex < thisIndex &&\n              pageY < offsetTop + deadZone) {\n            return\n          }\n          if (placeholderIndex > thisIndex &&\n              pageY > offsetTop + thisHeight - deadZone) {\n            return\n          }\n        }\n\n        if (dragging.oldDisplay === undefined) {\n          dragging.oldDisplay = dragging.style.display\n        }\n\n        if (dragging.style.display !== 'none') {\n          dragging.style.display = 'none'\n        }\n\n        if (placeholderIndex < thisIndex) {\n          _after(element, placeholder)\n        } else {\n          _before(element, placeholder)\n        }\n        // Intentionally violated chaining, it is more complex otherwise\n        placeholders\n          .filter(function (element) { return element !== placeholder })\n          .forEach(_detach)\n      } else {\n        if (placeholders.indexOf(element) === -1 &&\n            !_filter(_getChildren(element), options.items).length) {\n          placeholders.forEach(_detach)\n          element.appendChild(placeholder)\n        }\n      }\n    }, options.debounce)\n\n    // Handle dragover and dragenter events on draggable items\n    var onDragOverEnter = function (e) {\n      if (!dragging || !_listsConnected(sortableElement, dragging.parentElement) || _data(sortableElement, '_disabled') === 'true') {\n        return\n      }\n      if (maxItems && _filter(_getChildren(sortableElement), _data(sortableElement, 'items')).length >= maxItems) {\n        return\n      }\n      e.preventDefault()\n      e.stopPropagation()\n      e.dataTransfer.dropEffect = 'move'\n      debouncedDragOverEnter(this, e.pageY)\n    }\n\n    _on(items.concat(sortableElement), 'dragover', onDragOverEnter)\n    _on(items.concat(sortableElement), 'dragenter', onDragOverEnter)\n  })\n\n  return sortableElements\n}\n\nsortable.destroy = function (sortableElement) {\n  _destroySortable(sortableElement)\n}\n\nsortable.enable = function (sortableElement) {\n  _enableSortable(sortableElement)\n}\n\nsortable.disable = function (sortableElement) {\n  _disableSortable(sortableElement)\n}\n\n\nreturn sortable;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/html5sortable/dist/html.sortable.js\n// module id = 9\n// module chunks = 0","\"use strict\";\r\n\r\nvar $ = require(\"jquery\"),\r\n\tMn = require(\"backbone.marionette\"),\r\n\tRadio = require(\"backbone.radio\"),\r\n\tconfig = require(\"../config/present\"),\r\n\tComms = require(\"../components/present_comms\"),\r\n\tStore = require(\"../components/present_store\"),\r\n\tPresentAppView = require(\"../views/present_app_view\");\r\n\r\n\r\n/**\r\n * Actions. Marionette Object classes whose purpose is to listen for events on the \"dispatch\" channel and deal with them accordingly.\r\n * This means there is a single place where an event is handled.\r\n * Each action responded to *may* trigger other events.\r\n *\r\n */\r\nvar Actions = [\r\n\trequire(\"../actions/app_start\"),\r\n\trequire(\"../actions/io_updates\"),\r\n\trequire(\"../actions/store\"),\r\n\trequire(\"../actions/views\"),\r\n\trequire(\"../actions/groups\"),\r\n\trequire(\"../actions/events\"),\r\n];\r\n\r\n\r\nvar PresentApp = Mn.Application.extend({\r\n\r\n\tregion: '[data-region=app]',\r\n\r\n\t_comms: null,\r\n\t_store: null,\r\n\t_dispatchChannel: null,\r\n\r\n\r\n\tinitialize: function() {\r\n\r\n\t\t// this._appChannel = Radio.channel(\"app\");\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\r\n\t\tif (config.use_io) {\r\n\t\t\tvar server_url = \"http://\" + window.location.hostname + \":\" + window.location.port;\r\n\t\t\tthis._comms = new Comms({ url: server_url });\r\n\t\t}\r\n\r\n\t\tthis._store = new Store();\r\n\r\n\t\tthis.registerActions();\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Loop through the included action classes and initialize them.\r\n\t * the initialize() function in each action will register the Radio channel replies.\r\n\t *\r\n\t */\r\n\tregisterActions: function() {\r\n\t\tvar self = this;\r\n\t\t_.forEach(Actions, function(actionHandler) {\r\n\t\t\tnew actionHandler();\r\n\t\t});\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Dispatch the start event and render the view when it starts\r\n\t *\r\n\t */\r\n\tonStart: function() {\r\n\t\tthis._dispatchChannel.request(\"app:start\");\r\n\t\tthis.showView(new PresentAppView({ store: this._store }));\r\n\t}\r\n\r\n\r\n});\r\n\r\n\r\n$(document).ready(function() {\r\n\tvar app = new PresentApp();\r\n\tapp.start();\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/present.js\n// module id = 10\n// module chunks = 0","\"use strict\";\r\n\r\nvar Mn = require('backbone.marionette'),\r\n\tRadio = require(\"backbone.radio\");\r\n\r\n\r\nvar Comms = Mn.Object.extend({\r\n\r\n\t_socket: null,\r\n\t_dataChannel: null,\r\n\t_appChannel: null,\r\n\r\n\tinitialize: function(options) {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tthis._dataChannel = Radio.channel(\"data\");\r\n\t\tthis._appChannel = Radio.channel(\"app\");\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t\tthis._commsChannel = Radio.channel(\"comms\");\r\n\r\n\t\t// Init socket.io + listener\r\n\t\tthis._socket = io(options.url);\r\n\t\tthis._socket.on('designmsg', function(respdata) {\r\n\t\t\tself.ioUpdate(respdata);\r\n\t\t});\r\n\r\n\t\tthis._commsChannel.reply(\"txPEventsCheckDesign\", this.txPEventsCheckDesign, this);\r\n\t\tthis._commsChannel.reply(\"txPEventsGetPEInfo\", this.txPEventsGetPEInfo, this);\r\n\t\tthis._commsChannel.reply(\"txPEventsGetLayerInfo\", this.txPEventsGetLayerInfo, this);\r\n\t\tthis._commsChannel.reply(\"txPEventsArr\", this.txPEventsArr, this);\r\n\t\tthis._commsChannel.reply(\"castStartEvent\", this.castStartEvent, this);\r\n\t\tthis._commsChannel.reply(\"castPresentEvent\", this.castPresentEvent, this);\r\n\t\tthis._commsChannel.reply(\"txStartEvent\", this.txStartEvent, this);\r\n\t\tthis._commsChannel.reply(\"txPlayEvent\", this.txPlayEvent, this);\r\n\t},\r\n\r\n\tioUpdate: function(respdata) {\r\n\r\n\t\tvar self = this;\r\n\t\tvar viewcommand = JSON.parse(respdata);\r\n\t\tvar command = viewcommand.command;\r\n\r\n\t\tconsole.log(\"Comms | ioUpdate | Command: \" + command);\r\n\r\n\t\tswitch (command) {\r\n\r\n\t\t\tcase 'designready':\r\n\t\t\t\tthis._dispatchChannel.request(\"io:designready\", {\r\n\t\t\t\t\tproject: (viewcommand.project ? viewcommand.project : null),\r\n\t\t\t\t\tstatus: viewcommand.info\r\n\t\t\t\t});\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 'layerinfo':\r\n\t\t\t\tthis._dispatchChannel.request(\"io:layerinfo\", {\r\n\t\t\t\t\tlayers: viewcommand.info\r\n\t\t\t\t});\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 'peinfo':\r\n\t\t\t\tthis._dispatchChannel.request(\"io:peinfo\", {\r\n\t\t\t\t\tpeinfo: viewcommand.info\r\n\t\t\t\t});\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 'updateAllPEventActions':\r\n\t\t\t\tthis._dispatchChannel.request(\"io:update_actions\", {\r\n\t\t\t\t\tstatesarr: viewcommand.info\r\n\t\t\t\t});\r\n\t\t\tbreak;\r\n\t\t}\r\n\t},\r\n\r\n\ttxPEventsCheckDesign: function() {\r\n\t\tvar msg = JSON.stringify({\r\n\t\t\tcommand: 'checkDesignScreen',\r\n\t\t\tinfo: ''\r\n\t\t});\r\n\t\tthis._socket.emit('updateEvents', msg);\r\n\t},\r\n\r\n\ttxPEventsGetPEInfo: function() {\r\n\t\tvar msg = JSON.stringify({\r\n\t\t\tcommand: 'getPEinfo',\r\n\t\t\tinfo: ''\r\n\t\t});\r\n\t\tthis._socket.emit('updateEvents', msg);\r\n\t},\r\n\r\n\ttxPEventsGetLayerInfo: function() {\r\n\t\tvar msg = JSON.stringify({\r\n\t\t\tcommand: 'getLayerinfo',\r\n\t\t\tinfo: ''\r\n\t\t});\r\n\t\tthis._socket.emit('updateEvents', msg);\r\n\t},\r\n\r\n\ttxPEventsArr: function(data) {\r\n\t\tvar msg = JSON.stringify({\r\n\t\t\tcommand: 'updateEventArr',\r\n\t\t\tinfo: {\r\n\t\t\t\tpel: data.statearr,\r\n\t\t\t\tsev: data.seviews,\r\n\t\t\t\tgroups: data.grouparr\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis._socket.emit('updateEvents', msg);\r\n\t},\r\n\r\n\tcastStartEvent: function(data) {\r\n\r\n\t\tvar event = data.event,\r\n\t\t\tstartinfo = event.get(\"peviews\");\r\n\r\n\t\tvar msg = JSON.stringify({\r\n\t\t\tcommand: \"castStartinfo\",\r\n\t\t\tinfo: startinfo\r\n\t\t});\r\n\r\n\t\t// console.log(msg);\r\n\r\n\t\tthis._socket.emit(\"updateEvents\", msg);\r\n\t},\r\n\r\n\tcastPresentEvent: function(data) {\r\n\r\n\t\tvar event = data.event,\r\n\t\t\tcastind = event.collection.indexOf(event);\r\n\r\n\t\t// This command only sends the index of the event.\r\n\t\t// In terms of the data transferred...\r\n\t\t// our indexes are offset by 1 due to the presence of the startevent in the collection.\r\n\t\tif (castind > 0) {\r\n\t\t\tcastind = castind - 1;\r\n\t\t}\r\n\r\n\t\tvar msg = {\r\n\t\t\tcommand: 'castPEinfo',\r\n\t\t\tinfo: castind\r\n\t\t};\r\n\r\n\t\tconsole.log(msg);\r\n\r\n\t\tthis._socket.emit(\"updateEvents\", JSON.stringify(msg));\r\n\t},\r\n\r\n\ttxStartEvent: function(data) {\r\n\r\n\t\t// console.log(\"txStartEvent\");\r\n\t\t// console.log(data);\r\n\r\n\t\tvar self = this,\r\n\t\t\tevent = data.event,\r\n\t\t\tindex = event.collection.indexOf(event),\r\n\t\t\tpeviews = event.get(\"peviews\"),\r\n\t\t\tscreenName = null,\r\n\t\t\tlayerId = null,\r\n\t\t\tcmd = {};\r\n\r\n\t\tif (index > 0) {\r\n\t\t\tindex = index - 1;\r\n\t\t}\r\n\r\n\t\t// message to screen to go to startstate\r\n\t\t//\r\n\t\tvar msg = {\r\n\t\t\tcommand: 'startPE',\r\n\t\t\tinfo: index\r\n\t\t};\r\n\t\t// console.log(msg);\r\n\t\tthis._socket.emit('updateEvents', JSON.stringify(msg));\r\n\r\n\t\t_.each(peviews, function(peview) {\r\n\r\n\t\t\tscreenName = peview.viewstate.name;\r\n\t\t\tlayerId = peview.layerid;\r\n\r\n\t\t\tif (layerId != \"none\" && peview.actions.length > 0) {\r\n\t\t\t\tcmd = {\r\n\t\t\t\t\tview: screenName,\r\n\t\t\t\t\tscrtxmsg: {\r\n\t\t\t\t\t\tcommand: \"start\",\r\n\t\t\t\t\t\tinfo: \"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tconsole.log(cmd);\r\n\t\t\t\tself._socket.emit(\"screenmsg\", JSON.stringify(cmd));\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t},\r\n\r\n\ttxPlayEvent: function(data) {\r\n\r\n\t\t// console.log(\"txPlayEvent\");\r\n\t\t// console.log(data);\r\n\r\n\t\tvar self = this,\r\n\t\t\tevent = data.event,\r\n\t\t\tindex = event.collection.indexOf(event),\r\n\t\t\tpeviews = event.get(\"peviews\"),\r\n\t\t\tscreenName = null,\r\n\t\t\tlayerId = null,\r\n\t\t\tcmd = {};\r\n\r\n\t\tif (index > 0) {\r\n\t\t\tindex = index - 1;\r\n\t\t}\r\n\r\n\t\t// message to screen ??\r\n\t\tvar msg = {\r\n\t\t\tcommand: 'playPE',\r\n\t\t\tinfo: index\r\n\t\t};\r\n\t\t// console.log(msg);\r\n\t\tthis._socket.emit(\"updateEvents\", JSON.stringify(msg));\r\n\r\n\t\t_.each(peviews, function(peview) {\r\n\r\n\t\t\tscreenName = peview.viewstate.name;\r\n\t\t\tlayerId = peview.layerid;\r\n\r\n\t\t\tif (layerId != \"none\" && peview.actions.length > 0) {\r\n\r\n\t\t\t\tcmd = {\r\n\t\t\t\t\tview: screenName,\r\n\t\t\t\t\tscrtxmsg: {\r\n\t\t\t\t\t\tcommand: \"play\",\r\n\t\t\t\t\t\tinfo: \"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(cmd);\r\n\r\n\t\t\t\tself._socket.emit(\"screenmsg\", JSON.stringify(cmd));\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = Comms;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./components/present_comms.js\n// module id = 11\n// module chunks = 0","\"use strict\";\r\n\r\nvar Mn = require('backbone.marionette'),\r\n\tRadio = require(\"backbone.radio\"),\r\n\tCommon = require(\"../components/common\"),\r\n\tconfig = require(\"../config/present\"),\r\n\tGroupCollection = require(\"../collections/group_collection\"),\r\n\tLayerCollection = require(\"../collections/layer_collection\"),\r\n\tViewCollection = require(\"../collections/view_collection\"),\r\n\tEventCollection = require(\"../collections/event_collection\"),\r\n\tProjectModel = require(\"../models/project_model\");\r\n\r\n\r\nvar Store = Mn.Object.extend({\r\n\r\n\t_appChannel: null,\r\n\t_dataChannel: null,\r\n\t_storeChannel: null,\r\n\r\n\tgroupCollection: null,\r\n\tviewCollection: null,\r\n\teventCollection: null,\r\n\tlayerCollection: null,\r\n\r\n\t//list of {layerid:id,layername:name} in designscreen\r\n\tlayers: [],\r\n\r\n\t//list of viewobjects with state attributes linked to physical screens/browserpages\r\n\tviews: [],\r\n\r\n\t//array of present event objects\r\n\tpresentevents: [],\r\n\r\n\tplayMode: false,\r\n\r\n\tinitialize: function() {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tthis._dataChannel = Radio.channel(\"data\");\r\n\t\tthis._appChannel = Radio.channel(\"app\");\r\n\t\tthis._storeChannel = Radio.channel(\"store\");\r\n\r\n\t\tthis.groupCollection = new GroupCollection();\r\n\t\tthis.viewCollection = new ViewCollection();\r\n\t\tthis.eventCollection = new EventCollection();\r\n\t\tthis.layerCollection = new LayerCollection();\r\n\t\tthis.projectModel = new ProjectModel();\r\n\r\n\t\tthis._storeChannel.reply(\"groupCollection\", function() {\r\n\t\t\treturn self.groupCollection;\r\n\t\t});\r\n\r\n\t\tthis._storeChannel.reply(\"viewCollection\", function() {\r\n\t\t\treturn self.viewCollection;\r\n\t\t});\r\n\r\n\t\tthis._storeChannel.reply(\"eventCollection\", function() {\r\n\t\t\treturn self.eventCollection;\r\n\t\t});\r\n\r\n\t\tthis._storeChannel.reply(\"layerCollection\", function() {\r\n\t\t\treturn self.layerCollection;\r\n\t\t});\r\n\r\n\t\tthis._storeChannel.reply(\"projectModel\", function() {\r\n\t\t\treturn self.projectModel;\r\n\t\t});\r\n\r\n\t\tthis._storeChannel.reply(\"store\", function() {\r\n\t\t\treturn self;\r\n\t\t});\r\n\r\n\t},\r\n\r\n\tsetPlayMode: function(playMode) {\r\n\t\tconsole.log(\"Store | setPlayMode | \" + playMode);\r\n\t\tthis.playMode = playMode;\r\n\t},\r\n\r\n\tgetPlayMode: function() {\r\n\t\treturn this.playMode\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = Store;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./components/present_store.js\n// module id = 12\n// module chunks = 0","\"use strict\";\r\n\r\nvar Bb = require(\"backbone\"),\r\n\tRadio = require(\"backbone.radio\"),\r\n\tconfig = require(\"../config/present\"),\r\n\tGroupModel = require(\"../models/group_model\");\r\n\r\n\r\nvar GroupCollection = Bb.Collection.extend({\r\n\r\n\tmodel: GroupModel,\r\n\tcomparator: \"index\",\r\n\r\n\t_dispatchChannel: null,\r\n\r\n\r\n\tinitialize: function() {\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t\tthis.on(\"change:name\", this.handleChangeName);\r\n\t\t// this.on(\"add remove\", this.handleAddRemove);\r\n\t},\r\n\r\n\r\n\r\n\t/**\r\n\t * When a group model name changes, we need to raise the event on the dispatch channel.\r\n\t * The intention of the action for this event is to update all the event models to change the \"group\" attribute.\r\n\t *\r\n\t */\r\n\thandleChangeName: function(groupModel) {\r\n\r\n\t\tvar oldName = groupModel.previous(\"name\"),\r\n\t\t\tnewName = groupModel.get(\"name\");\r\n\r\n\t\tthis._dispatchChannel.request(\"group:rename\", {\r\n\t\t\toldName: oldName,\r\n\t\t\tnewName: newName,\r\n\t\t\tgroupModel: groupModel\r\n\t\t});\r\n\r\n\t},\r\n\r\n\r\n\tupdateIndexes: function() {\r\n\t\tthis.each(function(groupModel, index) {\r\n\t\t\tgroupModel.set({ \"index\": index }, { silent: true });\r\n\t\t});\r\n\r\n\t\tthis.trigger(\"update:indexes\");\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Determine if a new group can be added, based on current number of groups and maximum groups permitted.\r\n\t *\r\n\t */\r\n\tcanAddGroup: function() {\r\n\t\treturn (this.models.length < config.max_groups);\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Add a new group.\r\n\t *\r\n\t * If a new group can be made, create one with a suitable name, add it to the collection, and return it.\r\n\t *\r\n\t */\r\n\tcreateNew: function() {\r\n\r\n\t\tif ( ! this.canAddGroup()) {\r\n\t\t\tconsole.error(\"Maximum number of groups reached.\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar newGroup = new GroupModel({ name: \"group\" });\r\n\t\tvar index = 0;\r\n\r\n\t\twhile (index <= config.max_groups) {\r\n\t\t\tvar tryName = newGroup.get(\"name\") + index;\r\n\t\t\tif (this.findWhere({ \"name\": tryName })) {\r\n\t\t\t\tindex++;\r\n\t\t\t} else {\r\n\t\t\t\tnewGroup.set(\"name\", tryName);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar maxIndex = this.max(function(groupModel) {\r\n\t\t\treturn groupModel.get(\"index\");\r\n\t\t});\r\n\r\n\t\t// console.log(\"maxIndex\");\r\n\t\t// console.log(maxIndex);\r\n\r\n\t\t//newGroup.set(\"index\", parseInt(maxIndex.get(\"index\"), 10) + 1);\r\n\r\n\t\tthis.add(newGroup, { at: this.length });\r\n\t\treturn newGroup;\r\n\t}\r\n\r\n\r\n});\r\n\r\n\r\nmodule.exports = GroupCollection;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./collections/group_collection.js\n// module id = 13\n// module chunks = 0","\"use strict\";\r\n\r\nvar Bb = require(\"backbone\");\r\n\r\n\r\nvar GroupModel = Bb.Model.extend({\r\n\r\n\tidAttribute: \"name\",\r\n\r\n\tdefaults: {\r\n\t\tname: \"default\",\r\n\t\tindex: 0\r\n\t},\r\n\r\n\tvalidate: function(attributes, options) {\r\n\r\n\t\t// Ensure the new group name is unique.\r\n\t\t// Search our collection for other groups with the new desired name.\r\n\r\n\t\tvar existing = false,\r\n\t\t\tmyId = this.cid,\r\n\t\t\tmyName = attributes.name;\r\n\r\n\t\tvar existing = this.collection.find(function(groupModel) {\r\n\t\t\treturn groupModel.get(\"name\") == myName && myId != groupModel.cid;\r\n\t\t});\r\n\r\n\t\tif (existing !== undefined) {\r\n\t\t\treturn \"There is another group already using the name \" + existing.get(\"name\");\r\n\t\t}\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = GroupModel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./models/group_model.js\n// module id = 14\n// module chunks = 0","\"use strict\";\r\n\r\nvar Bb = require(\"backbone\"),\r\n\tRadio = require(\"backbone.radio\"),\r\n\tLayerModel = require(\"../models/layer_model\");\r\n\r\n\r\nvar LayerCollection = Bb.Collection.extend({\r\n\tmodel: LayerModel\r\n});\r\n\r\n\r\nmodule.exports = LayerCollection;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./collections/layer_collection.js\n// module id = 15\n// module chunks = 0","\"use strict\";\r\n\r\nvar Bb = require(\"backbone\");\r\n\r\n\r\nvar LayerModel = Bb.Model.extend({\r\n\r\n\tidAttribute: \"layerid\",\r\n\r\n\tdefaults: {\r\n\t\tlayerid: null,\r\n\t\tlayername: null\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = LayerModel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./models/layer_model.js\n// module id = 16\n// module chunks = 0","\"use strict\";\r\n\r\nvar Bb = require(\"backbone\"),\r\n\tRadio = require(\"backbone.radio\"),\r\n\tconfig = require(\"../config/present\"),\r\n\tViewModel = require(\"../models/view_model\");\r\n\r\n\r\nvar ViewCollection = Bb.Collection.extend({\r\n\r\n\tmodel: ViewModel,\r\n\r\n\t_dispatchChannel: null,\r\n\r\n\r\n\tinitialize: function() {\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t\tthis.on(\"change:name\", this.handleChangeName);\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * When a view model name changes, we need to raise the event on the dispatch channel.\r\n\t * The intention of the action for this event is to update all the `peviews` info in the event models.\r\n\t *\r\n\t */\r\n\thandleChangeName: function(viewModel) {\r\n\r\n\t\tvar oldName = viewModel.previous(\"name\"),\r\n\t\t\tnewName = viewModel.get(\"name\");\r\n\r\n\t\tthis._dispatchChannel.request(\"view:rename\", {\r\n\t\t\toldName: oldName,\r\n\t\t\tnewName: newName,\r\n\t\t\tviewModel: viewModel\r\n\t\t});\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Determine if a new view can be added, based on current number of views and maximum views supported.\r\n\t *\r\n\t */\r\n\tcanAddView: function() {\r\n\t\treturn (this.models.length < config.max_views);\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Add a new view.\r\n\t *\r\n\t * If a new view can be made, create one with a suitable name, add it to the collection, and return it.\r\n\t *\r\n\t */\r\n\tcreateNew: function() {\r\n\r\n\t\tif ( ! this.canAddView()) {\r\n\t\t\tconsole.error(\"Maximum number of views reached.\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar newView = new ViewModel();\r\n\t\tvar index = 0;\r\n\r\n\t\twhile (index <= config.max_views) {\r\n\t\t\tvar tryName = newView.get(\"name\") + index;\r\n\t\t\tif (this.findWhere({ \"name\": tryName })) {\r\n\t\t\t\tindex++;\r\n\t\t\t} else {\r\n\t\t\t\tnewView.set(\"name\", tryName);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.add(newView);\r\n\t\treturn newView;\r\n\t}\r\n\r\n\r\n});\r\n\r\n\r\nmodule.exports = ViewCollection;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./collections/view_collection.js\n// module id = 17\n// module chunks = 0","\"use strict\";\r\n\r\nvar Bb = require(\"backbone\");\r\n\r\n\r\nvar ViewModel = Bb.Model.extend({\r\n\r\n\tidAttribute: \"name\",\r\n\r\n\tdefaults: {\r\n\t\tname: \"view\"\r\n\t},\r\n\r\n\tvalidate: function(attributes, options) {\r\n\r\n\t\t// Ensure the new view name is unique.\r\n\t\t// Search our collection for other views with the new desired name.\r\n\r\n\t\tvar existing = false,\r\n\t\t\tmyId = this.cid,\r\n\t\t\tmyName = attributes.name;\r\n\r\n\t\tvar existing = this.collection.find(function(viewModel) {\r\n\t\t\treturn viewModel.get(\"name\") == myName && myId != viewModel.cid;\r\n\t\t});\r\n\r\n\t\tif (existing !== undefined) {\r\n\t\t\treturn \"There is another view already using the name \" + existing.get(\"name\");\r\n\t\t}\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = ViewModel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./models/view_model.js\n// module id = 18\n// module chunks = 0","\"use strict\";\r\n\r\nvar Bb = require(\"backbone\"),\r\n\tRadio = require(\"backbone.radio\"),\r\n\tCommon = require(\"../components/common\"),\r\n\tEventModel = require(\"../models/event_model\");\r\n\r\n\r\nvar EventCollection = Bb.Collection.extend({\r\n\r\n\tmodel: EventModel,\r\n\r\n\t_dispatchChannel: null,\r\n\tselectedEvent: null,\r\n\r\n\tinitialize: function() {\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Update the \"index\" property of each event based on their position in the collection.\r\n\t *\r\n\t */\r\n\tupdateIndexes: function() {\r\n\r\n\t\tconsole.log(\"EventCollection | updateIndexes\");\r\n\r\n\t\tthis.each(function(eventModel, index) {\r\n\t\t\t// silent, to ensure the \"change\" handler doesn't fire a million times.\r\n\t\t\teventModel.set({ \"index\": index }, { silent: true });\r\n\t\t});\r\n\r\n\t\tthis.trigger(\"update:indexes\");\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Handle the selection of an event.\r\n\t *\r\n\t */\r\n\tselectEvent: function(eventModel) {\r\n\r\n\t\t// Keep copy of currently selected event\r\n\t\tthis.selectedEvent = eventModel;\r\n\r\n\t\t// Loop through the models, and if the model is the parameter (selected model) then trigger the select event.\r\n\t\t// For now, only the views are interested in this - to indicate the selected state.\r\n\t\tthis.each(function(model) {\r\n\t\t\tif (model == eventModel) {\r\n\t\t\t\tmodel.trigger(\"select\");\r\n\t\t\t} else {\r\n\t\t\t\tmodel.trigger(\"deselect\");\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Get an array that represents the \"startevent\"\r\n\t *\r\n\t */\r\n\tgetStartEvent: function(peviews, groupName) {\r\n\r\n\t\tvar pestate = {\r\n\t\t\tname: \"startevent\",\r\n\t\t\tindex: 0,\r\n\t\t\tid: Common.uniqueId(),\r\n\t\t\tactiontype: \"Eventlist\",\r\n\t\t\tpeviews: peviews,\r\n\t\t\tgroup: groupName\r\n\t\t};\r\n\r\n\t\tif (peviews == null) {\r\n\t\t\t// CR@CDS: It seems that peviews is never null.\r\n\t\t\tconsole.warn(\"createStartEvent: peviews is null!\");\r\n\t\t}\r\n\r\n\t\treturn pestate;\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Add a new viewModel to each event model in this collection.\r\n\t *\r\n\t */\r\n\taddView: function(viewModel) {\r\n\r\n\t\tconsole.log(\"EventCollection | addView | Adding \" + viewModel.get(\"name\") + \" to events...\");\r\n\r\n\t\tthis.each(function(eventModel) {\r\n\t\t\teventModel.addView(viewModel);\r\n\t\t});\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Handle the renaming of a view.\r\n\t * In each event, find the view that has the name of `oldName` and change to `newName`.\r\n\t *\r\n\t */\r\n\trenameView: function(oldName, newName) {\r\n\r\n\t\tif (oldName == newName) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconsole.log(\"EventCollection | renameView | Renaming view \" + oldName + \" -> \" + newName + \" on all events...\");\r\n\r\n\t\tthis.each(function(eventModel) {\r\n\t\t\teventModel.renameView(oldName, newName);\r\n\t\t});\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Handle the renaming of a group.\r\n\t * In each event model, if the `group` attr matches `oldName`, set to `newName`.\r\n\t *\r\n\t */\r\n\trenameGroup: function(oldName, newName) {\r\n\r\n\t\tif (oldName == newName) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconsole.log(\"EventCollection | renameGroup | Renaming group \" + oldName + \" -> \" + newName + \" on all events...\");\r\n\r\n\t\tthis.each(function(eventModel) {\r\n\t\t\teventModel.renameGroup(oldName, newName);\r\n\t\t});\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Handle the deletion of a view.\r\n\t * In each event model in this collection, remove the view object from \"peviews\" where the viewstate name matches the viewModel's name.\r\n\t *\r\n\t */\r\n\tdeleteView: function(viewModel) {\r\n\r\n\t\tconsole.log(\"EventCollection | deleteView | Removing \" + viewModel.get(\"name\") + \" from events...\");\r\n\r\n\t\tthis.each(function(eventModel) {\r\n\t\t\teventModel.deleteView(viewModel.get(\"name\"));\r\n\t\t});\r\n\t},\r\n\r\n\r\n\tcreateNew: function(attrs) {\r\n\r\n\t\tvar addOptions = {},\r\n\t\t\tstoreChannel = Radio.channel(\"store\"),\r\n\t\t\tviewCollection = storeChannel.request(\"viewCollection\");\r\n\r\n\t\tattrs = attrs || {};\r\n\t\tattrs.id = Common.uniqueId();\r\n\r\n\t\tvar peviews = [];\r\n\r\n\t\t// Get views\r\n\t\tviewCollection.each(function(viewModel) {\r\n\t\t\tpeviews.push({\r\n\t\t\t\tid: Common.uniqueId(),\r\n\t\t\t\tparentid: attrs.id,\r\n\t\t\t\tviewstate: viewModel.attributes,\r\n\t\t\t\tlayerid: \"none\",\r\n\t\t\t\tlayername: \"none\",\r\n\t\t\t\tactions: []\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tattrs.peviews = peviews;\r\n\r\n\t\tif (this.selectedEvent) {\r\n\t\t\taddOptions.at = this.indexOf(this.selectedEvent) + 1;\r\n\t\t}\r\n\r\n\t\tvar newEvent = new EventModel(attrs);\r\n\t\tnewEvent.set(\"name\", newEvent.get(\"name\") + newEvent.get(\"id\"));\r\n\r\n\t\tthis.add(newEvent, addOptions);\r\n\t\treturn newEvent;\r\n\t}\r\n\r\n\r\n});\r\n\r\n\r\nmodule.exports = EventCollection;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./collections/event_collection.js\n// module id = 19\n// module chunks = 0","\"use strict\";\r\n\r\nvar _ = require(\"lodash\"),\r\n\tBb = require(\"backbone\"),\r\n\tCommon = require(\"../components/common\");\r\n\r\n\r\nvar EventModel = Bb.Model.extend({\r\n\r\n\tidAttribute: \"id\",\r\n\r\n\tdefaults: {\r\n\t\tactiontype: \"Eventlist\",\r\n\t\tid: null,\r\n\t\tindex: 0,\r\n\t\tname: \"event\",\r\n\t\tpeviews: [],\r\n\t\tgroup: \"default\"\r\n\t},\r\n\r\n\tvalidate: function(attributes, options) {\r\n\t\tif (attributes.name === \"startevent\") {\r\n\t\t\treturn \"It is not possible to use the name 'startevent' in other events.\";\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Get the \"peviews\" data - layer, view, and actions - for a given view name.\r\n\t * If nothing found, _.head will return `undefined`.\r\n\t *\r\n\t */\r\n\tgetViewData: function(viewName) {\r\n\t\tvar screens = _.filter(this.get(\"peviews\"), function(viewObj) {\r\n\t\t\treturn (viewObj.viewstate.name == viewName);\r\n\t\t});\r\n\t\treturn _.head(screens);\r\n\t},\r\n\r\n\taddView: function(viewModel) {\r\n\r\n\t\tvar peviews = this.get(\"peviews\"),\r\n\t\t\tview = {};\r\n\r\n\t\tif (this.get(\"name\") == \"startevent\") {\r\n\t\t\tview = {\r\n\t\t\t\tviewstate: viewModel.attributes,\r\n\t\t\t\tlayerid: \"none\",\r\n\t\t\t\tlayername: \"none\"\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tview = {\r\n\t\t\t\tid: Common.uniqueId(),\r\n\t\t\t\tviewstate: viewModel.attributes,\r\n\t\t\t\tlayerid: \"none\",\r\n\t\t\t\tlayername: \"none\",\r\n\t\t\t\tactions: []\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tpeviews.push(view);\r\n\t\tthis.set(\"peviews\", peviews);\r\n\t},\r\n\r\n\trenameView: function(oldName, newName) {\r\n\r\n\t\tvar peviews = this.get(\"peviews\");\r\n\r\n\t\t_.each(peviews, function(item, idx) {\r\n\t\t\tif (peviews[idx].viewstate.name == oldName) {\r\n\t\t\t\tpeviews[idx].viewstate.name = newName;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.set(\"peviews\", peviews);\r\n\t},\r\n\r\n\trenameGroup: function(oldName, newName) {\r\n\t\tif (this.get(\"group\") == oldName) {\r\n\t\t\tthis.set(\"group\", newName);\r\n\t\t}\r\n\t},\r\n\r\n\tdeleteView: function(viewName) {\r\n\r\n\t\t// Get copy of our peviews\r\n\t\tvar peviews = this.get(\"peviews\"),\r\n\t\t\tmatchingIdx = null;\r\n\r\n\t\t_.each(peviews, function(item, idx) {\r\n\t\t\tif (item.viewstate.name == viewName) {\r\n\t\t\t\tmatchingIdx = idx;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (matchingIdx !== null) {\r\n\t\t\t// console.log(\"Removing array index \" + matchingIdx + \" for \" + viewName);\r\n\t\t\t// Remove the view data at the found index\r\n\t\t\tpeviews.splice(matchingIdx, 1);\r\n\t\t\tthis.set(\"peviews\", peviews);\r\n\t\t} else {\r\n\t\t\t// Can't find the view in this model's data matching the viewName\r\n\t\t\t// console.log(\"matchingIdx is still null\");\r\n\t\t}\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = EventModel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./models/event_model.js\n// module id = 20\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 21\n// module chunks = 0","\"use strict\";\r\n\r\nvar Bb = require(\"backbone\");\r\n\r\n\r\nvar ProjectModel = Bb.Model.extend({\r\n\r\n\tdefaults: {\r\n\t\tcreatedate: null,\r\n\t\tcreator: null,\r\n\t\tid: null,\r\n\t\tlastdate: null,\r\n\t\tname: null,\r\n\t\tscreenheight: null,\r\n\t\tscreenwidth: null,\r\n\t\ttype: \"Project\",\r\n\t\tstatus: null\r\n\t},\r\n\r\n\tgetName: function() {\r\n\r\n\t\tvar out = \"\";\r\n\r\n\t\tswitch (this.get(\"status\")) {\r\n\t\t\tcase \"newready\":\r\n\t\t\t\tout = \"(New) \" + this.get(\"name\");\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"openready\":\r\n\t\t\t\tout = this.get(\"name\");\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tout = \"(Not ready)\";\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = ProjectModel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./models/project_model.js\n// module id = 22\n// module chunks = 0","\"use strict\";\r\n\r\nvar _ = require(\"lodash\"),\r\n\t$ = require(\"jquery\"),\r\n\tMn = require(\"backbone.marionette\"),\r\n\tRadio = require(\"backbone.radio\"),\r\n\tvex = require(\"vex-js\"),\r\n\tsortable = require(\"html5sortable/dist/html.sortable.js\"),\r\n\tconfig = require(\"../config/present\"),\r\n\tScreensView = require(\"./screens_view\"),\r\n\tGroupListView = require(\"./group_list_view\"),\r\n\tViewEditView = require(\"./view_edit_view\"),\r\n\tGroupEditView = require(\"./group_edit_view\"),\r\n\tEventEditView = require(\"./event_edit_view\"),\r\n\tPresentView = require(\"./present_view\"),\r\n\tmainTmpl = require(\"../templates/present_app_view.html\");\r\n\r\nvex.registerPlugin(require('vex-dialog'));\r\nvex.defaultOptions.className = 'vex-theme-livinglab';\r\n\r\n\r\nvar PresentAppView = Mn.View.extend({\r\n\r\n\ttagName: \"div\",\r\n\tclassName: \"wrapper pure-g\",\r\n\ttemplate: mainTmpl,\r\n\r\n\t_appChannel: null,\r\n\t_dataChannel: null,\r\n\t_storeChannel: null,\r\n\r\n\tregions: {\r\n\t\t\"screens\": \"[data-region=screens]\",\r\n\t\t\"groups\": \"[data-region=groups]\",\r\n\t\t\"props\": \"[data-region=props]\",\r\n\t\t\"present\": \"[data-region=present]\"\r\n\t},\r\n\r\n\tui: {\r\n\t\t\"project_name\": \"[data-ui=project_name]\",\r\n\t\t\"btn_groups_toggle\": \"[data-ui=btn_groups_toggle]\",\r\n\t\t\"btn_add_group\": \"[data-ui=btn_add_group]\"\r\n\t},\r\n\r\n\tevents: {\r\n\t\t\"click @ui.btn_groups_toggle\": \"handleGroupsToggle\",\r\n\t\t\"click @ui.btn_add_group\": \"handleAddGroup\"\r\n\t},\r\n\r\n\tinitialize: function() {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tthis._appChannel = Radio.channel(\"app\");\r\n\t\tthis._dataChannel = Radio.channel(\"data\");\r\n\t\tthis._storeChannel = Radio.channel(\"store\");\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\r\n\t\t// Get reference to project model so we can update the title.\r\n\t\tthis.projectModel = this._storeChannel.request(\"projectModel\");\r\n\t\tthis.listenTo(this.projectModel, \"change\", function(projectModel) {\r\n\t\t\tself.ui.project_name.text(projectModel.getName());\r\n\t\t});\r\n\r\n\t\t// Show error dialogs when they occur\r\n\t\tthis._appChannel.reply(\"ui:error\", function(data) {\r\n\t\t\tvar buttons = _.extend({}, vex.dialog.buttons);\r\n\t\t\tbuttons.YES.text = \"OK\";\r\n\t\t\tvex.dialog.alert({\r\n\t\t\t\tbuttons: [ buttons.YES ],\r\n\t\t\t\tcontentClassName: \"vex-type-error\",\r\n\t\t\t\tmessage: \"Error: \" + data.message\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.listenTo(this._appChannel, \"view:edit\", function(data) {\r\n\t\t\tself.showChildView(\"props\", new ViewEditView({\r\n\t\t\t\tmodel: data.view\r\n\t\t\t}));\r\n\t\t});\r\n\r\n\t\tthis.listenTo(this._appChannel, \"group:edit\", function(data) {\r\n\t\t\tself.showChildView(\"props\", new GroupEditView({\r\n\t\t\t\tmodel: data.group\r\n\t\t\t}));\r\n\t\t});\r\n\r\n\t\tthis.listenTo(this._appChannel, \"event:edit\", function(data) {\r\n\t\t\tself.showChildView(\"props\", new EventEditView({\r\n\t\t\t\tmodel: data.event\r\n\t\t\t}));\r\n\t\t});\r\n\r\n\t\tthis.listenTo(this._appChannel, \"group:confirm_delete\", this.confirmDeleteGroup);\r\n\t\tthis.listenTo(this._appChannel, \"event:confirm_delete\", this.confirmDeleteEvent);\r\n\r\n\t\tvar debounceSortables = _.debounce(this.reloadSortables, 100, { trailing: true });\r\n\t\tthis.listenTo(this._appChannel, \"ui:reload_sortables\", debounceSortables);\r\n\r\n\t\t$(document).on(\"keydown\", function(e) {\r\n\t\t\tif ($(e.target).is(\"input, textarea, select\")) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tswitch (e.which) {\r\n\t\t\t\tcase config.DOM_VK_J:\r\n\t\t\t\t\tself._dispatchChannel.request(\"event:next\");\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase config.DOM_VK_K:\r\n\t\t\t\t\tself._dispatchChannel.request(\"event:prev\");\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tonRender: function() {\r\n\r\n\t\tthis.showChildView(\"present\", new PresentView());\r\n\r\n\t\tthis.showChildView(\"screens\", new ScreensView({\r\n\t\t\tcollection: this._storeChannel.request(\"viewCollection\")\r\n\t\t}));\r\n\r\n\t\tthis.showChildView(\"groups\", new GroupListView({\r\n\t\t\tcollection: this._storeChannel.request(\"groupCollection\")\r\n\t\t}));\r\n\r\n\t\tthis.reloadSortables();\r\n\t},\r\n\r\n\treloadSortables: function() {\r\n\r\n\t\t// console.log(\"present_app_view | reloadSortables\");\r\n\r\n\t\tsortable(\".event-group-list\", \"destroy\");\r\n\t\tvar groupList = sortable(\".event-group-list\", {\r\n\t\t\titems: \".event-group-item\",\r\n\t\t\tplaceholderClass: \"event-group-item sortable-ghost\",\r\n\t\t\tconnectWith: \"groups\",\r\n\t\t});\r\n\r\n\t\tsortable(\".js-event-list\", \"destroy\");\r\n\t\tvar eventList = sortable(\".js-event-list\", {\r\n\t\t\titems: \".event-item\",\r\n\t\t\tconnectWith: \"events\",\r\n\t\t\tplaceholderClass: \"event-item sortable-ghost\"\r\n\t\t});\r\n\r\n\t},\r\n\r\n\thandleGroupsToggle: function(event) {\r\n\t\tvar $el = $(event.target),\r\n\t\t\taction = $el.data(\"action\");\r\n\r\n\t\tthis._appChannel.trigger(\"group:active\", {\r\n\t\t\taction: action\r\n\t\t});\r\n\t},\r\n\r\n\thandleAddGroup: function() {\r\n\t\tthis._dispatchChannel.request(\"group:add\");\r\n\t},\r\n\r\n\tconfirmDeleteGroup: function(data) {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tvar buttons = _.extend({}, vex.dialog.buttons);\r\n\t\tbuttons.YES.text = \"Yes, delete\";\r\n\t\tbuttons.NO.text = \"Cancel\";\r\n\r\n\t\tvex.dialog.confirm({\r\n\t\t\tmessage: 'Are you sure you want to delete this event group? All events inside it will also be deleted!',\r\n\t\t\tbuttons: [ buttons.YES, buttons.NO ],\r\n\t\t\tcallback: function (value) {\r\n\t\t\t\tif (value) {\r\n\t\t\t\t\tself._dispatchChannel.request(\"group:delete\", {\r\n\t\t\t\t\t\tgroup: data.group\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// alert(\"DELETE\");\r\n\t\t\t\t\t// data.group.trigger('destroy', data.group);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\r\n\tconfirmDeleteEvent: function(data) {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tvar buttons = _.extend({}, vex.dialog.buttons);\r\n\t\tbuttons.YES.text = \"Yes, delete\";\r\n\t\tbuttons.NO.text = \"Cancel\";\r\n\r\n\t\tvex.dialog.confirm({\r\n\t\t\tmessage: 'Are you sure you want to delete this event?',\r\n\t\t\tbuttons: [ buttons.YES, buttons.NO ],\r\n\t\t\tcallback: function (value) {\r\n\t\t\t\tif (value) {\r\n\t\t\t\t\tself._dispatchChannel.request(\"event:delete\", {\r\n\t\t\t\t\t\tevent: data.event\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n});\r\n\r\nmodule.exports = PresentAppView;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/present_app_view.js\n// module id = 23\n// module chunks = 0","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.vex = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/*\n * classList.js: Cross-browser full element.classList implementation.\n * 2014-07-23\n *\n * By Eli Grey, http://eligrey.com\n * Public Domain.\n * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n */\n\n/*global self, document, DOMException */\n\n/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js*/\n\n/* Copied from MDN:\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/classList\n */\n\nif (\"document\" in window.self) {\n\n  // Full polyfill for browsers with no classList support\n  // Including IE < Edge missing SVGElement.classList\n  if (!(\"classList\" in document.createElement(\"_\"))\n    || document.createElementNS && !(\"classList\" in document.createElementNS(\"http://www.w3.org/2000/svg\",\"g\"))) {\n\n  (function (view) {\n\n    \"use strict\";\n\n    if (!('Element' in view)) return;\n\n    var\n        classListProp = \"classList\"\n      , protoProp = \"prototype\"\n      , elemCtrProto = view.Element[protoProp]\n      , objCtr = Object\n      , strTrim = String[protoProp].trim || function () {\n        return this.replace(/^\\s+|\\s+$/g, \"\");\n      }\n      , arrIndexOf = Array[protoProp].indexOf || function (item) {\n        var\n            i = 0\n          , len = this.length\n        ;\n        for (; i < len; i++) {\n          if (i in this && this[i] === item) {\n            return i;\n          }\n        }\n        return -1;\n      }\n      // Vendors: please allow content code to instantiate DOMExceptions\n      , DOMEx = function (type, message) {\n        this.name = type;\n        this.code = DOMException[type];\n        this.message = message;\n      }\n      , checkTokenAndGetIndex = function (classList, token) {\n        if (token === \"\") {\n          throw new DOMEx(\n              \"SYNTAX_ERR\"\n            , \"An invalid or illegal string was specified\"\n          );\n        }\n        if (/\\s/.test(token)) {\n          throw new DOMEx(\n              \"INVALID_CHARACTER_ERR\"\n            , \"String contains an invalid character\"\n          );\n        }\n        return arrIndexOf.call(classList, token);\n      }\n      , ClassList = function (elem) {\n        var\n            trimmedClasses = strTrim.call(elem.getAttribute(\"class\") || \"\")\n          , classes = trimmedClasses ? trimmedClasses.split(/\\s+/) : []\n          , i = 0\n          , len = classes.length\n        ;\n        for (; i < len; i++) {\n          this.push(classes[i]);\n        }\n        this._updateClassName = function () {\n          elem.setAttribute(\"class\", this.toString());\n        };\n      }\n      , classListProto = ClassList[protoProp] = []\n      , classListGetter = function () {\n        return new ClassList(this);\n      }\n    ;\n    // Most DOMException implementations don't allow calling DOMException's toString()\n    // on non-DOMExceptions. Error's toString() is sufficient here.\n    DOMEx[protoProp] = Error[protoProp];\n    classListProto.item = function (i) {\n      return this[i] || null;\n    };\n    classListProto.contains = function (token) {\n      token += \"\";\n      return checkTokenAndGetIndex(this, token) !== -1;\n    };\n    classListProto.add = function () {\n      var\n          tokens = arguments\n        , i = 0\n        , l = tokens.length\n        , token\n        , updated = false\n      ;\n      do {\n        token = tokens[i] + \"\";\n        if (checkTokenAndGetIndex(this, token) === -1) {\n          this.push(token);\n          updated = true;\n        }\n      }\n      while (++i < l);\n\n      if (updated) {\n        this._updateClassName();\n      }\n    };\n    classListProto.remove = function () {\n      var\n          tokens = arguments\n        , i = 0\n        , l = tokens.length\n        , token\n        , updated = false\n        , index\n      ;\n      do {\n        token = tokens[i] + \"\";\n        index = checkTokenAndGetIndex(this, token);\n        while (index !== -1) {\n          this.splice(index, 1);\n          updated = true;\n          index = checkTokenAndGetIndex(this, token);\n        }\n      }\n      while (++i < l);\n\n      if (updated) {\n        this._updateClassName();\n      }\n    };\n    classListProto.toggle = function (token, force) {\n      token += \"\";\n\n      var\n          result = this.contains(token)\n        , method = result ?\n          force !== true && \"remove\"\n        :\n          force !== false && \"add\"\n      ;\n\n      if (method) {\n        this[method](token);\n      }\n\n      if (force === true || force === false) {\n        return force;\n      } else {\n        return !result;\n      }\n    };\n    classListProto.toString = function () {\n      return this.join(\" \");\n    };\n\n    if (objCtr.defineProperty) {\n      var classListPropDesc = {\n          get: classListGetter\n        , enumerable: true\n        , configurable: true\n      };\n      try {\n        objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n      } catch (ex) { // IE 8 doesn't support enumerable:true\n        if (ex.number === -0x7FF5EC54) {\n          classListPropDesc.enumerable = false;\n          objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n        }\n      }\n    } else if (objCtr[protoProp].__defineGetter__) {\n      elemCtrProto.__defineGetter__(classListProp, classListGetter);\n    }\n\n    }(window.self));\n\n    } else {\n    // There is full or partial native classList support, so just check if we need\n    // to normalize the add/remove and toggle APIs.\n\n    (function () {\n      \"use strict\";\n\n      var testElement = document.createElement(\"_\");\n\n      testElement.classList.add(\"c1\", \"c2\");\n\n      // Polyfill for IE 10/11 and Firefox <26, where classList.add and\n      // classList.remove exist but support only one argument at a time.\n      if (!testElement.classList.contains(\"c2\")) {\n        var createMethod = function(method) {\n          var original = DOMTokenList.prototype[method];\n\n          DOMTokenList.prototype[method] = function(token) {\n            var i, len = arguments.length;\n\n            for (i = 0; i < len; i++) {\n              token = arguments[i];\n              original.call(this, token);\n            }\n          };\n        };\n        createMethod('add');\n        createMethod('remove');\n      }\n\n      testElement.classList.toggle(\"c3\", false);\n\n      // Polyfill for IE 10 and Firefox <24, where classList.toggle does not\n      // support the second argument.\n      if (testElement.classList.contains(\"c3\")) {\n        var _toggle = DOMTokenList.prototype.toggle;\n\n        DOMTokenList.prototype.toggle = function(token, force) {\n          if (1 in arguments && !this.contains(token) === !force) {\n            return force;\n          } else {\n            return _toggle.call(this, token);\n          }\n        };\n\n      }\n\n      testElement = null;\n    }());\n  }\n}\n\n},{}],2:[function(require,module,exports){\n\n/**\n * Expose `parse`.\n */\n\nmodule.exports = parse;\n\n/**\n * Tests for browser support.\n */\n\nvar innerHTMLBug = false;\nvar bugTestDiv;\nif (typeof document !== 'undefined') {\n  bugTestDiv = document.createElement('div');\n  // Setup\n  bugTestDiv.innerHTML = '  <link/><table></table><a href=\"/a\">a</a><input type=\"checkbox\"/>';\n  // Make sure that link elements get serialized correctly by innerHTML\n  // This requires a wrapper element in IE\n  innerHTMLBug = !bugTestDiv.getElementsByTagName('link').length;\n  bugTestDiv = undefined;\n}\n\n/**\n * Wrap map from jquery.\n */\n\nvar map = {\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  // for script/link/style tags to work in IE6-8, you have to wrap\n  // in a div with a non-whitespace character in front, ha!\n  _default: innerHTMLBug ? [1, 'X<div>', '</div>'] : [0, '', '']\n};\n\nmap.td =\nmap.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option =\nmap.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead =\nmap.tbody =\nmap.colgroup =\nmap.caption =\nmap.tfoot = [1, '<table>', '</table>'];\n\nmap.polyline =\nmap.ellipse =\nmap.polygon =\nmap.circle =\nmap.text =\nmap.line =\nmap.path =\nmap.rect =\nmap.g = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">','</svg>'];\n\n/**\n * Parse `html` and return a DOM Node instance, which could be a TextNode,\n * HTML DOM Node of some kind (<div> for example), or a DocumentFragment\n * instance, depending on the contents of the `html` string.\n *\n * @param {String} html - HTML string to \"domify\"\n * @param {Document} doc - The `document` instance to create the Node for\n * @return {DOMNode} the TextNode, DOM Node, or DocumentFragment instance\n * @api private\n */\n\nfunction parse(html, doc) {\n  if ('string' != typeof html) throw new TypeError('String expected');\n\n  // default to the global `document` object\n  if (!doc) doc = document;\n\n  // tag name\n  var m = /<([\\w:]+)/.exec(html);\n  if (!m) return doc.createTextNode(html);\n\n  html = html.replace(/^\\s+|\\s+$/g, ''); // Remove leading/trailing whitespace\n\n  var tag = m[1];\n\n  // body support\n  if (tag == 'body') {\n    var el = doc.createElement('html');\n    el.innerHTML = html;\n    return el.removeChild(el.lastChild);\n  }\n\n  // wrap map\n  var wrap = map[tag] || map._default;\n  var depth = wrap[0];\n  var prefix = wrap[1];\n  var suffix = wrap[2];\n  var el = doc.createElement('div');\n  el.innerHTML = prefix + html + suffix;\n  while (depth--) el = el.lastChild;\n\n  // one element\n  if (el.firstChild == el.lastChild) {\n    return el.removeChild(el.firstChild);\n  }\n\n  // several elements\n  var fragment = doc.createDocumentFragment();\n  while (el.firstChild) {\n    fragment.appendChild(el.removeChild(el.firstChild));\n  }\n\n  return fragment;\n}\n\n},{}],3:[function(require,module,exports){\n/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n\n},{}],4:[function(require,module,exports){\n// classList polyfill for old browsers\nrequire('classlist-polyfill')\n// Object.assign polyfill\nrequire('es6-object-assign').polyfill()\n\n// String to DOM function\nvar domify = require('domify')\n\n// Use the DOM's HTML parsing to escape any dangerous strings\nvar escapeHtml = function escapeHtml (str) {\n  if (typeof str !== 'undefined') {\n    var div = document.createElement('div')\n    div.appendChild(document.createTextNode(str))\n    return div.innerHTML\n  } else {\n    return ''\n  }\n}\n\n// Utility function to add space-delimited class strings to a DOM element's classList\nvar addClasses = function addClasses (el, classStr) {\n  if (typeof classStr !== 'string' || classStr.length === 0) {\n    return\n  }\n  var classes = classStr.split(' ')\n  for (var i = 0; i < classes.length; i++) {\n    var className = classes[i]\n    if (className.length) {\n      el.classList.add(className)\n    }\n  }\n}\n\n// Detect CSS Animation End Support\n// https://github.com/limonte/sweetalert2/blob/99bd539f85e15ac170f69d35001d12e092ef0054/src/utils/dom.js#L194\nvar animationEndEvent = (function detectAnimationEndEvent () {\n  var el = document.createElement('div')\n  var eventNames = {\n    'WebkitAnimation': 'webkitAnimationEnd',\n    'MozAnimation': 'animationend',\n    'OAnimation': 'oanimationend',\n    'msAnimation': 'MSAnimationEnd',\n    'animation': 'animationend'\n  }\n  for (var i in eventNames) {\n    if (el.style[i] !== undefined) {\n      return eventNames[i]\n    }\n  }\n  return false\n})()\n\n// vex base CSS classes\nvar baseClassNames = {\n  vex: 'vex',\n  content: 'vex-content',\n  overlay: 'vex-overlay',\n  close: 'vex-close',\n  closing: 'vex-closing',\n  open: 'vex-open'\n}\n\n// Private lookup table of all open vex objects, keyed by id\nvar vexes = {}\nvar globalId = 1\n\n// Private boolean to assist the escapeButtonCloses option\nvar isEscapeActive = false\n\n// vex itself is an object that exposes a simple API to open and close vex objects in various ways\nvar vex = {\n  open: function open (opts) {\n    // Check for usage of deprecated options, and log a warning\n    var warnDeprecated = function warnDeprecated (prop) {\n      console.warn('The \"' + prop + '\" property is deprecated in vex 3. Use CSS classes and the appropriate \"ClassName\" options, instead.')\n      console.warn('See http://github.hubspot.com/vex/api/advanced/#options')\n    }\n    if (opts.css) {\n      warnDeprecated('css')\n    }\n    if (opts.overlayCSS) {\n      warnDeprecated('overlayCSS')\n    }\n    if (opts.contentCSS) {\n      warnDeprecated('contentCSS')\n    }\n    if (opts.closeCSS) {\n      warnDeprecated('closeCSS')\n    }\n\n    // The dialog instance\n    var vexInstance = {}\n\n    // Set id\n    vexInstance.id = globalId++\n\n    // Store internally\n    vexes[vexInstance.id] = vexInstance\n\n    // Set state\n    vexInstance.isOpen = true\n\n    // Close function on the vex instance\n    // This is how all API functions should close individual vexes\n    vexInstance.close = function instanceClose () {\n      // Check state\n      if (!this.isOpen) {\n        return true\n      }\n\n      var options = this.options\n\n      // escapeButtonCloses is checked first\n      if (isEscapeActive && !options.escapeButtonCloses) {\n        return false\n      }\n\n      // Allow the user to validate any info or abort the close with the beforeClose callback\n      var shouldClose = (function shouldClose () {\n        // Call before close callback\n        if (options.beforeClose) {\n          return options.beforeClose.call(this)\n        }\n        // Otherwise indicate that it's ok to continue with close\n        return true\n      }.bind(this)())\n\n      // If beforeClose() fails, abort the close\n      if (shouldClose === false) {\n        return false\n      }\n\n      // Update state\n      this.isOpen = false\n\n      // Detect if the content el has any CSS animations defined\n      var style = window.getComputedStyle(this.contentEl)\n      function hasAnimationPre (prefix) {\n        return style.getPropertyValue(prefix + 'animation-name') !== 'none' && style.getPropertyValue(prefix + 'animation-duration') !== '0s'\n      }\n      var hasAnimation = hasAnimationPre('') || hasAnimationPre('-webkit-') || hasAnimationPre('-moz-') || hasAnimationPre('-o-')\n\n      // Define the function that will actually close the instance\n      var close = function close () {\n        if (!this.rootEl.parentNode) {\n          return\n        }\n        // Run once\n        this.rootEl.removeEventListener(animationEndEvent, close)\n        this.overlayEl.removeEventListener(animationEndEvent, close)\n        // Remove from lookup table (prevent memory leaks)\n        delete vexes[this.id]\n        // Remove the dialog from the DOM\n        this.rootEl.parentNode.removeChild(this.rootEl)\n        // Remove the overlay from the DOM\n        this.bodyEl.removeChild(this.overlayEl);\n        // Call after close callback\n        if (options.afterClose) {\n          options.afterClose.call(this)\n        }\n        // Remove styling from the body, if no more vexes are open\n        if (Object.keys(vexes).length === 0) {\n          document.body.classList.remove(baseClassNames.open)\n        }\n      }.bind(this)\n\n      // Close the vex\n      if (animationEndEvent && hasAnimation) {\n        // Setup the end event listener, to remove the el from the DOM\n        this.rootEl.addEventListener(animationEndEvent, close)\n        this.overlayEl.addEventListener(animationEndEvent, close)\n        // Add the closing class to the dialog, showing the close animation\n        this.rootEl.classList.add(baseClassNames.closing)\n        this.overlayEl.classList.add(baseClassNames.closing)\n      } else {\n        close()\n      }\n\n      return true\n    }\n\n    // Allow strings as content\n    if (typeof opts === 'string') {\n      opts = {\n        content: opts\n      }\n    }\n\n    // `content` is unsafe internally, so translate\n    // safe default: HTML-escape the content before passing it through\n    if (opts.unsafeContent && !opts.content) {\n      opts.content = opts.unsafeContent\n    } else if (opts.content) {\n      opts.content = escapeHtml(opts.content)\n    }\n\n    // Store options on instance for future reference\n    var options = vexInstance.options = Object.assign({}, vex.defaultOptions, opts)\n\n    // Get Body Element\n    var bodyEl = vexInstance.bodyEl = document.getElementsByTagName('body')[0];\n\n    // vex root\n    var rootEl = vexInstance.rootEl = document.createElement('div')\n    rootEl.classList.add(baseClassNames.vex)\n    addClasses(rootEl, options.className)\n\n    // Overlay\n    var overlayEl = vexInstance.overlayEl = document.createElement('div')\n    overlayEl.classList.add(baseClassNames.overlay)\n    addClasses(overlayEl, options.overlayClassName)\n    if (options.overlayClosesOnClick) {\n      rootEl.addEventListener('click', function overlayClickListener (e) {\n        if (e.target === rootEl) {\n          vexInstance.close()\n        }\n      })\n    }\n    bodyEl.appendChild(overlayEl)\n\n    // Content\n    var contentEl = vexInstance.contentEl = document.createElement('div')\n    contentEl.classList.add(baseClassNames.content)\n    addClasses(contentEl, options.contentClassName)\n    contentEl.appendChild(options.content instanceof window.Node ? options.content : domify(options.content))\n    rootEl.appendChild(contentEl)\n\n    // Close button\n    if (options.showCloseButton) {\n      var closeEl = vexInstance.closeEl = document.createElement('div')\n      closeEl.classList.add(baseClassNames.close)\n      addClasses(closeEl, options.closeClassName)\n      closeEl.addEventListener('click', vexInstance.close.bind(vexInstance))\n      contentEl.appendChild(closeEl)\n    }\n\n    // Add to DOM\n    document.querySelector(options.appendLocation).appendChild(rootEl)\n\n    // Call after open callback\n    if (options.afterOpen) {\n      options.afterOpen.call(vexInstance)\n    }\n\n    // Apply styling to the body\n    document.body.classList.add(baseClassNames.open)\n\n    // Return the created vex instance\n    return vexInstance\n  },\n\n  // A top-level vex.close function to close dialogs by reference or id\n  close: function close (vexOrId) {\n    var id\n    if (vexOrId.id) {\n      id = vexOrId.id\n    } else if (typeof vexOrId === 'string') {\n      id = vexOrId\n    } else {\n      throw new TypeError('close requires a vex object or id string')\n    }\n    if (!vexes[id]) {\n      return false\n    }\n    return vexes[id].close()\n  },\n\n  // Close the most recently created/opened vex\n  closeTop: function closeTop () {\n    var ids = Object.keys(vexes)\n    if (!ids.length) {\n      return false\n    }\n    return vexes[ids[ids.length - 1]].close()\n  },\n\n  // Close every vex!\n  closeAll: function closeAll () {\n    for (var id in vexes) {\n      this.close(id)\n    }\n    return true\n  },\n\n  // A getter for the internal lookup table\n  getAll: function getAll () {\n    return vexes\n  },\n\n  // A getter for the internal lookup table\n  getById: function getById (id) {\n    return vexes[id]\n  }\n}\n\n// Close top vex on escape\nwindow.addEventListener('keyup', function vexKeyupListener (e) {\n  if (e.keyCode === 27) {\n    isEscapeActive = true\n    vex.closeTop()\n    isEscapeActive = false\n  }\n})\n\n// Close all vexes on history pop state (useful in single page apps)\nwindow.addEventListener('popstate', function () {\n  if (vex.defaultOptions.closeAllOnPopState) {\n    vex.closeAll()\n  }\n})\n\nvex.defaultOptions = {\n  content: '',\n  showCloseButton: true,\n  escapeButtonCloses: true,\n  overlayClosesOnClick: true,\n  appendLocation: 'body',\n  className: '',\n  overlayClassName: '',\n  contentClassName: '',\n  closeClassName: '',\n  closeAllOnPopState: true\n}\n\n// TODO Loading symbols?\n\n// Include escapeHtml function on the library object\nObject.defineProperty(vex, '_escapeHtml', {\n  configurable: false,\n  enumerable: false,\n  writable: false,\n  value: escapeHtml\n})\n\n// Plugin system!\nvex.registerPlugin = function registerPlugin (pluginFn, name) {\n  var plugin = pluginFn(vex)\n  var pluginName = name || plugin.name\n  if (vex[pluginName]) {\n    throw new Error('Plugin ' + name + ' is already registered.')\n  }\n  vex[pluginName] = plugin\n}\n\nmodule.exports = vex\n\n},{\"classlist-polyfill\":1,\"domify\":2,\"es6-object-assign\":3}]},{},[4])(4)\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vex-js/dist/js/vex.js\n// module id = 24\n// module chunks = 0","\"use strict\";\r\n\r\nvar Mn = require(\"backbone.marionette\"),\r\n\tRadio = require(\"backbone.radio\");\r\n\r\n\r\nvar ScreenButton = Mn.View.extend({\r\n\ttagName: \"button\",\r\n\tclassName: \"pure-button button-hollow\",\r\n\ttemplate: _.template(\"<%= name %>\"),\r\n\ttriggers: {\r\n\t\t\"click\": \"view:edit\"\r\n\t},\r\n\tmodelEvents: {\r\n\t\t\"change\": \"render\"\r\n\t}\r\n});\r\n\r\n\r\nvar AddScreenButton = Mn.View.extend({\r\n\ttagName: \"button\",\r\n\tclassName: \"pure-button\",\r\n\ttemplate: _.template(\"<i class='fa fa-fw fa-desktop'></i> Add View\"),\r\n\ttriggers: {\r\n\t\t\"click\": \"view:add\"\r\n\t}\r\n});\r\n\r\n\r\nvar ScreensView = Mn.CollectionView.extend({\r\n\r\n\ttagName: \"div\",\r\n\tclassName: \"button-collection\",\r\n\tchildView: ScreenButton,\r\n\r\n\tchildViewEvents: {\r\n\t\t\"view:add\": \"addView\",\r\n\t\t\"view:edit\": \"editView\"\r\n\t},\r\n\r\n\t_dispatchChannel: null,\r\n\r\n\tinitialize: function() {\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t},\r\n\r\n\tonRender: function() {\r\n\t\t// Add the extra \"Add new screen\" button - doesn't need a model\r\n\t\tthis.addChildView((new AddScreenButton()), this.collection.length);\r\n\t},\r\n\r\n\taddView: function() {\r\n\t\tthis._dispatchChannel.request(\"view:add\");\r\n\t},\r\n\r\n\teditView: function(childView) {\r\n\t\tthis._dispatchChannel.request(\"view:edit\", {\r\n\t\t\tview: childView.model\r\n\t\t});\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = ScreensView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/screens_view.js\n// module id = 25\n// module chunks = 0","\"use strict\";\r\n\r\nvar $ = require(\"jquery\"),\r\n\tMn = require(\"backbone.marionette\"),\r\n\tRadio = require(\"backbone.radio\"),\r\n\tGroupItemView = require(\"./group_item_view\");\r\n\r\n\r\nvar GroupListView = Mn.CollectionView.extend({\r\n\r\n\ttagName: \"ul\",\r\n\tclassName: \"event-group-list\",\r\n\tchildView: GroupItemView,\r\n\ttemplate: _.noop,\r\n\r\n\tevents: {\r\n\t\t\"dom:refresh\": \"onDomRefresh\"\r\n\t},\r\n\r\n\tchildViewEvents: {\r\n\t\t\"group:toggle\": \"toggleGroup\",\r\n\t\t\"group:edit\": \"editGroup\",\r\n\t\t\"event:add\": \"addEvent\",\r\n\t\t\"attach\": \"onChildAttach\"\r\n\t},\r\n\r\n\t_appChannel: null,\r\n\t_dispatchChannel: null,\r\n\r\n\tinitialize: function(options) {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tthis._appChannel = Radio.channel(\"app\");\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t\tthis._viewCollection = options.views || null;\r\n\t\tthis.listenTo(this._appChannel, \"group:active\", this.handleActive);\r\n\r\n\t\tthis.$el.on(\"sortupdate\", function(e) {\r\n\t\t\tself._dispatchChannel.request(\"store:sort\", {\r\n\t\t\t\tlist: \"groups\",\r\n\t\t\t\tsortable: e.detail\r\n\t\t\t});\r\n\t\t});\r\n\t},\r\n\r\n\tonDomRefresh: function() {\r\n\t\tthis._appChannel.trigger(\"ui:reload_sortables\");\r\n\t},\r\n\r\n\tonChildAttach: function() {\r\n\t\tif (this.isAttached() && this.isRendered()) {\r\n\t\t\tthis._appChannel.trigger(\"ui:reload_sortables\");\r\n\t\t}\r\n\t},\r\n\r\n\ttoggleGroup: function(childView) {\r\n\t\tchildView.toggleActive();\r\n\t},\r\n\r\n\teditGroup: function(childView) {\r\n\t\tthis._dispatchChannel.request(\"group:edit\", { group: childView.model });\r\n\t},\r\n\r\n\taddEvent: function(childView) {\r\n\t\tthis._dispatchChannel.request(\"event:add\", { group: childView.model });\r\n\t},\r\n\r\n\thandleActive: function(data) {\r\n\r\n\t\tif (data && data.action && data.target === undefined) {\r\n\r\n\t\t\t// Loop through all children and set as active/inactive\r\n\t\t\tthis.children.each(function(child) {\r\n\t\t\t\tswitch (data.action) {\r\n\t\t\t\t\tcase \"expand\": child.setActive(); break;\r\n\t\t\t\t\tcase \"collapse\": child.setInactive(); break;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = GroupListView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/group_list_view.js\n// module id = 26\n// module chunks = 0","\"use strict\";\r\n\r\nvar Mn = require(\"backbone.marionette\"),\r\n\tRadio = require(\"backbone.radio\"),\r\n\tconfig = require(\"../config/present\"),\r\n\tEventListView = require(\"./event_list_view\"),\r\n\tmainTmpl = require(\"../templates/group_item_view.html\"),\r\n\theaderTmpl = require(\"../templates/event_header_view.html\");\r\n\r\n\r\n/**\r\n * ScreenView item\r\n *\r\n */\r\nvar EventHeaderScreenView = Mn.View.extend({\r\n\ttagName: \"div\",\r\n\ttemplate: _.template(\"<strong><%- name %></strong>\"),\r\n\tclassName: function() {\r\n\t\treturn \"pure-u-1 pure-u-md-1-\" + config.max_views;\r\n\t},\r\n\tmodelEvents: {\r\n\t\t\"change\": \"render\"\r\n\t}\r\n});\r\n\r\n\r\n/**\r\n * View area in the EventHeaderView that manages the list of screens\r\n *\r\n */\r\nvar EventHeaderScreensView = Mn.CollectionView.extend({\r\n\ttagName: \"div\",\r\n\tclassName: \"pure-g\",\r\n\tchildView: EventHeaderScreenView,\r\n\ttemplate: _.noop()\r\n});\r\n\r\n\r\n/**\r\n * Header row for the events list.\r\n * Adds the view info\r\n *\r\n */\r\nvar EventHeaderView = Mn.View.extend({\r\n\r\n\ttagName: \"li\",\r\n\tclassName: \"event-header\",\r\n\ttemplate: headerTmpl,\r\n\r\n\tregions: {\r\n\t\t\"views\": \"[data-region=views]\"\r\n\t},\r\n\r\n\tinitialize: function() {\r\n\t\tvar self = this;\r\n\t\tthis._storeChannel = Radio.channel(\"store\");\r\n\t},\r\n\r\n\tonRender: function() {\r\n\t\tthis.showChildView(\"views\", new EventHeaderScreensView({\r\n\t\t\tcollection: this._storeChannel.request(\"viewCollection\")\r\n\t\t}));\r\n\t}\r\n\r\n});\r\n\r\n\r\nvar GroupItemView = Mn.View.extend({\r\n\r\n\ttagName: \"li\",\r\n\tclassName: \"event-group-item\",\r\n\ttemplate: mainTmpl,\r\n\r\n\tregions: {\r\n\t\t\"header\": \"[data-region=header]\",\r\n\t\t\"events\": \"[data-region=events]\"\r\n\t},\r\n\r\n\tui: {\r\n\t\t\"event_count\": \"[data-ui=event_count]\",\r\n\t\t\"group_name\": \"[data-ui=group_name]\",\r\n\t\t\"btn_edit\": \"[data-ui=btn_edit]\",\r\n\t\t\"btn_add_event\": \"[data-ui=btn_add_event]\"\r\n\t},\r\n\r\n\ttriggers: {\r\n\t\t\"click .event-group-item-header\": \"group:toggle\",\r\n\t\t\"click @ui.btn_edit\": \"group:edit\",\r\n\t\t\"click @ui.btn_add_event\": \"event:add\"\r\n\t},\r\n\r\n\tmodelEvents: {\r\n\t\t\"change\": \"updateUi\"\r\n\t},\r\n\r\n\tinitialize: function() {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tthis._storeChannel = Radio.channel(\"store\");\r\n\r\n\t\tthis.eventListView = new EventListView({\r\n\t\t\t// pass in the whole event collection\r\n\t\t\tcollection: this._storeChannel.request(\"eventCollection\"),\r\n\t\t\t// pass this group model into the list so it knows how to filter the global event colleciton\r\n\t\t\tgroup: this.model\r\n\t\t});\r\n\r\n\t\tvar debounceUpdateUi = _.debounce(this.updateUi, 100, { trailing: true });\r\n\t\tthis.listenTo(this.eventListView, \"add:child remove:child\", debounceUpdateUi);\r\n\r\n\t\tthis.listenTo(this.eventListView.collection, \"update:indexes\", function() {\r\n\t\t\tself.eventListView.reorder();\r\n\t\t\tself.updateUi();\r\n\t\t});\r\n\t},\r\n\r\n\tonRender: function() {\r\n\t\t// console.log(\"GroupItemView | render\");\r\n\t\tthis.$el.attr(\"data-group-model-cid\", this.model.cid);\r\n\t\tthis.showChildView(\"header\", new EventHeaderView());\r\n\t\tthis.showChildView(\"events\", this.eventListView);\r\n\t\tthis.updateUi();\r\n\t},\r\n\r\n\tupdateUi: function() {\r\n\t\t// console.log(\"GroupItemView | updateUi\");\r\n\t\tthis.ui.group_name.text(_.escape(this.model.get(\"name\")));\r\n\t\tthis.ui.event_count.text(this.eventListView.children.length);\r\n\t},\r\n\r\n\tsetActive: function() {\r\n\t\tthis.$el.addClass(\"is-active\");\r\n\t},\r\n\r\n\tsetInactive: function() {\r\n\t\tthis.$el.removeClass(\"is-active\");\r\n\t},\r\n\r\n\ttoggleActive: function() {\r\n\t\tthis.$el.toggleClass(\"is-active\");\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = GroupItemView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/group_item_view.js\n// module id = 27\n// module chunks = 0","\"use strict\";\r\n\r\nvar Mn = require(\"backbone.marionette\"),\r\n\t$ = require(\"jquery\"),\r\n\tRadio = require(\"backbone.radio\"),\r\n\tSortable = require(\"sortablejs\"),\r\n\tEventItemView = require(\"./event_item_view\");\r\n\r\n\r\nvar EmptyItemView = Mn.View.extend({\r\n\ttagName: \"li\",\r\n\tclassName: \"event-item event-item-empty\",\r\n\ttemplate: _.template(\"<p class='text-centre'>No events yet! Drag events here from other groups or click Add Event button above.</p>\"),\r\n});\r\n\r\n\r\n/**\r\n * Main list view for all events.\r\n * Parent view of this should be group item view.\r\n *\r\n */\r\nvar EventListView = Mn.CollectionView.extend({\r\n\r\n\ttagName: \"ul\",\r\n\tclassName: \"event-list js-event-list\",\r\n\tchildView: EventItemView,\r\n\ttemplate: _.noop,\r\n\r\n\tchildViewEvents: {\r\n\t\t\"event:play\": \"playEvent\",\r\n\t\t\"event:start\": \"startEvent\",\r\n\t\t\"event:select\": \"selectEvent\",\r\n\t\t\"attach\": \"onChildAttach\"\r\n\t},\r\n\r\n\t_appChannel: null,\r\n\t_dispatchChannel: null,\r\n\t// _storeChannel: null,\r\n\r\n\tinitialize: function(options) {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tthis._appChannel = Radio.channel(\"app\");\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\r\n\t\tthis.group = options.group;\r\n\t\tthis.listenTo(this.group, \"change\", function(groupModel) {\r\n\t\t\t// console.log(\"EventListView | group change\");\r\n\t\t\tself.$el.attr(\"data-group-model-cid\", groupModel.cid);\r\n\t\t});\r\n\r\n\t\tthis.$el.on(\"sortupdate\", function(e) {\r\n\t\t\tvar groupCid = $(e.detail.endparent).data(\"group-model-cid\"),\r\n\t\t\t\tthisGroupCid = self.group.cid;\r\n\r\n\t\t\tif (groupCid == thisGroupCid) {\r\n\t\t\t\tself._dispatchChannel.request(\"store:sort\", {\r\n\t\t\t\t\tlist: \"events\",\r\n\t\t\t\t\tsortable: e.detail\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tonDomRefresh: function() {\r\n\t\t// console.log(\"EventListView | onDomRefresh\");\r\n\t\tthis._appChannel.trigger(\"ui:reload_sortables\");\r\n\t},\r\n\r\n\tonChildAttach: function() {\r\n\t\t// console.log(\"EventListView | onChildAttach\");\r\n\t\tif (this.isAttached() && this.isRendered()) {\r\n\t\t\tthis._appChannel.trigger(\"ui:reload_sortables\");\r\n\t\t}\r\n\t},\r\n\r\n\tonRender: function() {\r\n\t\t// console.log(\"EventListView onRender\");\r\n\t\tthis.$el.attr(\"data-group-model-cid\", this.group.cid);\r\n\t},\r\n\r\n\t/**\r\n\t * Ensure that only the events for the group that this list is part of is rendered\r\n\t *\r\n\t */\r\n\tfilter: function(model, index, collection) {\r\n\t\treturn (model.get(\"group\") == this.group.get(\"name\"));\r\n\t},\r\n\r\n\t/**\r\n\t * Return the number of children that match the filter.\r\n\t * Minus 1 for the \"header\" child view\r\n\t *\r\n\t */\r\n\tgetChildViewCount: function() {\r\n\t\treturn this.children.length;\r\n\t},\r\n\r\n\tstartEvent: function(childView) {\r\n\t\tthis._dispatchChannel.request(\"event:start\", { event: childView.model });\r\n\t},\r\n\r\n\tplayEvent: function(childView) {\r\n\t\tthis._dispatchChannel.request(\"event:play\", { event: childView.model });\r\n\t},\r\n\r\n\tselectEvent: function(childView) {\r\n\t\tthis._dispatchChannel.request(\"event:select\", { event: childView.model });\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = EventListView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/event_list_view.js\n// module id = 28\n// module chunks = 0","/**!\n * Sortable\n * @author\tRubaXa   <trash@rubaxa.org>\n * @license MIT\n */\n\n(function sortableModule(factory) {\n\t\"use strict\";\n\n\tif (typeof define === \"function\" && define.amd) {\n\t\tdefine(factory);\n\t}\n\telse if (typeof module != \"undefined\" && typeof module.exports != \"undefined\") {\n\t\tmodule.exports = factory();\n\t}\n\telse {\n\t\t/* jshint sub:true */\n\t\twindow[\"Sortable\"] = factory();\n\t}\n})(function sortableFactory() {\n\t\"use strict\";\n\n\tif (typeof window == \"undefined\" || !window.document) {\n\t\treturn function sortableError() {\n\t\t\tthrow new Error(\"Sortable.js requires a window with a document\");\n\t\t};\n\t}\n\n\tvar dragEl,\n\t\tparentEl,\n\t\tghostEl,\n\t\tcloneEl,\n\t\trootEl,\n\t\tnextEl,\n\t\tlastDownEl,\n\n\t\tscrollEl,\n\t\tscrollParentEl,\n\t\tscrollCustomFn,\n\n\t\tlastEl,\n\t\tlastCSS,\n\t\tlastParentCSS,\n\n\t\toldIndex,\n\t\tnewIndex,\n\n\t\tactiveGroup,\n\t\tputSortable,\n\n\t\tautoScroll = {},\n\n\t\ttapEvt,\n\t\ttouchEvt,\n\n\t\tmoved,\n\n\t\t/** @const */\n\t\tR_SPACE = /\\s+/g,\n\t\tR_FLOAT = /left|right|inline/,\n\n\t\texpando = 'Sortable' + (new Date).getTime(),\n\n\t\twin = window,\n\t\tdocument = win.document,\n\t\tparseInt = win.parseInt,\n\n\t\t$ = win.jQuery || win.Zepto,\n\t\tPolymer = win.Polymer,\n\n\t\tcaptureMode = false,\n\n\t\tsupportDraggable = !!('draggable' in document.createElement('div')),\n\t\tsupportCssPointerEvents = (function (el) {\n\t\t\t// false when IE11\n\t\t\tif (!!navigator.userAgent.match(/Trident.*rv[ :]?11\\./)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tel = document.createElement('x');\n\t\t\tel.style.cssText = 'pointer-events:auto';\n\t\t\treturn el.style.pointerEvents === 'auto';\n\t\t})(),\n\n\t\t_silent = false,\n\n\t\tabs = Math.abs,\n\t\tmin = Math.min,\n\n\t\tsavedInputChecked = [],\n\t\ttouchDragOverListeners = [],\n\n\t\t_autoScroll = _throttle(function (/**Event*/evt, /**Object*/options, /**HTMLElement*/rootEl) {\n\t\t\t// Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n\t\t\tif (rootEl && options.scroll) {\n\t\t\t\tvar _this = rootEl[expando],\n\t\t\t\t\tel,\n\t\t\t\t\trect,\n\t\t\t\t\tsens = options.scrollSensitivity,\n\t\t\t\t\tspeed = options.scrollSpeed,\n\n\t\t\t\t\tx = evt.clientX,\n\t\t\t\t\ty = evt.clientY,\n\n\t\t\t\t\twinWidth = window.innerWidth,\n\t\t\t\t\twinHeight = window.innerHeight,\n\n\t\t\t\t\tvx,\n\t\t\t\t\tvy,\n\n\t\t\t\t\tscrollOffsetX,\n\t\t\t\t\tscrollOffsetY\n\t\t\t\t;\n\n\t\t\t\t// Delect scrollEl\n\t\t\t\tif (scrollParentEl !== rootEl) {\n\t\t\t\t\tscrollEl = options.scroll;\n\t\t\t\t\tscrollParentEl = rootEl;\n\t\t\t\t\tscrollCustomFn = options.scrollFn;\n\n\t\t\t\t\tif (scrollEl === true) {\n\t\t\t\t\t\tscrollEl = rootEl;\n\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tif ((scrollEl.offsetWidth < scrollEl.scrollWidth) ||\n\t\t\t\t\t\t\t\t(scrollEl.offsetHeight < scrollEl.scrollHeight)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\t\t} while (scrollEl = scrollEl.parentNode);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (scrollEl) {\n\t\t\t\t\tel = scrollEl;\n\t\t\t\t\trect = scrollEl.getBoundingClientRect();\n\t\t\t\t\tvx = (abs(rect.right - x) <= sens) - (abs(rect.left - x) <= sens);\n\t\t\t\t\tvy = (abs(rect.bottom - y) <= sens) - (abs(rect.top - y) <= sens);\n\t\t\t\t}\n\n\n\t\t\t\tif (!(vx || vy)) {\n\t\t\t\t\tvx = (winWidth - x <= sens) - (x <= sens);\n\t\t\t\t\tvy = (winHeight - y <= sens) - (y <= sens);\n\n\t\t\t\t\t/* jshint expr:true */\n\t\t\t\t\t(vx || vy) && (el = win);\n\t\t\t\t}\n\n\n\t\t\t\tif (autoScroll.vx !== vx || autoScroll.vy !== vy || autoScroll.el !== el) {\n\t\t\t\t\tautoScroll.el = el;\n\t\t\t\t\tautoScroll.vx = vx;\n\t\t\t\t\tautoScroll.vy = vy;\n\n\t\t\t\t\tclearInterval(autoScroll.pid);\n\n\t\t\t\t\tif (el) {\n\t\t\t\t\t\tautoScroll.pid = setInterval(function () {\n\t\t\t\t\t\t\tscrollOffsetY = vy ? vy * speed : 0;\n\t\t\t\t\t\t\tscrollOffsetX = vx ? vx * speed : 0;\n\n\t\t\t\t\t\t\tif ('function' === typeof(scrollCustomFn)) {\n\t\t\t\t\t\t\t\treturn scrollCustomFn.call(_this, scrollOffsetX, scrollOffsetY, evt);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (el === win) {\n\t\t\t\t\t\t\t\twin.scrollTo(win.pageXOffset + scrollOffsetX, win.pageYOffset + scrollOffsetY);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tel.scrollTop += scrollOffsetY;\n\t\t\t\t\t\t\t\tel.scrollLeft += scrollOffsetX;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 24);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, 30),\n\n\t\t_prepareGroup = function (options) {\n\t\t\tfunction toFn(value, pull) {\n\t\t\t\tif (value === void 0 || value === true) {\n\t\t\t\t\tvalue = group.name;\n\t\t\t\t}\n\n\t\t\t\tif (typeof value === 'function') {\n\t\t\t\t\treturn value;\n\t\t\t\t} else {\n\t\t\t\t\treturn function (to, from) {\n\t\t\t\t\t\tvar fromGroup = from.options.group.name;\n\n\t\t\t\t\t\treturn pull\n\t\t\t\t\t\t\t? value\n\t\t\t\t\t\t\t: value && (value.join\n\t\t\t\t\t\t\t\t? value.indexOf(fromGroup) > -1\n\t\t\t\t\t\t\t\t: (fromGroup == value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar group = {};\n\t\t\tvar originalGroup = options.group;\n\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\n\t\t\t\toriginalGroup = {name: originalGroup};\n\t\t\t}\n\n\t\t\tgroup.name = originalGroup.name;\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\n\t\t\tgroup.revertClone = originalGroup.revertClone;\n\n\t\t\toptions.group = group;\n\t\t}\n\t;\n\n\n\t/**\n\t * @class  Sortable\n\t * @param  {HTMLElement}  el\n\t * @param  {Object}       [options]\n\t */\n\tfunction Sortable(el, options) {\n\t\tif (!(el && el.nodeType && el.nodeType === 1)) {\n\t\t\tthrow 'Sortable: `el` must be HTMLElement, and not ' + {}.toString.call(el);\n\t\t}\n\n\t\tthis.el = el; // root element\n\t\tthis.options = options = _extend({}, options);\n\n\n\t\t// Export instance\n\t\tel[expando] = this;\n\n\t\t// Default options\n\t\tvar defaults = {\n\t\t\tgroup: Math.random(),\n\t\t\tsort: true,\n\t\t\tdisabled: false,\n\t\t\tstore: null,\n\t\t\thandle: null,\n\t\t\tscroll: true,\n\t\t\tscrollSensitivity: 30,\n\t\t\tscrollSpeed: 10,\n\t\t\tdraggable: /[uo]l/i.test(el.nodeName) ? 'li' : '>*',\n\t\t\tghostClass: 'sortable-ghost',\n\t\t\tchosenClass: 'sortable-chosen',\n\t\t\tdragClass: 'sortable-drag',\n\t\t\tignore: 'a, img',\n\t\t\tfilter: null,\n\t\t\tpreventOnFilter: true,\n\t\t\tanimation: 0,\n\t\t\tsetData: function (dataTransfer, dragEl) {\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\n\t\t\t},\n\t\t\tdropBubble: false,\n\t\t\tdragoverBubble: false,\n\t\t\tdataIdAttr: 'data-id',\n\t\t\tdelay: 0,\n\t\t\tforceFallback: false,\n\t\t\tfallbackClass: 'sortable-fallback',\n\t\t\tfallbackOnBody: false,\n\t\t\tfallbackTolerance: 0,\n\t\t\tfallbackOffset: {x: 0, y: 0}\n\t\t};\n\n\n\t\t// Set default options\n\t\tfor (var name in defaults) {\n\t\t\t!(name in options) && (options[name] = defaults[name]);\n\t\t}\n\n\t\t_prepareGroup(options);\n\n\t\t// Bind all private methods\n\t\tfor (var fn in this) {\n\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n\t\t\t\tthis[fn] = this[fn].bind(this);\n\t\t\t}\n\t\t}\n\n\t\t// Setup drag mode\n\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n\t\t// Bind events\n\t\t_on(el, 'mousedown', this._onTapStart);\n\t\t_on(el, 'touchstart', this._onTapStart);\n\t\t_on(el, 'pointerdown', this._onTapStart);\n\n\t\tif (this.nativeDraggable) {\n\t\t\t_on(el, 'dragover', this);\n\t\t\t_on(el, 'dragenter', this);\n\t\t}\n\n\t\ttouchDragOverListeners.push(this._onDragOver);\n\n\t\t// Restore sorting\n\t\toptions.store && this.sort(options.store.get(this));\n\t}\n\n\n\tSortable.prototype = /** @lends Sortable.prototype */ {\n\t\tconstructor: Sortable,\n\n\t\t_onTapStart: function (/** Event|TouchEvent */evt) {\n\t\t\tvar _this = this,\n\t\t\t\tel = this.el,\n\t\t\t\toptions = this.options,\n\t\t\t\tpreventOnFilter = options.preventOnFilter,\n\t\t\t\ttype = evt.type,\n\t\t\t\ttouch = evt.touches && evt.touches[0],\n\t\t\t\ttarget = (touch || evt).target,\n\t\t\t\toriginalTarget = evt.target.shadowRoot && (evt.path && evt.path[0]) || target,\n\t\t\t\tfilter = options.filter,\n\t\t\t\tstartIndex;\n\n\t\t\t_saveInputCheckedState(el);\n\n\n\t\t\t// Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\t\t\tif (dragEl) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n\t\t\t\treturn; // only left button or enabled\n\t\t\t}\n\n\n\t\t\ttarget = _closest(target, options.draggable, el);\n\n\t\t\tif (!target) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (lastDownEl === target) {\n\t\t\t\t// Ignoring duplicate `down`\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get the index of the dragged element within its parent\n\t\t\tstartIndex = _index(target, options.draggable);\n\n\t\t\t// Check filter\n\t\t\tif (typeof filter === 'function') {\n\t\t\t\tif (filter.call(this, evt, target, this)) {\n\t\t\t\t\t_dispatchEvent(_this, originalTarget, 'filter', target, el, startIndex);\n\t\t\t\t\tpreventOnFilter && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (filter) {\n\t\t\t\tfilter = filter.split(',').some(function (criteria) {\n\t\t\t\t\tcriteria = _closest(originalTarget, criteria.trim(), el);\n\n\t\t\t\t\tif (criteria) {\n\t\t\t\t\t\t_dispatchEvent(_this, criteria, 'filter', target, el, startIndex);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (filter) {\n\t\t\t\t\tpreventOnFilter && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.handle && !_closest(originalTarget, options.handle, el)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Prepare `dragstart`\n\t\t\tthis._prepareDragStart(evt, touch, target, startIndex);\n\t\t},\n\n\t\t_prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target, /** Number */startIndex) {\n\t\t\tvar _this = this,\n\t\t\t\tel = _this.el,\n\t\t\t\toptions = _this.options,\n\t\t\t\townerDocument = el.ownerDocument,\n\t\t\t\tdragStartFn;\n\n\t\t\tif (target && !dragEl && (target.parentNode === el)) {\n\t\t\t\ttapEvt = evt;\n\n\t\t\t\trootEl = el;\n\t\t\t\tdragEl = target;\n\t\t\t\tparentEl = dragEl.parentNode;\n\t\t\t\tnextEl = dragEl.nextSibling;\n\t\t\t\tlastDownEl = target;\n\t\t\t\tactiveGroup = options.group;\n\t\t\t\toldIndex = startIndex;\n\n\t\t\t\tthis._lastX = (touch || evt).clientX;\n\t\t\t\tthis._lastY = (touch || evt).clientY;\n\n\t\t\t\tdragEl.style['will-change'] = 'transform';\n\n\t\t\t\tdragStartFn = function () {\n\t\t\t\t\t// Delayed drag has been triggered\n\t\t\t\t\t// we can re-enable the events: touchmove/mousemove\n\t\t\t\t\t_this._disableDelayedDrag();\n\n\t\t\t\t\t// Make the element draggable\n\t\t\t\t\tdragEl.draggable = _this.nativeDraggable;\n\n\t\t\t\t\t// Chosen item\n\t\t\t\t\t_toggleClass(dragEl, options.chosenClass, true);\n\n\t\t\t\t\t// Bind the events: dragstart/dragend\n\t\t\t\t\t_this._triggerDragStart(evt, touch);\n\n\t\t\t\t\t// Drag start event\n\t\t\t\t\t_dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, oldIndex);\n\t\t\t\t};\n\n\t\t\t\t// Disable \"draggable\"\n\t\t\t\toptions.ignore.split(',').forEach(function (criteria) {\n\t\t\t\t\t_find(dragEl, criteria.trim(), _disableDraggable);\n\t\t\t\t});\n\n\t\t\t\t_on(ownerDocument, 'mouseup', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'touchend', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'touchcancel', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'pointercancel', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'selectstart', _this);\n\n\t\t\t\tif (options.delay) {\n\t\t\t\t\t// If the user moves the pointer or let go the click or touch\n\t\t\t\t\t// before the delay has been reached:\n\t\t\t\t\t// disable the delayed drag\n\t\t\t\t\t_on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'mousemove', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchmove', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'pointermove', _this._disableDelayedDrag);\n\n\t\t\t\t\t_this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n\t\t\t\t} else {\n\t\t\t\t\tdragStartFn();\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t},\n\n\t\t_disableDelayedDrag: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\tclearTimeout(this._dragStartTimer);\n\t\t\t_off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchend', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'mousemove', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchmove', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'pointermove', this._disableDelayedDrag);\n\t\t},\n\n\t\t_triggerDragStart: function (/** Event */evt, /** Touch */touch) {\n\t\t\ttouch = touch || (evt.pointerType == 'touch' ? evt : null);\n\n\t\t\tif (touch) {\n\t\t\t\t// Touch device support\n\t\t\t\ttapEvt = {\n\t\t\t\t\ttarget: dragEl,\n\t\t\t\t\tclientX: touch.clientX,\n\t\t\t\t\tclientY: touch.clientY\n\t\t\t\t};\n\n\t\t\t\tthis._onDragStart(tapEvt, 'touch');\n\t\t\t}\n\t\t\telse if (!this.nativeDraggable) {\n\t\t\t\tthis._onDragStart(tapEvt, true);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_on(dragEl, 'dragend', this);\n\t\t\t\t_on(rootEl, 'dragstart', this._onDragStart);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (document.selection) {\n\t\t\t\t\t// Timeout neccessary for IE9\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tdocument.selection.empty();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\twindow.getSelection().removeAllRanges();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t}\n\t\t},\n\n\t\t_dragStarted: function () {\n\t\t\tif (rootEl && dragEl) {\n\t\t\t\tvar options = this.options;\n\n\t\t\t\t// Apply effect\n\t\t\t\t_toggleClass(dragEl, options.ghostClass, true);\n\t\t\t\t_toggleClass(dragEl, options.dragClass, false);\n\n\t\t\t\tSortable.active = this;\n\n\t\t\t\t// Drag start event\n\t\t\t\t_dispatchEvent(this, rootEl, 'start', dragEl, rootEl, oldIndex);\n\t\t\t} else {\n\t\t\t\tthis._nulling();\n\t\t\t}\n\t\t},\n\n\t\t_emulateDragOver: function () {\n\t\t\tif (touchEvt) {\n\t\t\t\tif (this._lastX === touchEvt.clientX && this._lastY === touchEvt.clientY) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._lastX = touchEvt.clientX;\n\t\t\t\tthis._lastY = touchEvt.clientY;\n\n\t\t\t\tif (!supportCssPointerEvents) {\n\t\t\t\t\t_css(ghostEl, 'display', 'none');\n\t\t\t\t}\n\n\t\t\t\tvar target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY),\n\t\t\t\t\tparent = target,\n\t\t\t\t\ti = touchDragOverListeners.length;\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (parent[expando]) {\n\t\t\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\t\t\ttouchDragOverListeners[i]({\n\t\t\t\t\t\t\t\t\tclientX: touchEvt.clientX,\n\t\t\t\t\t\t\t\t\tclientY: touchEvt.clientY,\n\t\t\t\t\t\t\t\t\ttarget: target,\n\t\t\t\t\t\t\t\t\trootEl: parent\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttarget = parent; // store last element\n\t\t\t\t\t}\n\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\twhile (parent = parent.parentNode);\n\t\t\t\t}\n\n\t\t\t\tif (!supportCssPointerEvents) {\n\t\t\t\t\t_css(ghostEl, 'display', '');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t_onTouchMove: function (/**TouchEvent*/evt) {\n\t\t\tif (tapEvt) {\n\t\t\t\tvar\toptions = this.options,\n\t\t\t\t\tfallbackTolerance = options.fallbackTolerance,\n\t\t\t\t\tfallbackOffset = options.fallbackOffset,\n\t\t\t\t\ttouch = evt.touches ? evt.touches[0] : evt,\n\t\t\t\t\tdx = (touch.clientX - tapEvt.clientX) + fallbackOffset.x,\n\t\t\t\t\tdy = (touch.clientY - tapEvt.clientY) + fallbackOffset.y,\n\t\t\t\t\ttranslate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';\n\n\t\t\t\t// only set the status to dragging, when we are actually dragging\n\t\t\t\tif (!Sortable.active) {\n\t\t\t\t\tif (fallbackTolerance &&\n\t\t\t\t\t\tmin(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY)) < fallbackTolerance\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._dragStarted();\n\t\t\t\t}\n\n\t\t\t\t// as well as creating the ghost element on the document body\n\t\t\t\tthis._appendGhost();\n\n\t\t\t\tmoved = true;\n\t\t\t\ttouchEvt = touch;\n\n\t\t\t\t_css(ghostEl, 'webkitTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'mozTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'msTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'transform', translate3d);\n\n\t\t\t\tevt.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\t_appendGhost: function () {\n\t\t\tif (!ghostEl) {\n\t\t\t\tvar rect = dragEl.getBoundingClientRect(),\n\t\t\t\t\tcss = _css(dragEl),\n\t\t\t\t\toptions = this.options,\n\t\t\t\t\tghostRect;\n\n\t\t\t\tghostEl = dragEl.cloneNode(true);\n\n\t\t\t\t_toggleClass(ghostEl, options.ghostClass, false);\n\t\t\t\t_toggleClass(ghostEl, options.fallbackClass, true);\n\t\t\t\t_toggleClass(ghostEl, options.dragClass, true);\n\n\t\t\t\t_css(ghostEl, 'top', rect.top - parseInt(css.marginTop, 10));\n\t\t\t\t_css(ghostEl, 'left', rect.left - parseInt(css.marginLeft, 10));\n\t\t\t\t_css(ghostEl, 'width', rect.width);\n\t\t\t\t_css(ghostEl, 'height', rect.height);\n\t\t\t\t_css(ghostEl, 'opacity', '0.8');\n\t\t\t\t_css(ghostEl, 'position', 'fixed');\n\t\t\t\t_css(ghostEl, 'zIndex', '100000');\n\t\t\t\t_css(ghostEl, 'pointerEvents', 'none');\n\n\t\t\t\toptions.fallbackOnBody && document.body.appendChild(ghostEl) || rootEl.appendChild(ghostEl);\n\n\t\t\t\t// Fixing dimensions.\n\t\t\t\tghostRect = ghostEl.getBoundingClientRect();\n\t\t\t\t_css(ghostEl, 'width', rect.width * 2 - ghostRect.width);\n\t\t\t\t_css(ghostEl, 'height', rect.height * 2 - ghostRect.height);\n\t\t\t}\n\t\t},\n\n\t\t_onDragStart: function (/**Event*/evt, /**boolean*/useFallback) {\n\t\t\tvar dataTransfer = evt.dataTransfer,\n\t\t\t\toptions = this.options;\n\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (activeGroup.checkPull(this, this, dragEl, evt)) {\n\t\t\t\tcloneEl = _clone(dragEl);\n\n\t\t\t\tcloneEl.draggable = false;\n\t\t\t\tcloneEl.style['will-change'] = '';\n\n\t\t\t\t_css(cloneEl, 'display', 'none');\n\t\t\t\t_toggleClass(cloneEl, this.options.chosenClass, false);\n\n\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t_dispatchEvent(this, rootEl, 'clone', dragEl);\n\t\t\t}\n\n\t\t\t_toggleClass(dragEl, options.dragClass, true);\n\n\t\t\tif (useFallback) {\n\t\t\t\tif (useFallback === 'touch') {\n\t\t\t\t\t// Bind touch events\n\t\t\t\t\t_on(document, 'touchmove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'touchend', this._onDrop);\n\t\t\t\t\t_on(document, 'touchcancel', this._onDrop);\n\t\t\t\t\t_on(document, 'pointermove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'pointerup', this._onDrop);\n\t\t\t\t} else {\n\t\t\t\t\t// Old brwoser\n\t\t\t\t\t_on(document, 'mousemove', this._onTouchMove);\n\t\t\t\t\t_on(document, 'mouseup', this._onDrop);\n\t\t\t\t}\n\n\t\t\t\tthis._loopId = setInterval(this._emulateDragOver, 50);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (dataTransfer) {\n\t\t\t\t\tdataTransfer.effectAllowed = 'move';\n\t\t\t\t\toptions.setData && options.setData.call(this, dataTransfer, dragEl);\n\t\t\t\t}\n\n\t\t\t\t_on(document, 'drop', this);\n\t\t\t\tsetTimeout(this._dragStarted, 0);\n\t\t\t}\n\t\t},\n\n\t\t_onDragOver: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\ttarget,\n\t\t\t\tdragRect,\n\t\t\t\ttargetRect,\n\t\t\t\trevert,\n\t\t\t\toptions = this.options,\n\t\t\t\tgroup = options.group,\n\t\t\t\tactiveSortable = Sortable.active,\n\t\t\t\tisOwner = (activeGroup === group),\n\t\t\t\tisMovingBetweenSortable = false,\n\t\t\t\tcanSort = options.sort;\n\n\t\t\tif (evt.preventDefault !== void 0) {\n\t\t\t\tevt.preventDefault();\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation();\n\t\t\t}\n\n\t\t\tif (dragEl.animated) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmoved = true;\n\n\t\t\tif (activeSortable && !options.disabled &&\n\t\t\t\t(isOwner\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n\t\t\t\t\t: (\n\t\t\t\t\t\tputSortable === this ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t(activeSortable.lastPullMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&\n\t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t) &&\n\t\t\t\t(evt.rootEl === void 0 || evt.rootEl === this.el) // touch fallback\n\t\t\t) {\n\t\t\t\t// Smart auto-scrolling\n\t\t\t\t_autoScroll(evt, options, this.el);\n\n\t\t\t\tif (_silent) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttarget = _closest(evt.target, options.draggable, el);\n\t\t\t\tdragRect = dragEl.getBoundingClientRect();\n\n\t\t\t\tif (putSortable !== this) {\n\t\t\t\t\tputSortable = this;\n\t\t\t\t\tisMovingBetweenSortable = true;\n\t\t\t\t}\n\n\t\t\t\tif (revert) {\n\t\t\t\t\t_cloneHide(activeSortable, true);\n\t\t\t\t\tparentEl = rootEl; // actualization\n\n\t\t\t\t\tif (cloneEl || nextEl) {\n\t\t\t\t\t\trootEl.insertBefore(dragEl, cloneEl || nextEl);\n\t\t\t\t\t}\n\t\t\t\t\telse if (!canSort) {\n\t\t\t\t\t\trootEl.appendChild(dragEl);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\n\t\t\t\tif ((el.children.length === 0) || (el.children[0] === ghostEl) ||\n\t\t\t\t\t(el === evt.target) && (_ghostIsLast(el, evt))\n\t\t\t\t) {\n\t\t\t\t\t//assign target only if condition is true\n\t\t\t\t\tif (el.children.length !== 0 && el.children[0] !== ghostEl && el === evt.target) {\n\t\t\t\t\t\ttarget = el.lastElementChild;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\tif (target.animated) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetRect = target.getBoundingClientRect();\n\t\t\t\t\t}\n\n\t\t\t\t\t_cloneHide(activeSortable, isOwner);\n\n\t\t\t\t\tif (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt) !== false) {\n\t\t\t\t\t\tif (!dragEl.contains(el)) {\n\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t\tparentEl = el; // actualization\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._animate(dragRect, dragEl);\n\t\t\t\t\t\ttarget && this._animate(targetRect, target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (target && !target.animated && target !== dragEl && (target.parentNode[expando] !== void 0)) {\n\t\t\t\t\tif (lastEl !== target) {\n\t\t\t\t\t\tlastEl = target;\n\t\t\t\t\t\tlastCSS = _css(target);\n\t\t\t\t\t\tlastParentCSS = _css(target.parentNode);\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetRect = target.getBoundingClientRect();\n\n\t\t\t\t\tvar width = targetRect.right - targetRect.left,\n\t\t\t\t\t\theight = targetRect.bottom - targetRect.top,\n\t\t\t\t\t\tfloating = R_FLOAT.test(lastCSS.cssFloat + lastCSS.display)\n\t\t\t\t\t\t\t|| (lastParentCSS.display == 'flex' && lastParentCSS['flex-direction'].indexOf('row') === 0),\n\t\t\t\t\t\tisWide = (target.offsetWidth > dragEl.offsetWidth),\n\t\t\t\t\t\tisLong = (target.offsetHeight > dragEl.offsetHeight),\n\t\t\t\t\t\thalfway = (floating ? (evt.clientX - targetRect.left) / width : (evt.clientY - targetRect.top) / height) > 0.5,\n\t\t\t\t\t\tnextSibling = target.nextElementSibling,\n\t\t\t\t\t\tafter = false\n\t\t\t\t\t;\n\n\t\t\t\t\tif (floating) {\n\t\t\t\t\t\tvar elTop = dragEl.offsetTop,\n\t\t\t\t\t\t\ttgTop = target.offsetTop;\n\n\t\t\t\t\t\tif (elTop === tgTop) {\n\t\t\t\t\t\t\tafter = (target.previousElementSibling === dragEl) && !isWide || halfway && isWide;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (target.previousElementSibling === dragEl || dragEl.previousElementSibling === target) {\n\t\t\t\t\t\t\tafter = (evt.clientY - targetRect.top) / height > 0.5;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tafter = tgTop > elTop;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (!isMovingBetweenSortable) {\n\t\t\t\t\t\tafter = (nextSibling !== dragEl) && !isLong || halfway && isLong;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n\t\t\t\t\tif (moveVector !== false) {\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\n\t\t\t\t\t\t\tafter = (moveVector === 1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_silent = true;\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\n\n\t\t\t\t\t\t_cloneHide(activeSortable, isOwner);\n\n\t\t\t\t\t\tif (!dragEl.contains(el)) {\n\t\t\t\t\t\t\tif (after && !nextSibling) {\n\t\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tparentEl = dragEl.parentNode; // actualization\n\n\t\t\t\t\t\tthis._animate(dragRect, dragEl);\n\t\t\t\t\t\tthis._animate(targetRect, target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_animate: function (prevRect, target) {\n\t\t\tvar ms = this.options.animation;\n\n\t\t\tif (ms) {\n\t\t\t\tvar currentRect = target.getBoundingClientRect();\n\n\t\t\t\tif (prevRect.nodeType === 1) {\n\t\t\t\t\tprevRect = prevRect.getBoundingClientRect();\n\t\t\t\t}\n\n\t\t\t\t_css(target, 'transition', 'none');\n\t\t\t\t_css(target, 'transform', 'translate3d('\n\t\t\t\t\t+ (prevRect.left - currentRect.left) + 'px,'\n\t\t\t\t\t+ (prevRect.top - currentRect.top) + 'px,0)'\n\t\t\t\t);\n\n\t\t\t\ttarget.offsetWidth; // repaint\n\n\t\t\t\t_css(target, 'transition', 'all ' + ms + 'ms');\n\t\t\t\t_css(target, 'transform', 'translate3d(0,0,0)');\n\n\t\t\t\tclearTimeout(target.animated);\n\t\t\t\ttarget.animated = setTimeout(function () {\n\t\t\t\t\t_css(target, 'transition', '');\n\t\t\t\t\t_css(target, 'transform', '');\n\t\t\t\t\ttarget.animated = false;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t},\n\n\t\t_offUpEvents: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\t_off(document, 'touchmove', this._onTouchMove);\n\t\t\t_off(document, 'pointermove', this._onTouchMove);\n\t\t\t_off(ownerDocument, 'mouseup', this._onDrop);\n\t\t\t_off(ownerDocument, 'touchend', this._onDrop);\n\t\t\t_off(ownerDocument, 'pointerup', this._onDrop);\n\t\t\t_off(ownerDocument, 'touchcancel', this._onDrop);\n\t\t\t_off(ownerDocument, 'pointercancel', this._onDrop);\n\t\t\t_off(ownerDocument, 'selectstart', this);\n\t\t},\n\n\t\t_onDrop: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\toptions = this.options;\n\n\t\t\tclearInterval(this._loopId);\n\t\t\tclearInterval(autoScroll.pid);\n\t\t\tclearTimeout(this._dragStartTimer);\n\n\t\t\t// Unbind events\n\t\t\t_off(document, 'mousemove', this._onTouchMove);\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t_off(document, 'drop', this);\n\t\t\t\t_off(el, 'dragstart', this._onDragStart);\n\t\t\t}\n\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (evt) {\n\t\t\t\tif (moved) {\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\n\t\t\t\t}\n\n\t\t\t\tghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n\t\t\t\tif (rootEl === parentEl || Sortable.active.lastPullMode !== 'clone') {\n\t\t\t\t\t// Remove clone\n\t\t\t\t\tcloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n\t\t\t\t}\n\n\t\t\t\tif (dragEl) {\n\t\t\t\t\tif (this.nativeDraggable) {\n\t\t\t\t\t\t_off(dragEl, 'dragend', this);\n\t\t\t\t\t}\n\n\t\t\t\t\t_disableDraggable(dragEl);\n\t\t\t\t\tdragEl.style['will-change'] = '';\n\n\t\t\t\t\t// Remove class's\n\t\t\t\t\t_toggleClass(dragEl, this.options.ghostClass, false);\n\t\t\t\t\t_toggleClass(dragEl, this.options.chosenClass, false);\n\n\t\t\t\t\t// Drag stop event\n\t\t\t\t\t_dispatchEvent(this, rootEl, 'unchoose', dragEl, rootEl, oldIndex);\n\n\t\t\t\t\tif (rootEl !== parentEl) {\n\t\t\t\t\t\tnewIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t// Add event\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'add', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t\t// Remove event\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'remove', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t\t// drag from one list and drop into another\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\n\t\t\t\t\t\t\tnewIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t\t// drag & drop within the same list\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'update', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Sortable.active) {\n\t\t\t\t\t\t/* jshint eqnull:true */\n\t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\n\t\t\t\t\t\t\tnewIndex = oldIndex;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'end', dragEl, rootEl, oldIndex, newIndex);\n\n\t\t\t\t\t\t// Save sorting\n\t\t\t\t\t\tthis.save();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._nulling();\n\t\t},\n\n\t\t_nulling: function() {\n\t\t\trootEl =\n\t\t\tdragEl =\n\t\t\tparentEl =\n\t\t\tghostEl =\n\t\t\tnextEl =\n\t\t\tcloneEl =\n\t\t\tlastDownEl =\n\n\t\t\tscrollEl =\n\t\t\tscrollParentEl =\n\n\t\t\ttapEvt =\n\t\t\ttouchEvt =\n\n\t\t\tmoved =\n\t\t\tnewIndex =\n\n\t\t\tlastEl =\n\t\t\tlastCSS =\n\n\t\t\tputSortable =\n\t\t\tactiveGroup =\n\t\t\tSortable.active = null;\n\n\t\t\tsavedInputChecked.forEach(function (el) {\n\t\t\t\tel.checked = true;\n\t\t\t});\n\t\t\tsavedInputChecked.length = 0;\n\t\t},\n\n\t\thandleEvent: function (/**Event*/evt) {\n\t\t\tswitch (evt.type) {\n\t\t\t\tcase 'drop':\n\t\t\t\tcase 'dragend':\n\t\t\t\t\tthis._onDrop(evt);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'dragover':\n\t\t\t\tcase 'dragenter':\n\t\t\t\t\tif (dragEl) {\n\t\t\t\t\t\tthis._onDragOver(evt);\n\t\t\t\t\t\t_globalDragOver(evt);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'selectstart':\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Serializes the item into an array of string.\n\t\t * @returns {String[]}\n\t\t */\n\t\ttoArray: function () {\n\t\t\tvar order = [],\n\t\t\t\tel,\n\t\t\t\tchildren = this.el.children,\n\t\t\t\ti = 0,\n\t\t\t\tn = children.length,\n\t\t\t\toptions = this.options;\n\n\t\t\tfor (; i < n; i++) {\n\t\t\t\tel = children[i];\n\t\t\t\tif (_closest(el, options.draggable, this.el)) {\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn order;\n\t\t},\n\n\n\t\t/**\n\t\t * Sorts the elements according to the array.\n\t\t * @param  {String[]}  order  order of the items\n\t\t */\n\t\tsort: function (order) {\n\t\t\tvar items = {}, rootEl = this.el;\n\n\t\t\tthis.toArray().forEach(function (id, i) {\n\t\t\t\tvar el = rootEl.children[i];\n\n\t\t\t\tif (_closest(el, this.options.draggable, rootEl)) {\n\t\t\t\t\titems[id] = el;\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\torder.forEach(function (id) {\n\t\t\t\tif (items[id]) {\n\t\t\t\t\trootEl.removeChild(items[id]);\n\t\t\t\t\trootEl.appendChild(items[id]);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * Save the current sorting\n\t\t */\n\t\tsave: function () {\n\t\t\tvar store = this.options.store;\n\t\t\tstore && store.set(this);\n\t\t},\n\n\n\t\t/**\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n\t\t * @param   {HTMLElement}  el\n\t\t * @param   {String}       [selector]  default: `options.draggable`\n\t\t * @returns {HTMLElement|null}\n\t\t */\n\t\tclosest: function (el, selector) {\n\t\t\treturn _closest(el, selector || this.options.draggable, this.el);\n\t\t},\n\n\n\t\t/**\n\t\t * Set/get option\n\t\t * @param   {string} name\n\t\t * @param   {*}      [value]\n\t\t * @returns {*}\n\t\t */\n\t\toption: function (name, value) {\n\t\t\tvar options = this.options;\n\n\t\t\tif (value === void 0) {\n\t\t\t\treturn options[name];\n\t\t\t} else {\n\t\t\t\toptions[name] = value;\n\n\t\t\t\tif (name === 'group') {\n\t\t\t\t\t_prepareGroup(options);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Destroy\n\t\t */\n\t\tdestroy: function () {\n\t\t\tvar el = this.el;\n\n\t\t\tel[expando] = null;\n\n\t\t\t_off(el, 'mousedown', this._onTapStart);\n\t\t\t_off(el, 'touchstart', this._onTapStart);\n\t\t\t_off(el, 'pointerdown', this._onTapStart);\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t_off(el, 'dragover', this);\n\t\t\t\t_off(el, 'dragenter', this);\n\t\t\t}\n\n\t\t\t// Remove draggable attributes\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n\t\t\t\tel.removeAttribute('draggable');\n\t\t\t});\n\n\t\t\ttouchDragOverListeners.splice(touchDragOverListeners.indexOf(this._onDragOver), 1);\n\n\t\t\tthis._onDrop();\n\n\t\t\tthis.el = el = null;\n\t\t}\n\t};\n\n\n\tfunction _cloneHide(sortable, state) {\n\t\tif (sortable.lastPullMode !== 'clone') {\n\t\t\tstate = true;\n\t\t}\n\n\t\tif (cloneEl && (cloneEl.state !== state)) {\n\t\t\t_css(cloneEl, 'display', state ? 'none' : '');\n\n\t\t\tif (!state) {\n\t\t\t\tif (cloneEl.state) {\n\t\t\t\t\tif (sortable.options.group.revertClone) {\n\t\t\t\t\t\trootEl.insertBefore(cloneEl, nextEl);\n\t\t\t\t\t\tsortable._animate(dragEl, cloneEl);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcloneEl.state = state;\n\t\t}\n\t}\n\n\n\tfunction _closest(/**HTMLElement*/el, /**String*/selector, /**HTMLElement*/ctx) {\n\t\tif (el) {\n\t\t\tctx = ctx || document;\n\n\t\t\tdo {\n\t\t\t\tif ((selector === '>*' && el.parentNode === ctx) || _matches(el, selector)) {\n\t\t\t\t\treturn el;\n\t\t\t\t}\n\t\t\t\t/* jshint boss:true */\n\t\t\t} while (el = _getParentOrHost(el));\n\t\t}\n\n\t\treturn null;\n\t}\n\n\n\tfunction _getParentOrHost(el) {\n\t\tvar parent = el.host;\n\n\t\treturn (parent && parent.nodeType) ? parent : el.parentNode;\n\t}\n\n\n\tfunction _globalDragOver(/**Event*/evt) {\n\t\tif (evt.dataTransfer) {\n\t\t\tevt.dataTransfer.dropEffect = 'move';\n\t\t}\n\t\tevt.preventDefault();\n\t}\n\n\n\tfunction _on(el, event, fn) {\n\t\tel.addEventListener(event, fn, captureMode);\n\t}\n\n\n\tfunction _off(el, event, fn) {\n\t\tel.removeEventListener(event, fn, captureMode);\n\t}\n\n\n\tfunction _toggleClass(el, name, state) {\n\t\tif (el) {\n\t\t\tif (el.classList) {\n\t\t\t\tel.classList[state ? 'add' : 'remove'](name);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n\t\t\t\tel.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n\t\t\t}\n\t\t}\n\t}\n\n\n\tfunction _css(el, prop, val) {\n\t\tvar style = el && el.style;\n\n\t\tif (style) {\n\t\t\tif (val === void 0) {\n\t\t\t\tif (document.defaultView && document.defaultView.getComputedStyle) {\n\t\t\t\t\tval = document.defaultView.getComputedStyle(el, '');\n\t\t\t\t}\n\t\t\t\telse if (el.currentStyle) {\n\t\t\t\t\tval = el.currentStyle;\n\t\t\t\t}\n\n\t\t\t\treturn prop === void 0 ? val : val[prop];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!(prop in style)) {\n\t\t\t\t\tprop = '-webkit-' + prop;\n\t\t\t\t}\n\n\t\t\t\tstyle[prop] = val + (typeof val === 'string' ? '' : 'px');\n\t\t\t}\n\t\t}\n\t}\n\n\n\tfunction _find(ctx, tagName, iterator) {\n\t\tif (ctx) {\n\t\t\tvar list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\n\n\t\t\tif (iterator) {\n\t\t\t\tfor (; i < n; i++) {\n\t\t\t\t\titerator(list[i], i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\treturn [];\n\t}\n\n\n\n\tfunction _dispatchEvent(sortable, rootEl, name, targetEl, fromEl, startIndex, newIndex) {\n\t\tsortable = (sortable || rootEl[expando]);\n\n\t\tvar evt = document.createEvent('Event'),\n\t\t\toptions = sortable.options,\n\t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);\n\n\t\tevt.initEvent(name, true, true);\n\n\t\tevt.to = rootEl;\n\t\tevt.from = fromEl || rootEl;\n\t\tevt.item = targetEl || rootEl;\n\t\tevt.clone = cloneEl;\n\n\t\tevt.oldIndex = startIndex;\n\t\tevt.newIndex = newIndex;\n\n\t\trootEl.dispatchEvent(evt);\n\n\t\tif (options[onName]) {\n\t\t\toptions[onName].call(sortable, evt);\n\t\t}\n\t}\n\n\n\tfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt, willInsertAfter) {\n\t\tvar evt,\n\t\t\tsortable = fromEl[expando],\n\t\t\tonMoveFn = sortable.options.onMove,\n\t\t\tretVal;\n\n\t\tevt = document.createEvent('Event');\n\t\tevt.initEvent('move', true, true);\n\n\t\tevt.to = toEl;\n\t\tevt.from = fromEl;\n\t\tevt.dragged = dragEl;\n\t\tevt.draggedRect = dragRect;\n\t\tevt.related = targetEl || toEl;\n\t\tevt.relatedRect = targetRect || toEl.getBoundingClientRect();\n\t\tevt.willInsertAfter = willInsertAfter;\n\n\t\tfromEl.dispatchEvent(evt);\n\n\t\tif (onMoveFn) {\n\t\t\tretVal = onMoveFn.call(sortable, evt, originalEvt);\n\t\t}\n\n\t\treturn retVal;\n\t}\n\n\n\tfunction _disableDraggable(el) {\n\t\tel.draggable = false;\n\t}\n\n\n\tfunction _unsilent() {\n\t\t_silent = false;\n\t}\n\n\n\t/** @returns {HTMLElement|false} */\n\tfunction _ghostIsLast(el, evt) {\n\t\tvar lastEl = el.lastElementChild,\n\t\t\trect = lastEl.getBoundingClientRect();\n\n\t\t// 5 — min delta\n\t\t// abs — нельзя добавлять, а то глюки при наведении сверху\n\t\treturn (evt.clientY - (rect.top + rect.height) > 5) ||\n\t\t\t(evt.clientX - (rect.left + rect.width) > 5);\n\t}\n\n\n\t/**\n\t * Generate id\n\t * @param   {HTMLElement} el\n\t * @returns {String}\n\t * @private\n\t */\n\tfunction _generateId(el) {\n\t\tvar str = el.tagName + el.className + el.src + el.href + el.textContent,\n\t\t\ti = str.length,\n\t\t\tsum = 0;\n\n\t\twhile (i--) {\n\t\t\tsum += str.charCodeAt(i);\n\t\t}\n\n\t\treturn sum.toString(36);\n\t}\n\n\t/**\n\t * Returns the index of an element within its parent for a selected set of\n\t * elements\n\t * @param  {HTMLElement} el\n\t * @param  {selector} selector\n\t * @return {number}\n\t */\n\tfunction _index(el, selector) {\n\t\tvar index = 0;\n\n\t\tif (!el || !el.parentNode) {\n\t\t\treturn -1;\n\t\t}\n\n\t\twhile (el && (el = el.previousElementSibling)) {\n\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && (selector === '>*' || _matches(el, selector))) {\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n\n\tfunction _matches(/**HTMLElement*/el, /**String*/selector) {\n\t\tif (el) {\n\t\t\tselector = selector.split('.');\n\n\t\t\tvar tag = selector.shift().toUpperCase(),\n\t\t\t\tre = new RegExp('\\\\s(' + selector.join('|') + ')(?=\\\\s)', 'g');\n\n\t\t\treturn (\n\t\t\t\t(tag === '' || el.nodeName.toUpperCase() == tag) &&\n\t\t\t\t(!selector.length || ((' ' + el.className + ' ').match(re) || []).length == selector.length)\n\t\t\t);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction _throttle(callback, ms) {\n\t\tvar args, _this;\n\n\t\treturn function () {\n\t\t\tif (args === void 0) {\n\t\t\t\targs = arguments;\n\t\t\t\t_this = this;\n\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (args.length === 1) {\n\t\t\t\t\t\tcallback.call(_this, args[0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback.apply(_this, args);\n\t\t\t\t\t}\n\n\t\t\t\t\targs = void 0;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction _extend(dst, src) {\n\t\tif (dst && src) {\n\t\t\tfor (var key in src) {\n\t\t\t\tif (src.hasOwnProperty(key)) {\n\t\t\t\t\tdst[key] = src[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn dst;\n\t}\n\n\tfunction _clone(el) {\n\t\treturn $\n\t\t\t? $(el).clone(true)[0]\n\t\t\t: (Polymer && Polymer.dom\n\t\t\t\t? Polymer.dom(el).cloneNode(true)\n\t\t\t\t: el.cloneNode(true)\n\t\t\t);\n\t}\n\n\tfunction _saveInputCheckedState(root) {\n\t\tvar inputs = root.getElementsByTagName('input');\n\t\tvar idx = inputs.length;\n\n\t\twhile (idx--) {\n\t\t\tvar el = inputs[idx];\n\t\t\tel.checked && savedInputChecked.push(el);\n\t\t}\n\t}\n\n\t// Fixed #973: \n\t_on(document, 'touchmove', function (evt) {\n\t\tif (Sortable.active) {\n\t\t\tevt.preventDefault();\n\t\t}\n\t});\n\n\ttry {\n\t\twindow.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n\t\t\tget: function () {\n\t\t\t\tcaptureMode = {\n\t\t\t\t\tcapture: false,\n\t\t\t\t\tpassive: false\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\t} catch (err) {}\n\n\t// Export utils\n\tSortable.utils = {\n\t\ton: _on,\n\t\toff: _off,\n\t\tcss: _css,\n\t\tfind: _find,\n\t\tis: function (el, selector) {\n\t\t\treturn !!_closest(el, selector, el);\n\t\t},\n\t\textend: _extend,\n\t\tthrottle: _throttle,\n\t\tclosest: _closest,\n\t\ttoggleClass: _toggleClass,\n\t\tclone: _clone,\n\t\tindex: _index\n\t};\n\n\n\t/**\n\t * Create sortable instance\n\t * @param {HTMLElement}  el\n\t * @param {Object}      [options]\n\t */\n\tSortable.create = function (el, options) {\n\t\treturn new Sortable(el, options);\n\t};\n\n\n\t// Export\n\tSortable.version = '1.6.1';\n\treturn Sortable;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sortablejs/Sortable.js\n// module id = 29\n// module chunks = 0","\"use strict\";\r\n\r\nvar $ = require(\"jquery\"),\r\n\tMn = require(\"backbone.marionette\"),\r\n\tRadio = require(\"backbone.radio\"),\r\n\tconfig = require(\"../config/present\"),\r\n\tmainTmpl = require(\"../templates/event_item_view.html\"),\r\n\tscreenViewTmpl = require(\"../templates/event_item_screen_view.html\");\r\n\r\n\r\nvar EventItemScreenView = Mn.View.extend({\r\n\r\n\ttagName: \"div\",\r\n\ttemplate: screenViewTmpl,\r\n\r\n\tclassName: function() {\r\n\t\treturn \"pure-u-1 pure-u-md-1-\" + config.max_views;\r\n\t},\r\n\r\n\tmodelEvents: {\r\n\t\t\"change\": \"render\"\r\n\t},\r\n\r\n\tinitialize: function(options) {\r\n\t\tthis.event = options.event;\r\n\t\tthis.viewData = this.event.getViewData(this.model.get(\"name\"));\r\n\t},\r\n\r\n\tserializeData: function() {\r\n\r\n\t\tvar data = {\r\n\t\t\tevent: _.clone(this.event.attributes),\r\n\t\t\tview_data: _.clone(this.viewData)\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n});\r\n\r\n\r\nvar EventItemScreensView = Mn.CollectionView.extend({\r\n\r\n\ttagName: \"div\",\r\n\tclassName: \"pure-g\",\r\n\tchildView: EventItemScreenView,\r\n\ttemplate: _.noop(),\r\n\r\n\tchildViewOptions: function() {\r\n\t\treturn {\r\n\t\t\tevent: this.model\r\n\t\t}\r\n\t}\r\n\r\n});\r\n\r\n\r\nvar EventItemView = Mn.View.extend({\r\n\r\n\ttagName: \"li\",\r\n\tclassName: \"event-item\",\r\n\ttemplate: mainTmpl,\r\n\r\n\tregions: {\r\n\t\t\"views\": \"[data-region=views]\"\r\n\t},\r\n\r\n\tui: {\r\n\t\t\"btn_start\": \"[data-ui=btn_start]\",\r\n\t\t\"btn_play\": \"[data-ui=btn_play]\"\r\n\t},\r\n\r\n\ttriggers: {\r\n\t\t\"click @ui.btn_start\": \"event:start\",\r\n\t\t\"click @ui.btn_play\": \"event:play\",\r\n\t\t\"click\": \"event:select\",\r\n\t},\r\n\r\n\tmodelEvents: {\r\n\t\t\"change\": \"render\",\r\n\t\t\"select\": \"setActive\",\r\n\t\t\"deselect\": \"setInactive\"\r\n\t},\r\n\r\n\tinitialize: function() {\r\n\t\tvar self = this;\r\n\t\tthis._storeChannel = Radio.channel(\"store\");\r\n\t},\r\n\r\n\tonRender: function() {\r\n\t\tthis.$el.attr(\"data-event-model-cid\", this.model.cid);\r\n\t\tthis.showChildView(\"views\", new EventItemScreensView({\r\n\t\t\tcollection: this._storeChannel.request(\"viewCollection\"),\r\n\t\t\tmodel: this.model\r\n\t\t}));\r\n\t},\r\n\r\n\tsetActive: function() {\r\n\t\tthis.$el.addClass(\"is-active\");\r\n\t\tif ( ! this.isVisible()) {\r\n\t\t\tthis.scrollIntoView();\r\n\t\t}\r\n\t},\r\n\r\n\tsetInactive: function() {\r\n\t\tthis.$el.removeClass(\"is-active\");\r\n\t},\r\n\r\n\ttoggleActive: function() {\r\n\t\tthis.$el.toggleClass(\"is-active\");\r\n\t},\r\n\r\n\tisVisible: function() {\r\n\t\tvar rect = this.el.getBoundingClientRect();\r\n\t\tvar visible = (\r\n\t\t\trect.top >= 0 &&\r\n\t\t\trect.left >= 0 &&\r\n\t\t\trect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\r\n\t\t\trect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\r\n\t\t);\r\n\t\treturn visible;\r\n\t},\r\n\r\n\tscrollIntoView: function() {\r\n\t\tvar offset = this.$el.offset();\r\n\t\t$('html, body').animate({\r\n\t\t\tscrollTop: offset.top - 50,\r\n\t\t});\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = EventItemView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/event_item_view.js\n// module id = 30\n// module chunks = 0","module.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<div class=\"pure-g\">\\r\\n\t<div class=\"pure-u-1 pure-u-md-1-3\">\\r\\n\t\t<div class=\"pure-g\">\\r\\n\t\t\t<div class=\"pure-u-1 pure-u-lg-1-2\">\\r\\n\t\t\t\t'+\n((__t=( name ))==null?'':__t)+\n'\\r\\n\t\t\t</div>\\r\\n\t\t\t<div class=\"pure-u-1 pure-u-lg-1-2\">\\r\\n\t\t\t\t';\n if (name != \"startevent\") { \n__p+='\\r\\n\t\t\t\t<button class=\"pure-button button-min\" data-ui=\"btn_start\"><i class=\"fa fa-fw fa-eject fa-rotate-90\"></i> Start</button>\\r\\n\t\t\t\t<button class=\"pure-button button-min\" data-ui=\"btn_play\"><i class=\"fa fa-fw fa-play\"></i> Play</button>\\r\\n\t\t\t\t';\n } \n__p+='\\r\\n\t\t\t</div>\\r\\n\t\t</div>\\r\\n\t</div>\\r\\n\t<div class=\"pure-u-1 pure-u-md-2-3\" data-region=\"views\"></div>\\r\\n</div>\\r\\n';\n}\nreturn __p;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./templates/event_item_view.html\n// module id = 31\n// module chunks = 0","module.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<div class=\"event-item-screen-actions\">\\r\\n\t';\n if (view_data && view_data.layername != \"none\") { \n__p+='\\r\\n\t\t<strong>'+\n((__t=( view_data.layername ))==null?'':_.escape(__t))+\n'</strong>\\r\\n\t';\n } \n__p+='\\r\\n\\r\\n\t';\n if (view_data && view_data.actions && view_data.actions.length > 0) { \n__p+='\\r\\n\t<ul>\\r\\n\t\t';\n _.each(view_data.actions, function(action) {\r\n\t\t\tprint(\"<li>\" + _.escape(action.name) + \"</li>\");\r\n\t\t}); \n__p+='\\r\\n\t</ul>\\r\\n\t';\n } \n__p+='\\r\\n\\r\\n</div>';\n}\nreturn __p;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./templates/event_item_screen_view.html\n// module id = 32\n// module chunks = 0","module.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='\\r\\n<div class=\"event-group-item-header\">\\r\\n\t<div class=\"pure-g\">\\r\\n\t\t<div class=\"pure-u-1-24\">\\r\\n\t\t\t<span class=\"when-default\"><i class=\"fa fa-fw fa-lg fa-plus-square-o\"></i></span>\\r\\n\t\t\t<span class=\"when-active\"><i class=\"fa fa-fw fa-lg fa-minus-square-o\"></i></span>\\r\\n\t\t</div>\\r\\n\t\t<div class=\"pure-u-20-24\">\\r\\n\t\t\t<h3 class=\"event-group-item-title\">\\r\\n\t\t\t\t<span data-ui=\"group_name\"></span>\\r\\n\t\t\t</h3>\\r\\n\t\t</div>\\r\\n\t\t<div class=\"pure-u-3-24 text-right\">\\r\\n\t\t\t<p class=\"text-meta remove-bottom\">Events: <span data-ui=\"event_count\"></span></p>\\r\\n\t\t</div>\\r\\n\t</div>\\r\\n</div>\\r\\n\\r\\n<div class=\"event-group-item-body\">\\r\\n\\r\\n\t<div class=\"event-group-item-actions\">\\r\\n\t\t<button class=\"pure-button\" data-ui=\"btn_edit\"><i class=\"fa fa-fw fa-pencil\"></i> Edit Group</button>\\r\\n\t\t<button class=\"pure-button\" data-ui=\"btn_add_event\"><i class=\"fa fa-fw fa-bolt\"></i> Add Event</button>\\r\\n\t</div>\\r\\n\\r\\n\t<ul class=\"event-list\" data-region=\"header\"></ul>\\r\\n\\r\\n\t<div data-region=\"events\"></div>\\r\\n\\r\\n</div>';\n}\nreturn __p;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./templates/group_item_view.html\n// module id = 33\n// module chunks = 0","module.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<div class=\"pure-g\">\\r\\n\t<div class=\"pure-u-1 pure-u-md-1-3\">\\r\\n\t\t<div class=\"pure-g\">\\r\\n\t\t\t<div class=\"pure-u-1 pure-u-lg-1-2\"><strong>Event name</strong></div>\\r\\n\t\t\t<div class=\"pure-u-1 pure-u-lg-1-2\"><strong>Action</strong></div>\\r\\n\t\t</div>\\r\\n\t</div>\\r\\n\t<div class=\"pure-u-1 pure-u-md-2-3\" data-region=\"views\"></div>\\r\\n</div>';\n}\nreturn __p;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./templates/event_header_view.html\n// module id = 34\n// module chunks = 0","\"use strict\";\r\n\r\nvar Mn = require(\"backbone.marionette\"),\r\n\tRadio = require(\"backbone.radio\"),\r\n\tmainTmpl = require(\"../templates/view_edit_view.html\");\r\n\r\n\r\nvar ViewEditView = Mn.View.extend({\r\n\r\n\ttagName: \"div\",\r\n\tclassName: \"panel\",\r\n\ttemplate: mainTmpl,\r\n\r\n\tui: {\r\n\t\t\"btn_save\": \"[data-ui=btn_save]\",\r\n\t\t\"btn_cancel\": \"[data-ui=btn_cancel]\",\r\n\t\t\"btn_delete\": \"[data-ui=btn_delete]\",\r\n\t\t\"input_name\": \"input[name=name]\"\r\n\t},\r\n\r\n\tevents: {\r\n\t\t\"click @ui.btn_cancel\": \"handleCancel\",\r\n\t\t\"click @ui.btn_save\": \"handleSave\",\r\n\t\t\"click @ui.btn_delete\": \"handleDelete\"\r\n\t},\r\n\r\n\tmodelEvents: {\r\n\t\t\"remove\": \"destroy\"\r\n\t},\r\n\r\n\t_dispatchChannel: null,\r\n\t_appChannel: null,\r\n\r\n\tinitialize: function() {\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t\tthis._appChannel = Radio.channel(\"app\");\r\n\t},\r\n\r\n\tonAttach: function() {\r\n\t\tthis.ui.input_name.focus();\r\n\t},\r\n\r\n\thandleCancel: function() {\r\n\t\tthis.destroy();\r\n\t},\r\n\r\n\thandleSave: function() {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\t// Listen once to a viewModel validation error, and just raise it to the UI.\r\n\t\tthis.model.once(\"invalid\", function(viewModel, error) {\r\n\t\t\tself._appChannel.request(\"ui:error\", {\r\n\t\t\t\tmessage: error\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// Update the model with the new name.\r\n\t\t// Because we pass {validate: true}, `update` will be false if the validation fails.\r\n\t\tvar update = this.model.set({ \"name\": this.ui.input_name.val() }, { validate: true });\r\n\r\n\t\tif (update) {\r\n\t\t\t// Only remove the view if the name change is successful.\r\n\t\t\tthis.destroy();\r\n\t\t}\r\n\t},\r\n\r\n\thandleDelete: function() {\r\n\t\tthis._dispatchChannel.request(\"view:delete\", { view: this.model });\r\n\t}\r\n\r\n\r\n});\r\n\r\n\r\nmodule.exports = ViewEditView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/view_edit_view.js\n// module id = 35\n// module chunks = 0","module.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<h3><i class=\"fa fa-desktop\"></i> Edit Screen: '+\n((__t=( name ))==null?'':__t)+\n'</h3>\\r\\n\\r\\n<div class=\"pure-form pure-form-stacked\">\\r\\n\\r\\n\t<div class=\"pure-control-group\">\\r\\n\t\t<div class=\"pure-form-label\">\\r\\n\t\t\t<label for=\"name\">Name</label>\\r\\n\t\t</div>\\r\\n\t\t<div class=\"pure-form-input\">\\r\\n\t\t\t<input name=\"name\" type=\"text\" value=\"'+\n((__t=( name ))==null?'':_.escape(__t))+\n'\">\\r\\n\t\t</div>\\r\\n\t</div>\\r\\n\\r\\n\t<div class=\"button-collection\">\\r\\n\t\t<button class=\"pure-button\" type=\"button\" data-ui=\"btn_save\"><i class=\"fa fa-check\"></i> Save</button>\\r\\n\t\t<button class=\"pure-button button-secondary\" type=\"button\" data-ui=\"btn_cancel\">Cancel</button>\\r\\n\t\t<button class=\"pure-button button-negative\" type=\"button\" data-ui=\"btn_delete\"><i class=\"fa fa-times\"></i> Delete</button>\\r\\n\t</div>\\r\\n\\r\\n</div>\\r\\n';\n}\nreturn __p;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./templates/view_edit_view.html\n// module id = 36\n// module chunks = 0","\"use strict\";\r\n\r\nvar Mn = require(\"backbone.marionette\"),\r\n\tRadio = require(\"backbone.radio\"),\r\n\tconfig = require(\"../config/present\"),\r\n\tmainTmpl = require(\"../templates/group_edit_view.html\");\r\n\r\n\r\nvar GroupEditView = Mn.View.extend({\r\n\r\n\ttagName: \"div\",\r\n\tclassName: \"panel\",\r\n\ttemplate: mainTmpl,\r\n\r\n\tui: {\r\n\t\t\"btn_save\": \"[data-ui=btn_save]\",\r\n\t\t\"btn_cancel\": \"[data-ui=btn_cancel]\",\r\n\t\t\"btn_delete\": \"[data-ui=btn_delete]\",\r\n\t\t\"input_name\": \"input[name=name]\"\r\n\t},\r\n\r\n\tevents: {\r\n\t\t\"click @ui.btn_cancel\": \"handleCancel\",\r\n\t\t\"click @ui.btn_save\": \"handleSave\",\r\n\t\t\"click @ui.btn_delete\": \"handleDelete\",\r\n\t\t\"keypress @ui.input_name\": \"handleEnter\"\r\n\t},\r\n\r\n\tmodelEvents: {\r\n\t\t\"remove\": \"destroy\"\r\n\t},\r\n\r\n\t_dispatchChannel: null,\r\n\t_appChannel: null,\r\n\r\n\tinitialize: function() {\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t\tthis._appChannel = Radio.channel(\"app\");\r\n\t},\r\n\r\n\tonAttach: function() {\r\n\t\tthis.ui.input_name.focus();\r\n\t},\r\n\r\n\thandleCancel: function() {\r\n\t\tthis.destroy();\r\n\t},\r\n\r\n\thandleSave: function() {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\t// Listen once to a groupModel validation error, and just raise it to the UI.\r\n\t\tthis.model.once(\"invalid\", function(groupModel, error) {\r\n\t\t\tself._appChannel.request(\"ui:error\", {\r\n\t\t\t\tmessage: error\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// Update the model with the new name.\r\n\t\t// Because we pass {validate: true}, `update` will be false if the validation fails.\r\n\t\tvar update = this.model.set({ \"name\": this.ui.input_name.val() }, { validate: true });\r\n\r\n\t\tif (update) {\r\n\t\t\t// Only remove the view if the name change is successful.\r\n\t\t\tthis.destroy();\r\n\t\t}\r\n\t},\r\n\r\n\thandleDelete: function() {\r\n\t\tthis._appChannel.trigger(\"group:confirm_delete\", { group: this.model });\r\n\t},\r\n\r\n\thandleEnter: function(e) {\r\n\t\tif (e.which == config.DOM_VK_RETURN) {\r\n\t\t\tthis.handleSave();\r\n\t\t}\r\n\t}\r\n\r\n\r\n});\r\n\r\n\r\nmodule.exports = GroupEditView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/group_edit_view.js\n// module id = 37\n// module chunks = 0","module.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<h3><i class=\"fa fa-object-group\"></i> Edit Event Group: '+\n((__t=( name ))==null?'':__t)+\n'</h3>\\r\\n\\r\\n<div class=\"pure-form pure-form-stacked\">\\r\\n\\r\\n\t<div class=\"pure-control-group\">\\r\\n\t\t<div class=\"pure-form-label\">\\r\\n\t\t\t<label for=\"name\">Name</label>\\r\\n\t\t</div>\\r\\n\t\t<div class=\"pure-form-input\">\\r\\n\t\t\t<input name=\"name\" type=\"text\" value=\"'+\n((__t=( name ))==null?'':_.escape(__t))+\n'\">\\r\\n\t\t</div>\\r\\n\t</div>\\r\\n\\r\\n\t<div class=\"button-collection\">\\r\\n\t\t<button class=\"pure-button\" type=\"button\" data-ui=\"btn_save\"><i class=\"fa fa-check\"></i> Save</button>\\r\\n\t\t<button class=\"pure-button button-secondary\" type=\"button\" data-ui=\"btn_cancel\">Cancel</button>\\r\\n\t\t<button class=\"pure-button button-negative\" type=\"button\" data-ui=\"btn_delete\"><i class=\"fa fa-times\"></i> Delete</button>\\r\\n\t</div>\\r\\n\\r\\n</div>\\r\\n';\n}\nreturn __p;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./templates/group_edit_view.html\n// module id = 38\n// module chunks = 0","\"use strict\";\r\n\r\nvar _ = require(\"lodash\"),\r\n\tBb = require(\"backbone\"),\r\n\tMn = require(\"backbone.marionette\"),\r\n\tRadio = require(\"backbone.radio\"),\r\n\tconfig = require(\"../config/present\"),\r\n\tmainTmpl = require(\"../templates/event_edit_view.html\"),\r\n\tscreenLayerTmpl = require(\"../templates/event_edit_screen_layer.html\");\r\n\r\nvar SelectOptionView = Mn.View.extend({\r\n\ttagName: \"option\",\r\n\ttemplate: _.template(\"<%- layername %>\")\r\n});\r\n\r\n\r\nvar SelectView = Mn.CollectionView.extend({\r\n\r\n\ttagName: \"select\",\r\n\tchildView: SelectOptionView,\r\n\r\n\tchildViewOptions: function(model, index) {\r\n\r\n\t\tvar out = {\r\n\t\t\tattributes: {}\r\n\t\t};\r\n\r\n\t\tvar thisLayerId = this.layer.get(\"layerid\");\r\n\r\n\t\tif (model.get(\"layerid\") == thisLayerId) {\r\n\t\t\tout.attributes.selected = \"selected\";\r\n\t\t}\r\n\r\n\t\tout.attributes.value = model.get(\"layerid\");\r\n\r\n\t\treturn out;\r\n\t},\r\n\r\n\tinitialize: function(options) {\r\n\t\tthis.layer = options.layer;\r\n\t}\r\n\r\n});\r\n\r\n\r\nvar ScreenLayerItemView = Mn.View.extend({\r\n\r\n\ttemplate: screenLayerTmpl,\r\n\r\n\ttagName: \"div\",\r\n\tclassName: \"pure-control-group\",\r\n\r\n\tregions: {\r\n\t\t\"layer_list\": \"[data-region=layer_list]\"\r\n\t},\r\n\r\n\tinitialize: function(options) {\r\n\t\tthis.layers = options.layers;\r\n\t},\r\n\r\n\tonRender: function() {\r\n\t\tthis.showChildView(\"layer_list\", new SelectView({\r\n\t\t\tcollection: this.layers,\r\n\t\t\tlayer: this.layers.findWhere({ layerid: this.model.get(\"layerid\") }),\r\n\t\t\tattributes: {\r\n\t\t\t\t\"name\": this.model.get(\"viewstate\").name,\r\n\t\t\t}\r\n\t\t}));\r\n\t}\r\n\r\n});\r\n\r\n\r\n/**\r\n * List of screens + layers\r\n *\r\n * model: eventModel\r\n * collection: the `peviews` array for the eventModel\r\n *\r\n * Each ItemView is a <select> list of layers for a `peviews` entry of an event.\r\n *\r\n */\r\nvar ScreenLayerListView = Mn.CollectionView.extend({\r\n\r\n\ttemplate: _.noop(),\r\n\tchildView: ScreenLayerItemView,\r\n\r\n\t_storeChannel: null,\r\n\r\n\tinitialize: function() {\r\n\t\tthis._storeChannel = Radio.channel(\"store\");\r\n\t},\r\n\r\n\tchildViewOptions: function(model, index) {\r\n\t\treturn {\r\n\t\t\tmodel: model,\r\n\t\t\tevent: this.model,\r\n\t\t\t// views: this.collection,\r\n\t\t\tlayers: this._storeChannel.request(\"layerCollection\")\r\n\t\t}\r\n\t}\r\n\r\n\r\n});\r\n\r\n\r\nvar EventEditView = Mn.View.extend({\r\n\r\n\ttagName: \"div\",\r\n\tclassName: \"panel\",\r\n\ttemplate: mainTmpl,\r\n\r\n\tregions: {\r\n\t\t\"views\": \"[data-region=views]\"\r\n\t},\r\n\r\n\tui: {\r\n\t\t\"btn_save\": \"[data-ui=btn_save]\",\r\n\t\t\"btn_cancel\": \"[data-ui=btn_cancel]\",\r\n\t\t\"btn_delete\": \"[data-ui=btn_delete]\",\r\n\t\t\"input_name\": \"input[name=name]\"\r\n\t},\r\n\r\n\tevents: {\r\n\t\t\"click @ui.btn_cancel\": \"handleCancel\",\r\n\t\t\"click @ui.btn_save\": \"handleSave\",\r\n\t\t\"click @ui.btn_delete\": \"handleDelete\",\r\n\t\t\"keypress @ui.input_name\": \"handleEnter\"\r\n\t},\r\n\r\n\tmodelEvents: {\r\n\t\t\"remove\": \"destroy\"\r\n\t},\r\n\r\n\t_dispatchChannel: null,\r\n\t_appChannel: null,\r\n\r\n\tinitialize: function() {\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t\tthis._appChannel = Radio.channel(\"app\");\r\n\t\tthis._storeChannel = Radio.channel(\"store\");\r\n\t\tthis.layerCollection = this._storeChannel.request(\"layerCollection\");\r\n\t},\r\n\r\n\tonRender: function() {\r\n\t\tthis.showChildView(\"views\", new ScreenLayerListView({\r\n\t\t\t// Make a collection out of this event's `peviews` array\r\n\t\t\tcollection: new Bb.Collection(this.model.get(\"peviews\")),\r\n\t\t\t// model: the event\r\n\t\t\tmodel: this.model\r\n\t\t}));\r\n\t},\r\n\r\n\tonAttach: function() {\r\n\t\tthis.ui.input_name.focus();\r\n\t},\r\n\r\n\thandleCancel: function() {\r\n\t\tthis._dispatchChannel.request(\"event:select\", { event: null });\r\n\t\tthis.destroy();\r\n\t},\r\n\r\n\thandleSave: function() {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\t// Listen once to a eventModel validation error, and just raise it to the UI.\r\n\t\tthis.listenToOnce(this.model, \"invalid\", function(eventModel, error) {\r\n\t\t\tself._appChannel.request(\"ui:error\", {\r\n\t\t\t\tmessage: error\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.listenToOnce(this.model, \"change\", function(eventModel) {\r\n\t\t\tself._dispatchChannel.request(\"io:send_events\");\r\n\t\t});\r\n\r\n\t\t// Update the model with the new props\r\n\t\t// Because we pass {validate: true}, `update` will be false if the validation fails.\r\n\t\t// var update = this.model.set({ \"name\": this.ui.input_name.val() }, { validate: true });\r\n\r\n\t\tvar attrs = {},\r\n\t\t\tsetOptions = { silent: false };\r\n\r\n\t\tif (this.model.get(\"name\") !== \"startevent\") {\r\n\t\t\tattrs.name = this.ui.input_name.val();\r\n\t\t\tsetOptions.validate = true;\r\n\t\t}\r\n\r\n\t\tvar peviews = this.model.get(\"peviews\");\r\n\r\n\t\t_.each(peviews, function(viewdata, idx) {\r\n\r\n\t\t\tvar viewName = viewdata.viewstate.name,\r\n\t\t\t\t$input = self.$(\"select[name=\" + viewName + \"]\"),\r\n\t\t\t\tselectedLayerId = $input.find(\":selected\").val(),\r\n\t\t\t\tlayerModel = self.layerCollection.findWhere({ layerid: selectedLayerId });\r\n\r\n\t\t\t// console.log(\"peviews index \" + idx + \" and viewname \" + viewName + \" should be set to layername \" + layerModel.get(\"layername\"))\r\n\r\n\t\t\tpeviews[idx].layerid = layerModel.get(\"layerid\");\r\n\t\t\tpeviews[idx].layername = layerModel.get(\"layername\");\r\n\t\t});\r\n\r\n\t\t// We need to quietly unset the peviews.\r\n\t\t// Otherwise, just setting the array again doesn't trigger \"change\" event\r\n\t\tthis.model.unset(\"peviews\", { silent: true });\r\n\r\n\t\tattrs.peviews = peviews;\r\n\r\n\t\tvar update = this.model.set(attrs, setOptions);\r\n\r\n\t\tif (update) {\r\n\t\t\t// Only remove the view if the change is successful.\r\n\t\t\tthis.destroy();\r\n\t\t}\r\n\t},\r\n\r\n\thandleDelete: function() {\r\n\t\tthis._appChannel.trigger(\"event:confirm_delete\", { event: this.model });\r\n\t},\r\n\r\n\r\n\thandleEnter: function(e) {\r\n\t\tif (e.which == config.DOM_VK_RETURN) {\r\n\t\t\tthis.handleSave();\r\n\t\t}\r\n\t}\r\n\r\n\r\n});\r\n\r\n\r\nmodule.exports = EventEditView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/event_edit_view.js\n// module id = 39\n// module chunks = 0","module.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<h3><i class=\"fa fa-bolt\"></i> Edit Event: '+\n((__t=( name ))==null?'':__t)+\n'</h3>\\r\\n\\r\\n<div class=\"pure-form pure-form-stacked\">\\r\\n\\r\\n\t';\n if (name !== \"startevent\") { \n__p+='\\r\\n\t<div class=\"pure-control-group\">\\r\\n\t\t<div class=\"pure-form-label\">\\r\\n\t\t\t<label for=\"name\">Name</label>\\r\\n\t\t</div>\\r\\n\t\t<div class=\"pure-form-input\">\\r\\n\t\t\t<input name=\"name\" type=\"text\" value=\"'+\n((__t=( name ))==null?'':_.escape(__t))+\n'\">\\r\\n\t\t</div>\\r\\n\t</div>\\r\\n\t';\n } \n__p+='\\r\\n\\r\\n\t<div data-region=\"views\"></div>\\r\\n\\r\\n\t<div class=\"button-collection\">\\r\\n\t\t<button class=\"pure-button\" type=\"button\" data-ui=\"btn_save\"><i class=\"fa fa-check\"></i> Save</button>\\r\\n\t\t<button class=\"pure-button button-secondary\" type=\"button\" data-ui=\"btn_cancel\">Cancel</button>\\r\\n\t\t';\n if (name !== \"startevent\") { \n__p+='\\r\\n\t\t<button class=\"pure-button button-negative\" type=\"button\" data-ui=\"btn_delete\"><i class=\"fa fa-times\"></i> Delete</button>\\r\\n\t\t';\n } \n__p+='\\r\\n\t</div>\\r\\n\\r\\n</div>\\r\\n';\n}\nreturn __p;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./templates/event_edit_view.html\n// module id = 40\n// module chunks = 0","module.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<div class=\"pure-form-label\">\\r\\n\t<label for=\"name\">'+\n((__t=( viewstate.name ))==null?'':_.escape(__t))+\n'</label>\\r\\n</div>\\r\\n<div class=\"pure-form-input\">\\r\\n\t<div data-region=\"layer_list\"></div>\\r\\n</div>';\n}\nreturn __p;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./templates/event_edit_screen_layer.html\n// module id = 41\n// module chunks = 0","\"use strict\";\r\n\r\nvar Mn = require(\"backbone.marionette\"),\r\n\tRadio = require(\"backbone.radio\"),\r\n\tmainTmpl = require(\"../templates/present.html\");\r\n\r\n\r\nvar PresentView = Mn.View.extend({\r\n\r\n\ttagName: \"div\",\r\n\tclassName: \"panel panel-sm panel-alt add-bottom\",\r\n\ttemplate: mainTmpl,\r\n\r\n\tui: {\r\n\t\t\"play_mode\": \"[data-ui=play_mode]\",\r\n\t\t\"btn_next_event\": \"[data-ui=btn_next_event]\"\r\n\t},\r\n\r\n\tevents: {\r\n\t\t\"click @ui.play_mode\": \"setPlayMode\",\r\n\t\t\"click @ui.btn_next_event\": \"handleNextEvent\"\r\n\t},\r\n\r\n\t_dispatchChannel: null,\r\n\r\n\tinitialize: function() {\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t},\r\n\r\n\tsetPlayMode: function() {\r\n\t\tvar playMode = this.ui.play_mode.is(\":checked\");\r\n\t\tthis._dispatchChannel.request(\"store:play_mode\", { \"playMode\": playMode });\r\n\t},\r\n\r\n\thandleNextEvent: function() {\r\n\t\tthis._dispatchChannel.request(\"event:next\");\r\n\t}\r\n\r\n});\r\n\r\n\r\nmodule.exports = PresentView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/present_view.js\n// module id = 42\n// module chunks = 0","module.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<h3><i class=\"fa fa-fw fa-rocket\"></i> Present</h3>\\r\\n<div data-region=\"present\">\\r\\n\t<div class=\"pure-form\"><label><input type=\"checkbox\" data-ui=\"play_mode\"> Play mode</label></div>\\r\\n\t<br>\\r\\n\t<button class=\"pure-button size-sm\" data-ui=\"btn_next_event\">Next <i class=\"fa fa-fw fa-step-forward\"></i></button>\\r\\n</div>\\r\\n';\n}\nreturn __p;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./templates/present.html\n// module id = 43\n// module chunks = 0","module.exports = function(obj){\nvar __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\nwith(obj||{}){\n__p+='<div class=\"sidebar pure-u-1 pure-u-sm-1-4 pure-u-xl-1-5\">\\r\\n\\r\\n\t<h2><span data-ui=\"project_name\"></span></h2>\\r\\n\t<div class=\"button-collection add-bottom\">\\r\\n\t\t<button class=\"pure-button size-sm\" data-ui=\"btn_groups_toggle\" data-action=\"expand\"><i class=\"fa fa-fw fa-expand\"></i> Expand all groups</button>\\r\\n\t\t<button class=\"pure-button size-sm\" data-ui=\"btn_groups_toggle\" data-action=\"collapse\"><i class=\"fa fa-fw fa-compress\"></i> Collapse all groups</button>\\r\\n\t</div>\\r\\n\\r\\n\t<div data-region=\"present\"></div>\\r\\n\\r\\n\t<h3><i class=\"fa fa-fw fa-desktop\"></i> Screens</h3>\\r\\n\t<div data-region=\"screens\"></div>\\r\\n\\r\\n\t<br><br>\\r\\n\\r\\n\t<div data-region=\"props\"></div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\"content pure-u-1 pure-u-sm-3-4 pure-u-xl-4-5\">\\r\\n\\r\\n\t<div class=\"add-bottom\">\\r\\n\t\t<h2><i class=\"fa fa-fw fa-bolt\"></i> Events</h2>\\r\\n\t\t<button class=\"pure-button\" data-ui=\"btn_add_group\"><i class=\"fa fa-fw fa-object-group\"></i> Add Group</button>\\r\\n\t</div>\\r\\n\\r\\n\t<div data-region=\"groups\"></div>\\r\\n\\r\\n</div>';\n}\nreturn __p;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./templates/present_app_view.html\n// module id = 44\n// module chunks = 0","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.vexDialog = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\n/**\n * Expose `parse`.\n */\n\nmodule.exports = parse;\n\n/**\n * Tests for browser support.\n */\n\nvar innerHTMLBug = false;\nvar bugTestDiv;\nif (typeof document !== 'undefined') {\n  bugTestDiv = document.createElement('div');\n  // Setup\n  bugTestDiv.innerHTML = '  <link/><table></table><a href=\"/a\">a</a><input type=\"checkbox\"/>';\n  // Make sure that link elements get serialized correctly by innerHTML\n  // This requires a wrapper element in IE\n  innerHTMLBug = !bugTestDiv.getElementsByTagName('link').length;\n  bugTestDiv = undefined;\n}\n\n/**\n * Wrap map from jquery.\n */\n\nvar map = {\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  // for script/link/style tags to work in IE6-8, you have to wrap\n  // in a div with a non-whitespace character in front, ha!\n  _default: innerHTMLBug ? [1, 'X<div>', '</div>'] : [0, '', '']\n};\n\nmap.td =\nmap.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option =\nmap.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead =\nmap.tbody =\nmap.colgroup =\nmap.caption =\nmap.tfoot = [1, '<table>', '</table>'];\n\nmap.polyline =\nmap.ellipse =\nmap.polygon =\nmap.circle =\nmap.text =\nmap.line =\nmap.path =\nmap.rect =\nmap.g = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">','</svg>'];\n\n/**\n * Parse `html` and return a DOM Node instance, which could be a TextNode,\n * HTML DOM Node of some kind (<div> for example), or a DocumentFragment\n * instance, depending on the contents of the `html` string.\n *\n * @param {String} html - HTML string to \"domify\"\n * @param {Document} doc - The `document` instance to create the Node for\n * @return {DOMNode} the TextNode, DOM Node, or DocumentFragment instance\n * @api private\n */\n\nfunction parse(html, doc) {\n  if ('string' != typeof html) throw new TypeError('String expected');\n\n  // default to the global `document` object\n  if (!doc) doc = document;\n\n  // tag name\n  var m = /<([\\w:]+)/.exec(html);\n  if (!m) return doc.createTextNode(html);\n\n  html = html.replace(/^\\s+|\\s+$/g, ''); // Remove leading/trailing whitespace\n\n  var tag = m[1];\n\n  // body support\n  if (tag == 'body') {\n    var el = doc.createElement('html');\n    el.innerHTML = html;\n    return el.removeChild(el.lastChild);\n  }\n\n  // wrap map\n  var wrap = map[tag] || map._default;\n  var depth = wrap[0];\n  var prefix = wrap[1];\n  var suffix = wrap[2];\n  var el = doc.createElement('div');\n  el.innerHTML = prefix + html + suffix;\n  while (depth--) el = el.lastChild;\n\n  // one element\n  if (el.firstChild == el.lastChild) {\n    return el.removeChild(el.firstChild);\n  }\n\n  // several elements\n  var fragment = doc.createDocumentFragment();\n  while (el.firstChild) {\n    fragment.appendChild(el.removeChild(el.firstChild));\n  }\n\n  return fragment;\n}\n\n},{}],2:[function(require,module,exports){\n// get successful control from form and assemble into object\n// http://www.w3.org/TR/html401/interact/forms.html#h-17.13.2\n\n// types which indicate a submit action and are not successful controls\n// these will be ignored\nvar k_r_submitter = /^(?:submit|button|image|reset|file)$/i;\n\n// node names which could be successful controls\nvar k_r_success_contrls = /^(?:input|select|textarea|keygen)/i;\n\n// Matches bracket notation.\nvar brackets = /(\\[[^\\[\\]]*\\])/g;\n\n// serializes form fields\n// @param form MUST be an HTMLForm element\n// @param options is an optional argument to configure the serialization. Default output\n// with no options specified is a url encoded string\n//    - hash: [true | false] Configure the output type. If true, the output will\n//    be a js object.\n//    - serializer: [function] Optional serializer function to override the default one.\n//    The function takes 3 arguments (result, key, value) and should return new result\n//    hash and url encoded str serializers are provided with this module\n//    - disabled: [true | false]. If true serialize disabled fields.\n//    - empty: [true | false]. If true serialize empty fields\nfunction serialize(form, options) {\n    if (typeof options != 'object') {\n        options = { hash: !!options };\n    }\n    else if (options.hash === undefined) {\n        options.hash = true;\n    }\n\n    var result = (options.hash) ? {} : '';\n    var serializer = options.serializer || ((options.hash) ? hash_serializer : str_serialize);\n\n    var elements = form && form.elements ? form.elements : [];\n\n    //Object store each radio and set if it's empty or not\n    var radio_store = Object.create(null);\n\n    for (var i=0 ; i<elements.length ; ++i) {\n        var element = elements[i];\n\n        // ingore disabled fields\n        if ((!options.disabled && element.disabled) || !element.name) {\n            continue;\n        }\n        // ignore anyhting that is not considered a success field\n        if (!k_r_success_contrls.test(element.nodeName) ||\n            k_r_submitter.test(element.type)) {\n            continue;\n        }\n\n        var key = element.name;\n        var val = element.value;\n\n        // we can't just use element.value for checkboxes cause some browsers lie to us\n        // they say \"on\" for value when the box isn't checked\n        if ((element.type === 'checkbox' || element.type === 'radio') && !element.checked) {\n            val = undefined;\n        }\n\n        // If we want empty elements\n        if (options.empty) {\n            // for checkbox\n            if (element.type === 'checkbox' && !element.checked) {\n                val = '';\n            }\n\n            // for radio\n            if (element.type === 'radio') {\n                if (!radio_store[element.name] && !element.checked) {\n                    radio_store[element.name] = false;\n                }\n                else if (element.checked) {\n                    radio_store[element.name] = true;\n                }\n            }\n\n            // if options empty is true, continue only if its radio\n            if (!val && element.type == 'radio') {\n                continue;\n            }\n        }\n        else {\n            // value-less fields are ignored unless options.empty is true\n            if (!val) {\n                continue;\n            }\n        }\n\n        // multi select boxes\n        if (element.type === 'select-multiple') {\n            val = [];\n\n            var selectOptions = element.options;\n            var isSelectedOptions = false;\n            for (var j=0 ; j<selectOptions.length ; ++j) {\n                var option = selectOptions[j];\n                var allowedEmpty = options.empty && !option.value;\n                var hasValue = (option.value || allowedEmpty);\n                if (option.selected && hasValue) {\n                    isSelectedOptions = true;\n\n                    // If using a hash serializer be sure to add the\n                    // correct notation for an array in the multi-select\n                    // context. Here the name attribute on the select element\n                    // might be missing the trailing bracket pair. Both names\n                    // \"foo\" and \"foo[]\" should be arrays.\n                    if (options.hash && key.slice(key.length - 2) !== '[]') {\n                        result = serializer(result, key + '[]', option.value);\n                    }\n                    else {\n                        result = serializer(result, key, option.value);\n                    }\n                }\n            }\n\n            // Serialize if no selected options and options.empty is true\n            if (!isSelectedOptions && options.empty) {\n                result = serializer(result, key, '');\n            }\n\n            continue;\n        }\n\n        result = serializer(result, key, val);\n    }\n\n    // Check for all empty radio buttons and serialize them with key=\"\"\n    if (options.empty) {\n        for (var key in radio_store) {\n            if (!radio_store[key]) {\n                result = serializer(result, key, '');\n            }\n        }\n    }\n\n    return result;\n}\n\nfunction parse_keys(string) {\n    var keys = [];\n    var prefix = /^([^\\[\\]]*)/;\n    var children = new RegExp(brackets);\n    var match = prefix.exec(string);\n\n    if (match[1]) {\n        keys.push(match[1]);\n    }\n\n    while ((match = children.exec(string)) !== null) {\n        keys.push(match[1]);\n    }\n\n    return keys;\n}\n\nfunction hash_assign(result, keys, value) {\n    if (keys.length === 0) {\n        result = value;\n        return result;\n    }\n\n    var key = keys.shift();\n    var between = key.match(/^\\[(.+?)\\]$/);\n\n    if (key === '[]') {\n        result = result || [];\n\n        if (Array.isArray(result)) {\n            result.push(hash_assign(null, keys, value));\n        }\n        else {\n            // This might be the result of bad name attributes like \"[][foo]\",\n            // in this case the original `result` object will already be\n            // assigned to an object literal. Rather than coerce the object to\n            // an array, or cause an exception the attribute \"_values\" is\n            // assigned as an array.\n            result._values = result._values || [];\n            result._values.push(hash_assign(null, keys, value));\n        }\n\n        return result;\n    }\n\n    // Key is an attribute name and can be assigned directly.\n    if (!between) {\n        result[key] = hash_assign(result[key], keys, value);\n    }\n    else {\n        var string = between[1];\n        // +var converts the variable into a number\n        // better than parseInt because it doesn't truncate away trailing\n        // letters and actually fails if whole thing is not a number\n        var index = +string;\n\n        // If the characters between the brackets is not a number it is an\n        // attribute name and can be assigned directly.\n        if (isNaN(index)) {\n            result = result || {};\n            result[string] = hash_assign(result[string], keys, value);\n        }\n        else {\n            result = result || [];\n            result[index] = hash_assign(result[index], keys, value);\n        }\n    }\n\n    return result;\n}\n\n// Object/hash encoding serializer.\nfunction hash_serializer(result, key, value) {\n    var matches = key.match(brackets);\n\n    // Has brackets? Use the recursive assignment function to walk the keys,\n    // construct any missing objects in the result tree and make the assignment\n    // at the end of the chain.\n    if (matches) {\n        var keys = parse_keys(key);\n        hash_assign(result, keys, value);\n    }\n    else {\n        // Non bracket notation can make assignments directly.\n        var existing = result[key];\n\n        // If the value has been assigned already (for instance when a radio and\n        // a checkbox have the same name attribute) convert the previous value\n        // into an array before pushing into it.\n        //\n        // NOTE: If this requirement were removed all hash creation and\n        // assignment could go through `hash_assign`.\n        if (existing) {\n            if (!Array.isArray(existing)) {\n                result[key] = [ existing ];\n            }\n\n            result[key].push(value);\n        }\n        else {\n            result[key] = value;\n        }\n    }\n\n    return result;\n}\n\n// urlform encoding serializer\nfunction str_serialize(result, key, value) {\n    // encode newlines as \\r\\n cause the html spec says so\n    value = value.replace(/(\\r)?\\n/g, '\\r\\n');\n    value = encodeURIComponent(value);\n\n    // spaces should be '+' rather than '%20'.\n    value = value.replace(/%20/g, '+');\n    return result + (result ? '&' : '') + encodeURIComponent(key) + '=' + value;\n}\n\nmodule.exports = serialize;\n\n},{}],3:[function(require,module,exports){\nvar domify = require('domify')\r\nvar serialize = require('form-serialize')\r\n\r\n// Build DOM elements for the structure of the dialog\r\nvar buildDialogForm = function buildDialogForm (options) {\r\n  var form = document.createElement('form')\r\n  form.classList.add('vex-dialog-form')\r\n\r\n  var message = document.createElement('div')\r\n  message.classList.add('vex-dialog-message')\r\n  message.appendChild(options.message instanceof window.Node ? options.message : domify(options.message))\r\n\r\n  var input = document.createElement('div')\r\n  input.classList.add('vex-dialog-input')\r\n  input.appendChild(options.input instanceof window.Node ? options.input : domify(options.input))\r\n\r\n  form.appendChild(message)\r\n  form.appendChild(input)\r\n\r\n  return form\r\n}\r\n\r\n// Take an array of buttons (see the default buttons below) and turn them into DOM elements\r\nvar buttonsToDOM = function buttonsToDOM (buttons) {\r\n  var domButtons = document.createElement('div')\r\n  domButtons.classList.add('vex-dialog-buttons')\r\n\r\n  for (var i = 0; i < buttons.length; i++) {\r\n    var button = buttons[i]\r\n    var domButton = document.createElement('button')\r\n    domButton.type = button.type\r\n    domButton.textContent = button.text\r\n    domButton.className = button.className\r\n    domButton.classList.add('vex-dialog-button')\r\n    if (i === 0) {\r\n      domButton.classList.add('vex-first')\r\n    } else if (i === buttons.length - 1) {\r\n      domButton.classList.add('vex-last')\r\n    }\r\n    // Attach click listener to button with closure\r\n    (function (button) {\r\n      domButton.addEventListener('click', function (e) {\r\n        if (button.click) {\r\n          button.click.call(this, e)\r\n        }\r\n      }.bind(this))\r\n    }.bind(this)(button))\r\n\r\n    domButtons.appendChild(domButton)\r\n  }\r\n\r\n  return domButtons\r\n}\r\n\r\nvar plugin = function plugin (vex) {\r\n  // Define the API first\r\n  var dialog = {\r\n    // Plugin name\r\n    name: 'dialog',\r\n\r\n    // Open\r\n    open: function open (opts) {\r\n      var options = Object.assign({}, this.defaultOptions, opts)\r\n\r\n      // `message` is unsafe internally, so translate\r\n      // safe default: HTML-escape the message before passing it through\r\n      if (options.unsafeMessage && !options.message) {\r\n        options.message = options.unsafeMessage\r\n      } else if (options.message) {\r\n        options.message = vex._escapeHtml(options.message)\r\n      }\r\n\r\n      // Build the form from the options\r\n      var form = options.unsafeContent = buildDialogForm(options)\r\n\r\n      // Open the dialog\r\n      var dialogInstance = vex.open(options)\r\n\r\n      // Quick comment - these options and appending buttons and everything\r\n      // would preferably be done _before_ opening the dialog. However, since\r\n      // they rely on the context of the vex instance, we have to do them\r\n      // after. A potential future fix would be to differentiate between\r\n      // a \"created\" vex instance and an \"opened\" vex instance, so any actions\r\n      // that rely on the specific context of the instance can do their stuff\r\n      // before opening the dialog on the page.\r\n\r\n      // Override the before close callback to also pass the value of the form\r\n      var beforeClose = options.beforeClose && options.beforeClose.bind(dialogInstance)\r\n      dialogInstance.options.beforeClose = function dialogBeforeClose () {\r\n        // Only call the callback once - when the validation in beforeClose, if present, is true\r\n        var shouldClose = beforeClose ? beforeClose() : true\r\n        if (shouldClose) {\r\n          options.callback(this.value || false)\r\n        }\r\n        // Return the result of beforeClose() to vex\r\n        return shouldClose\r\n      }.bind(dialogInstance)\r\n\r\n      // Append buttons to form with correct context\r\n      form.appendChild(buttonsToDOM.call(dialogInstance, options.buttons))\r\n\r\n      // Attach form to instance\r\n      dialogInstance.form = form\r\n\r\n      // Add submit listener to form\r\n      form.addEventListener('submit', options.onSubmit.bind(dialogInstance))\r\n\r\n      // Optionally focus the first input in the form\r\n      if (options.focusFirstInput) {\r\n        var el = dialogInstance.contentEl.querySelector('button, input, select, textarea')\r\n        if (el) {\r\n          el.focus()\r\n        }\r\n      }\r\n\r\n      // For chaining\r\n      return dialogInstance\r\n    },\r\n\r\n    // Alert\r\n    alert: function (options) {\r\n      // Allow string as message\r\n      if (typeof options === 'string') {\r\n        options = {\r\n          message: options\r\n        }\r\n      }\r\n      options = Object.assign({}, this.defaultOptions, this.defaultAlertOptions, options)\r\n      return this.open(options)\r\n    },\r\n\r\n    // Confirm\r\n    confirm: function (options) {\r\n      if (typeof options !== 'object' || typeof options.callback !== 'function') {\r\n        throw new Error('dialog.confirm(options) requires options.callback.')\r\n      }\r\n      options = Object.assign({}, this.defaultOptions, this.defaultConfirmOptions, options)\r\n      return this.open(options)\r\n    },\r\n\r\n    // Prompt\r\n    prompt: function (options) {\r\n      if (typeof options !== 'object' || typeof options.callback !== 'function') {\r\n        throw new Error('dialog.prompt(options) requires options.callback.')\r\n      }\r\n      var defaults = Object.assign({}, this.defaultOptions, this.defaultPromptOptions)\r\n      var dynamicDefaults = {\r\n        unsafeMessage: '<label for=\"vex\">' + vex._escapeHtml(options.label || defaults.label) + '</label>',\r\n        input: '<input name=\"vex\" type=\"text\" class=\"vex-dialog-prompt-input\" placeholder=\"' + vex._escapeHtml(options.placeholder || defaults.placeholder) + '\" value=\"' + vex._escapeHtml(options.value || defaults.value) + '\" />'\r\n      }\r\n      options = Object.assign(defaults, dynamicDefaults, options)\r\n      // Pluck the value of the \"vex\" input field as the return value for prompt's callback\r\n      // More closely mimics \"window.prompt\" in that a single string is returned\r\n      var callback = options.callback\r\n      options.callback = function promptCallback (value) {\r\n        if (typeof value === 'object') {\r\n          var keys = Object.keys(value)\r\n          value = keys.length ? value[keys[0]] : ''\r\n        }\r\n        callback(value)\r\n      }\r\n      return this.open(options)\r\n    }\r\n  }\r\n\r\n  // Now define any additional data that's not the direct dialog API\r\n  dialog.buttons = {\r\n    YES: {\r\n      text: 'OK',\r\n      type: 'submit',\r\n      className: 'vex-dialog-button-primary',\r\n      click: function yesClick () {\r\n        this.value = true\r\n      }\r\n    },\r\n\r\n    NO: {\r\n      text: 'Cancel',\r\n      type: 'button',\r\n      className: 'vex-dialog-button-secondary',\r\n      click: function noClick () {\r\n        this.value = false\r\n        this.close()\r\n      }\r\n    }\r\n  }\r\n\r\n  dialog.defaultOptions = {\r\n    callback: function () {},\r\n    afterOpen: function () {},\r\n    message: '',\r\n    input: '',\r\n    buttons: [\r\n      dialog.buttons.YES,\r\n      dialog.buttons.NO\r\n    ],\r\n    showCloseButton: false,\r\n    onSubmit: function onDialogSubmit (e) {\r\n      e.preventDefault()\r\n      if (this.options.input) {\r\n        this.value = serialize(this.form, { hash: true })\r\n      }\r\n      return this.close()\r\n    },\r\n    focusFirstInput: true\r\n  }\r\n\r\n  dialog.defaultAlertOptions = {\r\n    buttons: [\r\n      dialog.buttons.YES\r\n    ]\r\n  }\r\n\r\n  dialog.defaultPromptOptions = {\r\n    label: 'Prompt:',\r\n    placeholder: '',\r\n    value: ''\r\n  }\r\n\r\n  dialog.defaultConfirmOptions = {}\r\n\r\n  return dialog\r\n}\r\n\r\nmodule.exports = plugin\r\n\n},{\"domify\":1,\"form-serialize\":2}]},{},[3])(3)\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vex-dialog/dist/vex.dialog.js\n// module id = 45\n// module chunks = 0","\"use strict\";\r\n\r\nvar Mn = require('backbone.marionette'),\r\n\tRadio = require(\"backbone.radio\");\r\n\r\nmodule.exports = Mn.Object.extend({\r\n\r\n\tinitialize: function(options) {\r\n\t\tconsole.log(\"Action | app_start | initialize\");\r\n\t\tthis._commsChannel = Radio.channel(\"comms\");\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t\tthis._dispatchChannel.reply(\"app:start\", this.handleAppStart, this);\r\n\t},\r\n\r\n\thandleAppStart: function(data) {\r\n\t\tconsole.log(\"Action | app_start | handleAppStart()\");\r\n\t\tthis._commsChannel.request(\"txPEventsCheckDesign\");\r\n\t}\r\n\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./actions/app_start.js\n// module id = 46\n// module chunks = 0","\"use strict\";\r\n\r\nvar Mn = require('backbone.marionette'),\r\n\tRadio = require(\"backbone.radio\");\r\n\r\nmodule.exports = Mn.Object.extend({\r\n\r\n\r\n\tinitialize: function(options) {\r\n\r\n\t\tconsole.log(\"Action | io | initialize\");\r\n\r\n\t\tthis._storeChannel = Radio.channel(\"store\");\r\n\t\tthis._commsChannel = Radio.channel(\"comms\");\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\r\n\t\tthis._dispatchChannel.reply(\"io:designready\", this.handleDesignReady, this);\r\n\t\tthis._dispatchChannel.reply(\"io:layerinfo\", this.handleLayerInfo, this);\r\n\t\tthis._dispatchChannel.reply(\"io:peinfo\", this.handlePeInfo, this);\r\n\t\tthis._dispatchChannel.reply(\"io:send_events\", this.handleSendEvents, this);\r\n\t\tthis._dispatchChannel.reply(\"io:update_actions\", this.handleUpdateActions, this);\r\n\t\tthis._dispatchChannel.reply(\"io:cast_event\", this.handleCastEvent, this);\r\n\t\tthis._dispatchChannel.reply(\"io:send_event_start\", this.handleSendEventStart, this);\r\n\t\tthis._dispatchChannel.reply(\"io:send_event_play\", this.handleSendEventPlay, this);\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Handle the Socket IO \"designready\" command.\r\n\t * Will receive the project info here.\r\n\t * Actions will be to update the projectModel and dispatch other actions to get further info.\r\n\t *\r\n\t * @param object data\t\tKeys will be `project` and `status`\r\n\t *\r\n\t */\r\n\thandleDesignReady: function(data) {\r\n\r\n\t\tconsole.log(\"Action | io | handleDesignReady()\");\r\n\r\n\t\tvar project = _.extend({ status: data.status }, data.project);\r\n\t\tvar projectModel = this._storeChannel.request(\"projectModel\");\r\n\r\n\t\tswitch (data.status) {\r\n\r\n\t\t\tcase \"openready\":\r\n\t\t\t\tprojectModel.set(project);\r\n\t\t\t\tthis._commsChannel.request(\"txPEventsGetPEInfo\");\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"newready\":\r\n\t\t\t\tprojectModel.set(project);\r\n\t\t\t\tthis._commsChannel.request(\"txPEventsGetLayerInfo\");\r\n\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tprojectModel.clear();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Handle the Socket IO \"layerinfo\" command.\r\n\t *\r\n\t * @param object data\t\tObject with a `layers` key, which will be array of layers\r\n\t *\r\n\t */\r\n\thandleLayerInfo: function(data) {\r\n\r\n\t\tconsole.log(\"Action | io | handleLayerInfo()\");\r\n\r\n\t\t// Get reference to store\r\n\t\tvar store = this._storeChannel.request(\"store\");\r\n\r\n\t\t// Reset layers to be this default list\r\n\t\tstore.layers = [{\r\n\t\t\tlayerid: \"none\",\r\n\t\t\tlayername: \"none\"\r\n\t\t}];\r\n\r\n\t\t// Add the ones we received from the data\r\n\t\tArray.prototype.push.apply(store.layers, data.layers);\r\n\t\tstore.layerCollection.reset(store.layers);\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Handle the Socket IO \"peinfo\" command.\r\n\t *\r\n\t * @param object data\t\tObject with a `peinfo` key, which will be presentevent info data\r\n\t *\r\n\t */\r\n\thandlePeInfo: function(data) {\r\n\r\n\t\tconsole.log(\"Action | io | handlePeInfo()\");\r\n\r\n\t\tvar store = this._storeChannel.request(\"store\");\r\n\r\n\t\tvar evlists = data.peinfo.evl,\r\n\t\t\tseviews = data.peinfo.sev,\r\n\t\t\tgroups = data.peinfo.groups,\r\n\t\t\tgroup_arr = [],\r\n\t\t\tview_arr = [],\r\n\t\t\tevent_arr = [];\r\n\r\n\t\tif (evlists.length <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Groups\r\n\t\t//\r\n\t\tif (groups === undefined || groups.length == 0) {\r\n\t\t\tgroup_arr.push({ index: 0, name: \"default\" });\r\n\t\t}\r\n\r\n\t\tArray.prototype.push.apply(group_arr, groups);\r\n\t\tstore.groupCollection.reset(group_arr);\r\n\r\n\r\n\t\t// Views (create views from first entry)\r\n\t\t//\r\n\t\tvar peviews = evlists[0].peviews;\r\n\t\t// loop through the info and create the view entries\r\n\t\tfor (var vi = 0; vi < peviews.length; vi++) {\r\n\t\t\tview_arr.push(peviews[vi].viewstate);\r\n\t\t}\r\n\t\tstore.viewCollection.reset(view_arr);\r\n\r\n\r\n\t\t// Events. Create the PEs\r\n\t\t//\r\n\t\tvar firstGroup = store.groupCollection.first();\r\n\t\tevent_arr.push(store.eventCollection.getStartEvent(seviews, firstGroup.get(\"name\")));\r\n\r\n\t\t//  (pei = present event index)\r\n\t\tfor (var pei = 0; pei < evlists.length; pei++) {\r\n\t\t\tevent_arr.push(evlists[pei]);\r\n\t\t}\r\n\t\tstore.eventCollection.reset(event_arr);\r\n\r\n\t\t// Now that the data has been parsed and the relevant collections set, request the layer info\r\n\t\tthis._commsChannel.request(\"txPEventsGetLayerInfo\");\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * New version of `txPEventsArr`\r\n\t *\r\n\t * Gather the data then request the comms channel sends the message.\r\n\t *\r\n\t */\r\n\thandleSendEvents: function() {\r\n\r\n\t\tconsole.log(\"Action | io | handleSendEvents()\");\r\n\r\n\t\t// Get info from events to create raw array for sending\r\n\r\n\t\tvar statearr = [],\r\n\t\t\tgrouparr = [],\r\n\t\t\tstartEvent = {},\r\n\t\t\tseviews = [],\r\n\t\t\teventCollection = this._storeChannel.request(\"eventCollection\"),\r\n\t\t\tgroupCollection = this._storeChannel.request(\"groupCollection\");\r\n\r\n\t\t// Iterate through all the events\r\n\t\teventCollection.each(function(eventModel) {\r\n\t\t\tif (eventModel.get(\"name\") == \"startevent\") {\r\n\t\t\t\t// Pick out start event separately (use this to build the views)\r\n\t\t\t\tstartEvent = eventModel.attributes;\r\n\t\t\t} else {\r\n\t\t\t\t// Otherwise: regular event; just get attrs\r\n\t\t\t\tstatearr.push(eventModel.attributes);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Iterate through the groups.\r\n\t\t// We need to send/store the groups separately as we need both name AND `index` (for sorting)\r\n\t\tgroupCollection.each(function(groupModel) {\r\n\t\t\tgrouparr.push(groupModel.attributes);\r\n\t\t});\r\n\r\n\t\t// Params needed for the comms channel event handler.\r\n\t\tvar params = {\r\n\t\t\tstatearr: statearr,\r\n\t\t\tseviews: startEvent.peviews,\r\n\t\t\tgrouparr: grouparr\r\n\t\t};\r\n\r\n\t\tthis._commsChannel.request(\"txPEventsArr\", params);\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Update the actions (in peviews) on each event when they change in the designscreen.\r\n\t *\r\n\t */\r\n\thandleUpdateActions: function(data) {\r\n\r\n\t\tconsole.log(\"Action | io | handleUpdateActions()\");\r\n\r\n\t\tvar statesarr = data.statesarr,\r\n\t\t\teventCollection = this._storeChannel.request(\"eventCollection\");\r\n\r\n\t\t// Loop through the items we have received\r\n\t\t_.each(statesarr, function(eventArr) {\r\n\t\t\t// Find the eventModel in the collection using the ID\r\n\t\t\tvar eventModel = eventCollection.get(eventArr.id);\r\n\t\t\t// Set the peviews array of the eventModel with the new data\r\n\t\t\teventModel.set(\"peviews\", eventArr.peviews);\r\n\t\t});\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Handle the cast event action.\r\n\t * This is triggered when a whole event is clicked.\r\n\t *\r\n\t */\r\n\thandleCastEvent: function(data) {\r\n\r\n\t\tconsole.log(\"Action | io | handleCastEvent()\");\r\n\r\n\t\tvar event = data.event;\r\n\r\n\t\tif (event.get(\"name\") == \"startevent\") {\r\n\t\t\tthis._commsChannel.request(\"castStartEvent\", { \"event\": event });\r\n\t\t} else {\r\n\t\t\tthis._commsChannel.request(\"castPresentEvent\", { \"event\": event });\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Handle the txstartEvent sending\r\n\t *\r\n\t */\r\n\thandleSendEventStart: function(data) {\r\n\t\tconsole.log(\"Action | io | handleSendEventStart()\");\r\n\t\tthis._commsChannel.request(\"txStartEvent\", { \"event\": data.event });\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Handle the txPlayEvent sending\r\n\t *\r\n\t */\r\n\thandleSendEventPlay: function(data) {\r\n\t\tconsole.log(\"Action | io | handleSendEventPlay()\");\r\n\t\tthis._commsChannel.request(\"txPlayEvent\", { \"event\": data.event });\r\n\t}\r\n\r\n\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./actions/io_updates.js\n// module id = 47\n// module chunks = 0","\"use strict\";\r\n\r\nvar $ = require(\"jquery\"),\r\n\tMn = require('backbone.marionette'),\r\n\tRadio = require(\"backbone.radio\"),\r\n\tsortable = require(\"html5sortable/dist/html.sortable.js\");\r\n\r\n\r\nmodule.exports = Mn.Object.extend({\r\n\r\n\tinitialize: function(options) {\r\n\r\n\t\t// console.log(\"Action | store | initialize\");\r\n\r\n\t\tthis._commsChannel = Radio.channel(\"comms\");\r\n\t\tthis._storeChannel = Radio.channel(\"store\");\r\n\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t\tthis._dispatchChannel.reply(\"store:sort\", this.handleStoreSort, this);\r\n\t\tthis._dispatchChannel.reply(\"store:play_mode\", this.handlePlayMode, this);\r\n\r\n\t\tthis._eventCollection = this._storeChannel.request(\"eventCollection\");\r\n\t\tthis._groupCollection = this._storeChannel.request(\"groupCollection\");\r\n\t\tthis._store = this._storeChannel.request(\"store\");\r\n\t},\r\n\r\n\r\n\thandleStoreSort: function(data) {\r\n\r\n\t\t// console.log(\"Action | store | handleStoreSort()\");\r\n\r\n\t\tvar groupResult = this._sortGroups();\r\n\t\tif ( ! groupResult) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar eventResult = this._sortEvents();\r\n\t\tif ( ! eventResult) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._dispatchChannel.request(\"io:send_events\");\r\n\t},\r\n\r\n\t_sortGroups: function() {\r\n\r\n\t\tvar self = this,\r\n\t\t\tgroupNodes = sortable(\".event-group-list\", \"serialize\"),\r\n\t\t\tmodelList = [],\r\n\t\t\tmodelCid = null;\r\n\r\n\t\tif (groupNodes.length != 1) {\r\n\t\t\tconsole.warn(\"Sort groups: Not exactly one group list. Cancelling\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Get first and only grouplist\r\n\t\tgroupNodes = groupNodes[0];\r\n\r\n\t\t_.each(groupNodes.children, function(el, idx) {\r\n\t\t\tmodelCid = $(el).data(\"group-model-cid\");\r\n\t\t\tmodelList.push(self._groupCollection.remove(modelCid, { silent: true }));\r\n\t\t});\r\n\r\n\t\t_.each(modelList, function(groupModel, idx) {\r\n\t\t\tself._groupCollection.add(groupModel, { at: idx, silent: true });\r\n\t\t});\r\n\r\n\t\tself._groupCollection.updateIndexes();\r\n\r\n\t\t// console.log(\"New Order:\");\r\n\t\t// console.log(self._groupCollection.pluck(\"name\"));\r\n\r\n\t\treturn true;\r\n\t},\r\n\r\n\t_sortEvents: function() {\r\n\r\n\t\tvar self = this,\r\n\t\t\teventNodes = sortable(\".js-event-list\", \"serialize\"),\r\n\t\t\teventModelList = [],\r\n\t\t\teventModelCid = null,\r\n\t\t\teventModel = null,\r\n\t\t\tgroupModelCid = null,\r\n\t\t\tgroupModel = null;\r\n\r\n\t\tif (eventNodes.length == 0) {\r\n\t\t\tconsole.warn(\"Sort events: No event lists\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Iterate through all the sortable event lists.\r\n\t\t// This list seems to be in group order too - which is perfect.\r\n\t\t_.each(eventNodes, function(eventGroup, groupIdx) {\r\n\r\n\t\t\t// eventGroup has \"list\" and \"children\"\r\n\t\t\t// eventGroup.list will be EventListView <ul> and will have the groupModel cid as data attr.\r\n\r\n\t\t\t// Get the group data for the list so we can update the model's \"group\" property\r\n\t\t\tgroupModelCid = $(eventGroup.list).data(\"group-model-cid\");\r\n\t\t\tgroupModel = self._groupCollection.get(groupModelCid);\r\n\r\n\t\t\t// Loop through the child <li> elements (EventItemView)\r\n\t\t\t_.each(eventGroup.children, function(eventEl, eventIdx) {\r\n\t\t\t\t// Get model via cid (on data attr)\r\n\t\t\t\teventModelCid = $(eventEl).data(\"event-model-cid\");\r\n\t\t\t\t// Remove the event from the collection\r\n\t\t\t\teventModel = self._eventCollection.remove(eventModelCid, { silent: true });\r\n\t\t\t\t// Update the event's group property\r\n\t\t\t\teventModel.set({ \"group\": groupModel.get(\"name\") }, { silent: true });\r\n\t\t\t\t// Add the model to a temporary array - which holds our new order.\r\n\t\t\t\teventModelList.push(eventModel);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// Re-add our ordered model list back to the collection.\r\n\t\t_.each(eventModelList, function(eventModelItem, idx) {\r\n\t\t\tself._eventCollection.add(eventModelItem, { at: idx, silent: true });\r\n\t\t});\r\n\r\n\t\tvar startEventModel = self._eventCollection.findWhere({ name: \"startevent\" });\r\n\t\tself._eventCollection.remove(startEventModel);\r\n\t\tstartEventModel.set(\"group\", self._groupCollection.first().get(\"name\"));\r\n\t\tself._eventCollection.add(startEventModel, { at: 0 });\r\n\r\n\t\t// Ensure \"index\" properties are updated for all event items\r\n\t\tself._eventCollection.updateIndexes();\r\n\r\n\t\tself._eventCollection.each(function(m) {\r\n\t\t\t// console.log(\"[\" + m.get(\"group\") + \"] \" + m.get(\"index\") + \": \" + m.get(\"name\"));\r\n\t\t});\r\n\r\n\t\treturn true;\r\n\t},\r\n\r\n\r\n\thandlePlayMode: function(data) {\r\n\t\tthis._store.setPlayMode(data.playMode);\r\n\t}\r\n\r\n\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./actions/store.js\n// module id = 48\n// module chunks = 0","\"use strict\";\r\n\r\nvar Mn = require('backbone.marionette'),\r\n\tRadio = require(\"backbone.radio\");\r\n\r\nmodule.exports = Mn.Object.extend({\r\n\r\n\r\n\tinitialize: function(options) {\r\n\r\n\t\tconsole.log(\"Action | views | initialize\");\r\n\r\n\t\tthis._storeChannel = Radio.channel(\"store\");\r\n\t\tthis._commsChannel = Radio.channel(\"comms\");\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t\tthis._appChannel = Radio.channel(\"app\");\r\n\r\n\t\tthis._dispatchChannel.reply(\"view:add\", this.handleAddView, this);\r\n\t\tthis._dispatchChannel.reply(\"view:edit\", this.handleEditView, this);\r\n\t\tthis._dispatchChannel.reply(\"view:rename\", this.handleRenameView, this);\r\n\t\tthis._dispatchChannel.reply(\"view:delete\", this.handleDeleteView, this);\r\n\t},\r\n\r\n\r\n\thandleAddView: function(data) {\r\n\r\n\t\tvar viewCollection = this._storeChannel.request(\"viewCollection\"),\r\n\t\t\teventCollection = this._storeChannel.request(\"eventCollection\");\r\n\r\n\t\tif ( ! viewCollection.canAddView()) {\r\n\t\t\tthis._appChannel.request(\"ui:error\", {\r\n\t\t\t\tmessage: \"Maximum number of views has been reached.\",\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar newView = viewCollection.createNew();\r\n\r\n\t\tif (newView) {\r\n\r\n\t\t\t// Tell the event collection to update its events with the new view\r\n\t\t\teventCollection.addView(newView);\r\n\r\n\t\t\t// Request a comms sync for data\r\n\t\t\tthis._dispatchChannel.request(\"io:send_events\");\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._dispatchChannel.request(\"ui:error\", {\r\n\t\t\tmessage: \"Unable to create new view\"\r\n\t\t});\r\n\t},\r\n\r\n\r\n\thandleEditView: function(data) {\r\n\t\t// This one is easy, just raise event on the appchannel so the main view can show it.\r\n\t\tthis._appChannel.trigger(\"view:edit\", data);\r\n\t},\r\n\r\n\r\n\thandleRenameView: function(data) {\r\n\r\n\t\t// Rename the view in all the events\r\n\t\tvar eventCollection = this._storeChannel.request(\"eventCollection\");\r\n\t\teventCollection.renameView(data.oldName, data.newName);\r\n\r\n\t\t// Request a comms sync for data\r\n\t\tthis._dispatchChannel.request(\"io:send_events\");\r\n\t},\r\n\r\n\r\n\thandleDeleteView: function(data) {\r\n\r\n\t\tvar viewCollection = this._storeChannel.request(\"viewCollection\"),\r\n\t\t\teventCollection = this._storeChannel.request(\"eventCollection\");\r\n\r\n\t\t// Remove view from the view collection\r\n\t\tviewCollection.remove(data.view);\r\n\r\n\t\t// remove the view from all events\r\n\t\teventCollection.deleteView(data.view);\r\n\r\n\t\t// Request a comms sync for data\r\n\t\tthis._dispatchChannel.request(\"io:send_events\");\r\n\t}\r\n\r\n\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./actions/views.js\n// module id = 49\n// module chunks = 0","\"use strict\";\r\n\r\nvar Mn = require('backbone.marionette'),\r\n\tRadio = require(\"backbone.radio\");\r\n\r\nmodule.exports = Mn.Object.extend({\r\n\r\n\r\n\tinitialize: function(options) {\r\n\r\n\t\tconsole.log(\"Action | groups | initialize\");\r\n\r\n\t\tthis._storeChannel = Radio.channel(\"store\");\r\n\t\tthis._commsChannel = Radio.channel(\"comms\");\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t\tthis._appChannel = Radio.channel(\"app\");\r\n\r\n\t\tthis._dispatchChannel.reply(\"group:add\", this.handleAddGroup, this);\r\n\t\tthis._dispatchChannel.reply(\"group:edit\", this.handleEditGroup, this);\r\n\t\tthis._dispatchChannel.reply(\"group:rename\", this.handleRenameGroup, this);\r\n\t\tthis._dispatchChannel.reply(\"group:delete\", this.handleDeleteGroup, this);\r\n\t},\r\n\r\n\thandleAddGroup: function(data) {\r\n\r\n\t\tconsole.log(\"Action | groups | handleAddGroup\");\r\n\r\n\t\tvar groupCollection = this._storeChannel.request(\"groupCollection\");\r\n\r\n\t\tif ( ! groupCollection.canAddGroup()) {\r\n\t\t\tthis._appChannel.request(\"ui:error\", {\r\n\t\t\t\tmessage: \"Maximum number of groups has been reached.\",\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar newGroup = groupCollection.createNew();\r\n\r\n\t\tif (newGroup) {\r\n\t\t\tgroupCollection.updateIndexes();\r\n\t\t\t// Request a comms sync for data\r\n\t\t\tthis._dispatchChannel.request(\"io:send_events\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.appchannel.request(\"ui:error\", {\r\n\t\t\tmessage: \"Unable to create new group\"\r\n\t\t});\r\n\t},\r\n\r\n\thandleEditGroup: function(data) {\r\n\t\t// This one is easy, just raise event on the appchannel so the main view can show it.\r\n\t\tthis._appChannel.trigger(\"group:edit\", data);\r\n\t},\r\n\r\n\thandleRenameGroup: function(data) {\r\n\r\n\t\tconsole.log(\"Action | groups | handleRenameGroup\");\r\n\r\n\t\t// Rename the view in all the events\r\n\t\tvar eventCollection = this._storeChannel.request(\"eventCollection\");\r\n\t\teventCollection.renameGroup(data.oldName, data.newName);\r\n\r\n\t\t// Request a comms sync for data\r\n\t\tthis._dispatchChannel.request(\"io:send_events\");\r\n\t},\r\n\r\n\r\n\thandleDeleteGroup: function(data) {\r\n\r\n\t\tconsole.log(\"Action | groups | handleDeleteGroup\");\r\n\r\n\t\tvar groupCollection = this._storeChannel.request(\"groupCollection\"),\r\n\t\t\teventCollection = this._storeChannel.request(\"eventCollection\");\r\n\r\n\t\tif (groupCollection.length == 1) {\r\n\t\t\tthis._appChannel.request(\"ui:error\", {\r\n\t\t\t\tmessage: \"You cannot delete the last remaining group.\"\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar groupName = data.group.get(\"name\");\r\n\r\n\t\t// Remove events from collection where their group name matches groupName being deleted.\r\n\t\teventCollection.remove(eventCollection.filter(function(eventModel) {\r\n\t\t\treturn (eventModel.get(\"group\") == groupName && eventModel.get(\"name\") !== \"startevent\");\r\n\t\t}));\r\n\r\n\t\t// Remove group from the group collection\r\n\t\tgroupCollection.remove(data.group);\r\n\r\n\t\tgroupCollection.updateIndexes();\r\n\r\n\t\t// Request a comms sync for data\r\n\t\tthis._dispatchChannel.request(\"io:send_events\");\r\n\t}\r\n\r\n\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./actions/groups.js\n// module id = 50\n// module chunks = 0","\"use strict\";\r\n\r\nvar Mn = require('backbone.marionette'),\r\n\tRadio = require(\"backbone.radio\");\r\n\r\nmodule.exports = Mn.Object.extend({\r\n\r\n\r\n\tinitialize: function(options) {\r\n\r\n\t\tconsole.log(\"Action | events | initialize\");\r\n\r\n\t\tthis._storeChannel = Radio.channel(\"store\");\r\n\t\tthis._commsChannel = Radio.channel(\"comms\");\r\n\t\tthis._dispatchChannel = Radio.channel(\"dispatch\");\r\n\t\tthis._appChannel = Radio.channel(\"app\");\r\n\r\n\t\tthis._store = this._storeChannel.request(\"store\");\r\n\r\n\t\tthis._dispatchChannel.reply(\"event:add\", this.handleAddEvent, this);\r\n\t\tthis._dispatchChannel.reply(\"event:select\", this.handleSelectEvent, this);\r\n\t\tthis._dispatchChannel.reply(\"event:change\", this.handleChangeEvent, this);\r\n\t\tthis._dispatchChannel.reply(\"event:delete\", this.handleDeleteEvent, this);\r\n\t\tthis._dispatchChannel.reply(\"event:start\", this.handleStartEvent, this);\r\n\t\tthis._dispatchChannel.reply(\"event:play\", this.handlePlayEvent, this);\r\n\t\tthis._dispatchChannel.reply(\"event:next\", this.handleNextEvent, this);\r\n\t\tthis._dispatchChannel.reply(\"event:prev\", this.handlePrevEvent, this);\r\n\t},\r\n\r\n\r\n\thandleAddEvent: function(data) {\r\n\r\n\t\tconsole.log(\"Action | events | handleAddEvent\");\r\n\r\n\t\tvar eventCollection = this._storeChannel.request(\"eventCollection\");\r\n\r\n\t\tvar params = {};\r\n\r\n\t\tif (data.group) {\r\n\t\t\tparams.group = data.group.get(\"name\");\r\n\t\t}\r\n\r\n\t\tvar newEvent = eventCollection.createNew(params);\r\n\r\n\t\tif (newEvent) {\r\n\t\t\teventCollection.updateIndexes();\r\n\t\t\t// Highlight new event\r\n\t\t\tthis._dispatchChannel.request(\"event:select\", { event: newEvent });\r\n\t\t\t// Comms update to send data\r\n\t\t\tthis._dispatchChannel.request(\"io:send_events\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._appChannel.request(\"ui:error\", {\r\n\t\t\tmessage: \"Unable to create new event.\"\r\n\t\t});\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Handle the selection of an event.\r\n\t *\r\n\t */\r\n\thandleSelectEvent: function(data) {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tconsole.log(\"Action | events | handleSelectEvent\");\r\n\r\n\t\t// Call collection function to select the event.\r\n\t\t// This triggers select/deselect event on each model as appropriate.\r\n\t\tvar eventCollection = this._storeChannel.request(\"eventCollection\");\r\n\t\teventCollection.selectEvent(data.event);\r\n\r\n\t\tif (data.event !== null) {\r\n\r\n\t\t\tif ( ! this._store.getPlayMode()) {\r\n\t\t\t\t// Raise UI event on the appchannel so the main view can show the edit view.\r\n\t\t\t\tthis._appChannel.trigger(\"event:edit\", data);\r\n\t\t\t}\r\n\r\n\t\t\t// Cast it\r\n\t\t\tthis._dispatchChannel.request(\"io:cast_event\", { event: data.event });\r\n\r\n\t\t\t// Are we in Play mode?\r\n\t\t\tif (this._store.getPlayMode() && data.event.get(\"name\") !== \"startevent\") {\r\n\t\t\t\t_.delay(function() {\r\n\t\t\t\t\tself._dispatchChannel.request(\"io:send_event_play\", { event: data.event });\r\n\t\t\t\t}, 250);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t},\r\n\r\n\r\n\thandleChangeEvent: function(data) {\r\n\t\tconsole.log(\"Action | events | handleChangeEvent\");\r\n\t\t// Request a comms sync for data\r\n\t\tthis._dispatchChannel.request(\"io:send_events\");\r\n\t},\r\n\r\n\r\n\thandleDeleteEvent: function(data) {\r\n\t\tvar eventCollection = this._storeChannel.request(\"eventCollection\");\r\n\t\teventCollection.remove(data.event);\r\n\t\teventCollection.updateIndexes();\r\n\t\tthis._dispatchChannel.request(\"io:send_events\");\r\n\t},\r\n\r\n\r\n\thandleStartEvent: function(data) {\r\n\t\tthis._dispatchChannel.request(\"io:send_event_start\", { event: data.event });\r\n\t},\r\n\r\n\r\n\thandlePlayEvent: function(data) {\r\n\t\tthis._dispatchChannel.request(\"io:send_event_play\", { event: data.event });\r\n\t},\r\n\r\n\r\n\thandleNextEvent: function() {\r\n\r\n\t\tvar eventCollection = this._storeChannel.request(\"eventCollection\"),\r\n\t\t\tindexOfSelected = eventCollection.indexOf(eventCollection.selectedEvent),\r\n\t\t\tindexOfNext = indexOfSelected+1,\r\n\t\t\tnextEvent = eventCollection.at(indexOfNext);\r\n\r\n\t\tif (nextEvent) {\r\n\t\t\tthis._dispatchChannel.request(\"event:select\", { event: nextEvent });\r\n\t\t}\r\n\t},\r\n\r\n\r\n\thandlePrevEvent: function() {\r\n\r\n\t\tvar eventCollection = this._storeChannel.request(\"eventCollection\"),\r\n\t\t\tindexOfSelected = eventCollection.indexOf(eventCollection.selectedEvent),\r\n\t\t\tindexOfNext = indexOfSelected-1,\r\n\t\t\tprevEvent = eventCollection.at(indexOfNext);\r\n\r\n\t\tif (prevEvent) {\r\n\t\t\tthis._dispatchChannel.request(\"event:select\", { event: prevEvent });\r\n\t\t}\r\n\t}\r\n\r\n\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./actions/events.js\n// module id = 51\n// module chunks = 0"],"sourceRoot":""}